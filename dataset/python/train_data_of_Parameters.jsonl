{"comment_sentence_id": 818, "class": "TemplateDoesNotExist", "comment_sentence": "origin is an origin object or duck type and status is a string with the", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "origin is an origin object or duck type and status is a string with the", "final_sentence": "origin is an origin object or duck type and status is a string with the"}
{"comment_sentence_id": 812, "class": "TemplateDoesNotExist", "comment_sentence": "backend", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "backend", "final_sentence": "backend"}
{"comment_sentence_id": 935, "class": "Audio", "comment_sentence": "embed boolean", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "embed boolean", "final_sentence": "embed boolean"}
{"comment_sentence_id": 4240, "class": "Adam", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 4536, "class": "BCEWithLogitsLoss", "comment_sentence": "input math n, where math means, any number of additional dimensions", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "input math n where math means any number of additional dimensions", "final_sentence": "input math n where math means any number of additional dimensions"}
{"comment_sentence_id": 3739, "class": "Request", "comment_sentence": "take place.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "take place", "final_sentence": "take place"}
{"comment_sentence_id": 2009, "class": "PlotAccessor", "comment_sentence": "hexbin hexbin plot.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "hexbin hexbin plot", "final_sentence": "hexbin hexbin plot"}
{"comment_sentence_id": 4533, "class": "BCEWithLogitsLoss", "comment_sentence": "pos weight tensor, optional a weight of positive examples.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "pos weight tensor optional a weight of positive examples", "final_sentence": "pos weight tensor optional a weight of positive examples"}
{"comment_sentence_id": 5355, "class": "MultiLabelMarginLoss", "comment_sentence": "none mean sum .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "none mean sum", "final_sentence": "none mean sum"}
{"comment_sentence_id": 3742, "class": "Request", "comment_sentence": "if a dictionary or", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a dictionary or", "final_sentence": "if a dictionary or"}
{"comment_sentence_id": 4514, "class": "BCEWithLogitsLoss", "comment_sentence": "ignored", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 485, "class": "Migration", "comment_sentence": "operations a list of operation instances, probably from django^db.migrations^operations", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "operations a list of operation instances probably from django db migrations operations", "final_sentence": "operations a list of operation instances probably from django db migrations operations"}
{"comment_sentence_id": 1891, "class": "IntegerArray", "comment_sentence": "whether to copy the values and mask .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether to copy the values and mask", "final_sentence": "whether to copy the values and mask"}
{"comment_sentence_id": 2547, "class": "DataViewSequence", "comment_sentence": "each entry is an instance of item class .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "each entry is an instance of item class", "final_sentence": "each entry is an instance of item class"}
{"comment_sentence_id": 3848, "class": "Retry", "comment_sentence": "these are retries made on responses, where status code matches", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "these are retries made on responses where status code matches", "final_sentence": "these are retries made on responses where status code matches"}
{"comment_sentence_id": 5087, "class": "EmbeddingBag", "comment_sentence": "see", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 817, "class": "TemplateDoesNotExist", "comment_sentence": "is formatted as a list of tuples containing origin, status , where", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "is formatted as a list of tuples containing origin status where", "final_sentence": "is formatted as a list of tuples containing origin status where"}
{"comment_sentence_id": 5359, "class": "MultiLabelMarginLoss", "comment_sentence": "note attr size average", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "note attr size average", "final_sentence": "note attr size average"}
{"comment_sentence_id": 3856, "class": "Retry", "comment_sentence": "see attr retry^default method whitelist .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "see attr retry default method whitelist", "final_sentence": "see attr retry default method whitelist"}
{"comment_sentence_id": 3409, "class": "Option", "comment_sentence": "param is flag forces this option to act as a flag.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param is flag forces this option to act as a flag", "final_sentence": "param is flag forces this option to act as a flag"}
{"comment_sentence_id": 3842, "class": "Retry", "comment_sentence": "a redirect is a http response with a status code 301, 302, 303, 307 or", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a redirect is a http response with a status code 301 302 303 307 or", "final_sentence": "a redirect is a http response with a status code 301 302 303 307 or"}
{"comment_sentence_id": 2056, "class": "PlotAccessor", "comment_sentence": "center .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "center", "final_sentence": "center"}
{"comment_sentence_id": 934, "class": "Audio", "comment_sentence": "path to a local file to load the data from.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "path to a local file to load the data from", "final_sentence": "path to a local file to load the data from"}
{"comment_sentence_id": 1731, "class": "CategoricalIndex", "comment_sentence": "name object, optional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "name object optional", "final_sentence": "name object optional"}
{"comment_sentence_id": 823, "class": "TemplateDoesNotExist", "comment_sentence": "encapsulate multiple exceptions when loading templates from multiple", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "encapsulate multiple exceptions when loading templates from multiple", "final_sentence": "encapsulate multiple exceptions when loading templates from multiple"}
{"comment_sentence_id": 142, "class": "BaseCommand", "comment_sentence": "app registry.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "app registry", "final_sentence": "app registry"}
{"comment_sentence_id": 2617, "class": "Environment", "comment_sentence": "useful default for linux and os x systems as well as web", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "useful default for linux and os x systems as well as web", "final_sentence": "useful default for linux and os x systems as well as web"}
{"comment_sentence_id": 5517, "class": "SGD", "comment_sentence": "nesterov bool, optional enables nesterov momentum default false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "nesterov bool optional enables nesterov momentum default false", "final_sentence": "nesterov bool optional enables nesterov momentum default false"}
{"comment_sentence_id": 4305, "class": "AdaptiveMaxPool3d", "comment_sentence": "useful to pass to nn^maxunpool3d.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "useful to pass to nn maxunpool3d", "final_sentence": "useful to pass to nn maxunpool3d"}
{"comment_sentence_id": 3622, "class": "Path", "comment_sentence": "it", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "it", "final_sentence": "it"}
{"comment_sentence_id": 2028, "class": "PlotAccessor", "comment_sentence": "logy bool or sym default false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "logy bool or sym default false", "final_sentence": "logy bool or sym default false"}
{"comment_sentence_id": 2573, "class": "Environment", "comment_sentence": "modifications on environments after the first template was loaded", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "modifications on environments after the first template was loaded", "final_sentence": "modifications on environments after the first template was loaded"}
{"comment_sentence_id": 4736, "class": "Conv3d", "comment_sentence": "a tuple of three ints in which case, the first int is used for the depth dimension,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a tuple of three ints in which case the first int is used for the depth dimension", "final_sentence": "a tuple of three ints in which case the first int is used for the depth dimension"}
{"comment_sentence_id": 4521, "class": "BCEWithLogitsLoss", "comment_sentence": "when attr reduce is false , returns a loss per", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "when attr reduce is false returns a loss per", "final_sentence": "when attr reduce is false returns a loss per"}
{"comment_sentence_id": 824, "class": "TemplateDoesNotExist", "comment_sentence": "engines.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "engines", "final_sentence": "engines"}
{"comment_sentence_id": 2015, "class": "PlotAccessor", "comment_sentence": "if a string is passed, print the string", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a string is passed print the string", "final_sentence": "if a string is passed print the string"}
{"comment_sentence_id": 3740, "class": "Request", "comment_sentence": "param json json for the body to attach to the request if files or data is not specified .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param json json for the body to attach to the request if files or data is not specified", "final_sentence": "param json json for the body to attach to the request if files or data is not specified"}
{"comment_sentence_id": 5225, "class": "FisherSnedecor", "comment_sentence": "df1 float or tensor degrees of freedom parameter 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "df1 float or tensor degrees of freedom parameter 1", "final_sentence": "df1 float or tensor degrees of freedom parameter 1"}
{"comment_sentence_id": 4511, "class": "BCEWithLogitsLoss", "comment_sentence": "some losses, there are multiple elements per sample.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "some losses there are multiple elements per sample", "final_sentence": "some losses there are multiple elements per sample"}
{"comment_sentence_id": 3747, "class": "Request", "comment_sentence": "param hooks dictionary of callback hooks, for internal usage.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param hooks dictionary of callback hooks for internal usage", "final_sentence": "param hooks dictionary of callback hooks for internal usage"}
{"comment_sentence_id": 2667, "class": "Environment", "comment_sentence": "if", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if", "final_sentence": "if"}
{"comment_sentence_id": 3885, "class": "Retry", "comment_sentence": "the list is in the order", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the list is in the order", "final_sentence": "the list is in the order"}
{"comment_sentence_id": 5578, "class": "Subset", "comment_sentence": "arguments", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 3420, "class": "Option", "comment_sentence": "arguments.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 1713, "class": "CategoricalIndex", "comment_sentence": "if categories are given, values not in", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if categories are given values not in", "final_sentence": "if categories are given values not in"}
{"comment_sentence_id": 140, "class": "BaseCommand", "comment_sentence": "self^check app configs from handle , where app configs", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "self check app configs from handle where app configs", "final_sentence": "self check app configs from handle where app configs"}
{"comment_sentence_id": 5082, "class": "EmbeddingBag", "comment_sentence": "into consideration.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "into consideration", "final_sentence": "into consideration"}
{"comment_sentence_id": 5358, "class": "MultiLabelMarginLoss", "comment_sentence": "elements in the output, sum the output will be summed.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "elements in the output sum the output will be summed", "final_sentence": "elements in the output sum the output will be summed"}
{"comment_sentence_id": 321, "class": "DblFromGeom", "comment_sentence": "in by reference as the last argument.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "in by reference as the last argument", "final_sentence": "in by reference as the last argument"}
{"comment_sentence_id": 1887, "class": "IntegerArray", "comment_sentence": "a 1 d integer dtype array.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a 1 d integer dtype array", "final_sentence": "a 1 d integer dtype array"}
{"comment_sentence_id": 5354, "class": "MultiLabelMarginLoss", "comment_sentence": "reduction string, optional specifies the reduction to apply to the output", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "reduction string optional specifies the reduction to apply to the output", "final_sentence": "reduction string optional specifies the reduction to apply to the output"}
{"comment_sentence_id": 2675, "class": "Environment", "comment_sentence": "cache for the internal jinja bytecode so that templates don t", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "cache for the internal jinja bytecode so that templates don t", "final_sentence": "cache for the internal jinja bytecode so that templates don t"}
{"comment_sentence_id": 2605, "class": "Environment", "comment_sentence": "removed block, not variable tag!", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "removed block not variable tag", "final_sentence": "removed block not variable tag"}
{"comment_sentence_id": 5702, "class": "Unfold", "comment_sentence": "how the sliding blocks are retrieved.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "how the sliding blocks are retrieved", "final_sentence": "how the sliding blocks are retrieved"}
{"comment_sentence_id": 5088, "class": "EmbeddingBag", "comment_sentence": "notes for more details regarding sparse gradients.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "notes for more details regarding sparse gradients", "final_sentence": "notes for more details regarding sparse gradients"}
{"comment_sentence_id": 4386, "class": "BatchNorm1d", "comment_sentence": "default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4303, "class": "AdaptiveMaxPool3d", "comment_sentence": "be the same as that of the input.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "be the same as that of the input", "final_sentence": "be the same as that of the input"}
{"comment_sentence_id": 3845, "class": "Retry", "comment_sentence": "set to false to disable and imply raise on redirect false .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to false to disable and imply raise on redirect false", "final_sentence": "set to false to disable and imply raise on redirect false"}
{"comment_sentence_id": 2003, "class": "PlotAccessor", "comment_sentence": "box boxplot", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "box boxplot", "final_sentence": "box boxplot"}
{"comment_sentence_id": 1990, "class": "PlotAccessor", "comment_sentence": "the object for which the method is called.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the object for which the method is called", "final_sentence": "the object for which the method is called"}
{"comment_sentence_id": 5071, "class": "EmbeddingBag", "comment_sentence": "max norm float, optional if given, each embedding vector with norm larger than attr max norm", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "max norm float optional if given each embedding vector with norm larger than attr max norm", "final_sentence": "max norm float optional if given each embedding vector with norm larger than attr max norm"}
{"comment_sentence_id": 3609, "class": "Path", "comment_sentence": "param exists if set to true, the file or directory needs to exist for", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param exists if set to true the file or directory needs to exist for", "final_sentence": "param exists if set to true the file or directory needs to exist for"}
{"comment_sentence_id": 5513, "class": "SGD", "comment_sentence": "lr float learning rate", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "lr float learning rate", "final_sentence": "lr float learning rate"}
{"comment_sentence_id": 3675, "class": "PoolManager", "comment_sentence": "class urllib3^connectionpool.connectionpool instances.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "class urllib3 connectionpool connectionpool instances", "final_sentence": "class urllib3 connectionpool connectionpool instances"}
{"comment_sentence_id": 1653, "class": "CategoricalDtype", "comment_sentence": "false if there is no existing ordered to maintain.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "false if there is no existing ordered to maintain", "final_sentence": "false if there is no existing ordered to maintain"}
{"comment_sentence_id": 4506, "class": "BCEWithLogitsLoss", "comment_sentence": "if given, has to be a tensor of size nbatch .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if given has to be a tensor of size nbatch", "final_sentence": "if given has to be a tensor of size nbatch"}
{"comment_sentence_id": 2610, "class": "Environment", "comment_sentence": "from the start of a line to a block.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "from the start of a line to a block", "final_sentence": "from the start of a line to a block"}
{"comment_sentence_id": 944, "class": "Audio", "comment_sentence": "only required when data parameter is being used as an array", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "only required when data parameter is being used as an array", "final_sentence": "only required when data parameter is being used as an array"}
{"comment_sentence_id": 2654, "class": "Environment", "comment_sentence": "cache size", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "cache size", "final_sentence": "cache size"}
{"comment_sentence_id": 3403, "class": "Option", "comment_sentence": "param confirmation prompt if set then the value will need to be confirmed", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param confirmation prompt if set then the value will need to be confirmed", "final_sentence": "param confirmation prompt if set then the value will need to be confirmed"}
{"comment_sentence_id": 5510, "class": "SGD", "comment_sentence": "args", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1856, "class": "ExcelFile", "comment_sentence": "acceptable values are none, xlrd , openpyxl or odf .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "acceptable values are none xlrd openpyxl or odf", "final_sentence": "acceptable values are none xlrd openpyxl or odf"}
{"comment_sentence_id": 3821, "class": "Retry", "comment_sentence": "takes precedence over other counts.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "takes precedence over other counts", "final_sentence": "takes precedence over other counts"}
{"comment_sentence_id": 2021, "class": "PlotAccessor", "comment_sentence": "legend bool or reverse", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "legend bool or reverse", "final_sentence": "legend bool or reverse"}
{"comment_sentence_id": 2062, "class": "PlotAccessor", "comment_sentence": "yerr dataframe, series, array like, dict and str", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "yerr dataframe series array like dict and str", "final_sentence": "yerr dataframe series array like dict and str"}
{"comment_sentence_id": 126, "class": "BaseCommand", "comment_sentence": "a boolean indicating whether the command outputs sql", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a boolean indicating whether the command outputs sql", "final_sentence": "a boolean indicating whether the command outputs sql"}
{"comment_sentence_id": 1279, "class": "ConfigDict", "comment_sentence": "a default value", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a default value", "final_sentence": "a default value"}
{"comment_sentence_id": 4509, "class": "BCEWithLogitsLoss", "comment_sentence": "the losses are averaged over each loss element in the batch.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the losses are averaged over each loss element in the batch", "final_sentence": "the losses are averaged over each loss element in the batch"}
{"comment_sentence_id": 3743, "class": "Request", "comment_sentence": "list of tuples key, value is provided, form encoding will", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "list of tuples key value is provided form encoding will", "final_sentence": "list of tuples key value is provided form encoding will"}
{"comment_sentence_id": 4379, "class": "BatchNorm1d", "comment_sentence": "momentum the value used for the running mean and running var", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "momentum the value used for the running mean and running var", "final_sentence": "momentum the value used for the running mean and running var"}
{"comment_sentence_id": 4375, "class": "BatchNorm1d", "comment_sentence": "num features math c from an expected input of size", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "num features math c from an expected input of size", "final_sentence": "num features math c from an expected input of size"}
{"comment_sentence_id": 4723, "class": "Conv3d", "comment_sentence": "attr in channels and attr out channels must both be divisible by", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr in channels and attr out channels must both be divisible by", "final_sentence": "attr in channels and attr out channels must both be divisible by"}
{"comment_sentence_id": 5089, "class": "EmbeddingBag", "comment_sentence": "note this option is not", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "note this option is not", "final_sentence": "note this option is not"}
{"comment_sentence_id": 5710, "class": "Unfold", "comment_sentence": "kernel size int or tuple the size of the sliding blocks", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "kernel size int or tuple the size of the sliding blocks", "final_sentence": "kernel size int or tuple the size of the sliding blocks"}
{"comment_sentence_id": 4532, "class": "BCEWithLogitsLoss", "comment_sentence": "default mean", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 5450, "class": "OneHotCategorical", "comment_sentence": "probs tensor event probabilities", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "probs tensor event probabilities", "final_sentence": "probs tensor event probabilities"}
{"comment_sentence_id": 5069, "class": "EmbeddingBag", "comment_sentence": "num embeddings int size of the dictionary of embeddings", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "num embeddings int size of the dictionary of embeddings", "final_sentence": "num embeddings int size of the dictionary of embeddings"}
{"comment_sentence_id": 2603, "class": "Environment", "comment_sentence": "trim blocks", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "trim blocks", "final_sentence": "trim blocks"}
{"comment_sentence_id": 950, "class": "Audio", "comment_sentence": "range.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "range", "final_sentence": "range"}
{"comment_sentence_id": 4391, "class": "BatchNorm1d", "comment_sentence": "default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4281, "class": "Adamax", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 5341, "class": "MultiLabelMarginLoss", "comment_sentence": "some losses, there are multiple elements per sample.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "some losses there are multiple elements per sample", "final_sentence": "some losses there are multiple elements per sample"}
{"comment_sentence_id": 4388, "class": "BatchNorm1d", "comment_sentence": "module tracks the running mean and variance, and when set to false ,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "module tracks the running mean and variance and when set to false", "final_sentence": "module tracks the running mean and variance and when set to false"}
{"comment_sentence_id": 2597, "class": "Environment", "comment_sentence": "see also ref line statements .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "see also ref line statements", "final_sentence": "see also ref line statements"}
{"comment_sentence_id": 2079, "class": "PlotAccessor", "comment_sentence": "versionadded 10.0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionadded 10 0", "final_sentence": "versionadded 10 0"}
{"comment_sentence_id": 2036, "class": "PlotAccessor", "comment_sentence": "yticks sequence", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "yticks sequence", "final_sentence": "yticks sequence"}
{"comment_sentence_id": 2582, "class": "Environment", "comment_sentence": "variable start string", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "variable start string", "final_sentence": "variable start string"}
{"comment_sentence_id": 3408, "class": "Option", "comment_sentence": "input.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "input", "final_sentence": "input"}
{"comment_sentence_id": 127, "class": "BaseCommand", "comment_sentence": "statements if true , the output will automatically be", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "statements if true the output will automatically be", "final_sentence": "statements if true the output will automatically be"}
{"comment_sentence_id": 822, "class": "TemplateDoesNotExist", "comment_sentence": "this is used to", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this is used to", "final_sentence": "this is used to"}
{"comment_sentence_id": 1885, "class": "IntegerArray", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4766, "class": "Conv3d", "comment_sentence": "bias bool, optional if true , adds a learnable bias to the output.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "bias bool optional if true adds a learnable bias to the output", "final_sentence": "bias bool optional if true adds a learnable bias to the output"}
{"comment_sentence_id": 2436, "class": "CallBlock", "comment_sentence": "the unnamed macro as caller argument this node holds.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the unnamed macro as caller argument this node holds", "final_sentence": "the unnamed macro as caller argument this node holds"}
{"comment_sentence_id": 2637, "class": "Environment", "comment_sentence": "a callable that can be used to process the result of a variable", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a callable that can be used to process the result of a variable", "final_sentence": "a callable that can be used to process the result of a variable"}
{"comment_sentence_id": 5070, "class": "EmbeddingBag", "comment_sentence": "embedding dim int the size of each embedding vector", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "embedding dim int the size of each embedding vector", "final_sentence": "embedding dim int the size of each embedding vector"}
{"comment_sentence_id": 2645, "class": "Environment", "comment_sentence": "class jinja2^utils.markup .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "class jinja2 utils markup", "final_sentence": "class jinja2 utils markup"}
{"comment_sentence_id": 2212, "class": "SelectNSeries", "comment_sentence": "obj series", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "obj series", "final_sentence": "obj series"}
{"comment_sentence_id": 1196, "class": "YouTubeVideo", "comment_sentence": "other parameters can be provided as documented at", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "other parameters can be provided as documented at", "final_sentence": "other parameters can be provided as documented at"}
{"comment_sentence_id": 5515, "class": "SGD", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 866, "class": "UserCreationForm", "comment_sentence": "password.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "password", "final_sentence": "password"}
{"comment_sentence_id": 2039, "class": "PlotAccessor", "comment_sentence": "ylim 2 tuple list", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ylim 2 tuple list", "final_sentence": "ylim 2 tuple list"}
{"comment_sentence_id": 2571, "class": "Environment", "comment_sentence": "instances of this class may be modified if", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "instances of this class may be modified if", "final_sentence": "instances of this class may be modified if"}
{"comment_sentence_id": 1992, "class": "PlotAccessor", "comment_sentence": "only used if data is a dataframe.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "only used if data is a dataframe", "final_sentence": "only used if data is a dataframe"}
{"comment_sentence_id": 2641, "class": "Environment", "comment_sentence": "autoescape", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "autoescape", "final_sentence": "autoescape"}
{"comment_sentence_id": 2615, "class": "Environment", "comment_sentence": "n or r n .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "n or r n", "final_sentence": "n or r n"}
{"comment_sentence_id": 3869, "class": "Retry", "comment_sentence": "seconds.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "seconds", "final_sentence": "seconds"}
{"comment_sentence_id": 1728, "class": "CategoricalIndex", "comment_sentence": "versionadded 021.0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionadded 021 0", "final_sentence": "versionadded 021 0"}
{"comment_sentence_id": 3866, "class": "Retry", "comment_sentence": "delay .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "delay", "final_sentence": "delay"}
{"comment_sentence_id": 4512, "class": "BCEWithLogitsLoss", "comment_sentence": "if the field attr size average", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 5344, "class": "MultiLabelMarginLoss", "comment_sentence": "ignored", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 2042, "class": "PlotAccessor", "comment_sentence": "plots .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "plots", "final_sentence": "plots"}
{"comment_sentence_id": 4717, "class": "Conv3d", "comment_sentence": "attr stride controls the stride for the cross correlation.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr stride controls the stride for the cross correlation", "final_sentence": "attr stride controls the stride for the cross correlation"}
{"comment_sentence_id": 4377, "class": "BatchNorm1d", "comment_sentence": "eps a value added to the denominator for numerical stability.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "eps a value added to the denominator for numerical stability", "final_sentence": "eps a value added to the denominator for numerical stability"}
{"comment_sentence_id": 2024, "class": "PlotAccessor", "comment_sentence": "the matplotlib line style per column.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the matplotlib line style per column", "final_sentence": "the matplotlib line style per column"}
{"comment_sentence_id": 2435, "class": "CallBlock", "comment_sentence": "call is called with", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "call is called with", "final_sentence": "call is called with"}
{"comment_sentence_id": 488, "class": "Migration", "comment_sentence": "replaces a list of migration names", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "replaces a list of migration names", "final_sentence": "replaces a list of migration names"}
{"comment_sentence_id": 3732, "class": "Request", "comment_sentence": "param method http method to use.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param method http method to use", "final_sentence": "param method http method to use"}
{"comment_sentence_id": 4510, "class": "BCEWithLogitsLoss", "comment_sentence": "note that for", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "note that for", "final_sentence": "note that for"}
{"comment_sentence_id": 4022, "class": "SkipTo", "comment_sentence": "the skipto is not a match", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the skipto is not a match", "final_sentence": "the skipto is not a match"}
{"comment_sentence_id": 3853, "class": "Retry", "comment_sentence": "by default, we only retry on methods which are considered to be", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "by default we only retry on methods which are considered to be", "final_sentence": "by default we only retry on methods which are considered to be"}
{"comment_sentence_id": 3736, "class": "Request", "comment_sentence": "param data the body to attach to the request.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param data the body to attach to the request", "final_sentence": "param data the body to attach to the request"}
{"comment_sentence_id": 125, "class": "BaseCommand", "comment_sentence": "output transaction", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "output transaction", "final_sentence": "output transaction"}
{"comment_sentence_id": 3846, "class": "Retry", "comment_sentence": "param int status", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param int status", "final_sentence": "param int status"}
{"comment_sentence_id": 2608, "class": "Environment", "comment_sentence": "lstrip blocks", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "lstrip blocks", "final_sentence": "lstrip blocks"}
{"comment_sentence_id": 1197, "class": "YouTubeVideo", "comment_sentence": "https developers^google.com youtube player parameters#parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "https developers google com youtube player parameters parameters", "final_sentence": "https developers google com youtube player parameters parameters"}
{"comment_sentence_id": 4525, "class": "BCEWithLogitsLoss", "comment_sentence": "none mean sum .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "none mean sum", "final_sentence": "none mean sum"}
{"comment_sentence_id": 1720, "class": "CategoricalIndex", "comment_sentence": "ordered bool, optional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ordered bool optional", "final_sentence": "ordered bool optional"}
{"comment_sentence_id": 1283, "class": "ConfigDict", "comment_sentence": "should be used with an empty list or dictionary as a default value.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "should be used with an empty list or dictionary as a default value", "final_sentence": "should be used with an empty list or dictionary as a default value"}
{"comment_sentence_id": 2606, "class": "Environment", "comment_sentence": ".", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 3389, "class": "Option", "comment_sentence": "help page.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "help page", "final_sentence": "help page"}
{"comment_sentence_id": 5076, "class": "EmbeddingBag", "comment_sentence": "the words in the mini batch.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the words in the mini batch", "final_sentence": "the words in the mini batch"}
{"comment_sentence_id": 2678, "class": "Environment", "comment_sentence": "enable async", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "enable async", "final_sentence": "enable async"}
{"comment_sentence_id": 811, "class": "TemplateDoesNotExist", "comment_sentence": "optional arguments", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "optional arguments", "final_sentence": "optional arguments"}
{"comment_sentence_id": 4223, "class": "Adadelta", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 3868, "class": "Retry", "comment_sentence": "backoff factor 2 number of total retries 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "backoff factor 2 number of total retries 1", "final_sentence": "backoff factor 2 number of total retries 1"}
{"comment_sentence_id": 1725, "class": "CategoricalIndex", "comment_sentence": "dtype categoricaldtype or category , optional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dtype categoricaldtype or category optional", "final_sentence": "dtype categoricaldtype or category optional"}
{"comment_sentence_id": 3870, "class": "Retry", "comment_sentence": "if the backoff factor is 01, then func ^sleep will sleep", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if the backoff factor is 01 then func sleep will sleep", "final_sentence": "if the backoff factor is 01 then func sleep will sleep"}
{"comment_sentence_id": 949, "class": "Audio", "comment_sentence": "whether audio should be normalized rescaled to the maximum possible", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether audio should be normalized rescaled to the maximum possible", "final_sentence": "whether audio should be normalized rescaled to the maximum possible"}
{"comment_sentence_id": 2643, "class": "Environment", "comment_sentence": "default.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default", "final_sentence": "default"}
{"comment_sentence_id": 3427, "class": "Option", "comment_sentence": "param hidden hide this option from help outputs.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param hidden hide this option from help outputs", "final_sentence": "param hidden hide this option from help outputs"}
{"comment_sentence_id": 3393, "class": "Option", "comment_sentence": "value.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "value", "final_sentence": "value"}
{"comment_sentence_id": 5712, "class": "Unfold", "comment_sentence": "spatial dimensions.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "spatial dimensions", "final_sentence": "spatial dimensions"}
{"comment_sentence_id": 2020, "class": "PlotAccessor", "comment_sentence": "axis grid lines.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "axis grid lines", "final_sentence": "axis grid lines"}
{"comment_sentence_id": 2091, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 5073, "class": "EmbeddingBag", "comment_sentence": "norm type float, optional the p of the p norm to compute for the attr max norm option.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option", "final_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option"}
{"comment_sentence_id": 5084, "class": "EmbeddingBag", "comment_sentence": "in the bag, max computes the max value over each bag.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "in the bag max computes the max value over each bag", "final_sentence": "in the bag max computes the max value over each bag"}
{"comment_sentence_id": 3876, "class": "Retry", "comment_sentence": "param bool raise on redirect whether, if the number of redirects is", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param bool raise on redirect whether if the number of redirects is", "final_sentence": "param bool raise on redirect whether if the number of redirects is"}
{"comment_sentence_id": 3827, "class": "Retry", "comment_sentence": "set to false to disable and imply raise on redirect false .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to false to disable and imply raise on redirect false", "final_sentence": "set to false to disable and imply raise on redirect false"}
{"comment_sentence_id": 3828, "class": "Retry", "comment_sentence": "param int connect", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param int connect", "final_sentence": "param int connect"}
{"comment_sentence_id": 4539, "class": "BCEWithLogitsLoss", "comment_sentence": "if attr reduction is none , then math n, , same", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if attr reduction is none then math n same", "final_sentence": "if attr reduction is none then math n same"}
{"comment_sentence_id": 1710, "class": "CategoricalIndex", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 2083, "class": "PlotAccessor", "comment_sentence": "class matplotlib^axes.axes or numpy^ndarray of them", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "class matplotlib axes axes or numpy ndarray of them", "final_sentence": "class matplotlib axes axes or numpy ndarray of them"}
{"comment_sentence_id": 5716, "class": "Unfold", "comment_sentence": "default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 0", "final_sentence": "default 0"}
{"comment_sentence_id": 932, "class": "Audio", "comment_sentence": "a url to download the data from.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a url to download the data from", "final_sentence": "a url to download the data from"}
{"comment_sentence_id": 5351, "class": "MultiLabelMarginLoss", "comment_sentence": "when attr reduce is false , returns a loss per", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "when attr reduce is false returns a loss per", "final_sentence": "when attr reduce is false returns a loss per"}
{"comment_sentence_id": 2025, "class": "PlotAccessor", "comment_sentence": "logx bool or sym , default false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "logx bool or sym default false", "final_sentence": "logx bool or sym default false"}
{"comment_sentence_id": 1984, "class": "PlotAccessor", "comment_sentence": "make plots of series or dataframe.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "make plots of series or dataframe", "final_sentence": "make plots of series or dataframe"}
{"comment_sentence_id": 1589, "class": "BooleanArray", "comment_sentence": "values numpy^ndarray", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "values numpy ndarray", "final_sentence": "values numpy ndarray"}
{"comment_sentence_id": 2064, "class": "PlotAccessor", "comment_sentence": "detail.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "detail", "final_sentence": "detail"}
{"comment_sentence_id": 4374, "class": "BatchNorm1d", "comment_sentence": "args", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 3401, "class": "Option", "comment_sentence": "if set to true the prompt will be the", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if set to true the prompt will be the", "final_sentence": "if set to true the prompt will be the"}
{"comment_sentence_id": 1993, "class": "PlotAccessor", "comment_sentence": "y label, position or list of label, positions, default none", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "y label position or list of label positions default none", "final_sentence": "y label position or list of label positions default none"}
{"comment_sentence_id": 4759, "class": "Conv3d", "comment_sentence": "default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 0", "final_sentence": "default 0"}
{"comment_sentence_id": 936, "class": "Audio", "comment_sentence": "should the audio data be embedded using a data uri true or should", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "should the audio data be embedded using a data uri true or should", "final_sentence": "should the audio data be embedded using a data uri true or should"}
{"comment_sentence_id": 1651, "class": "CategoricalDtype", "comment_sentence": "none can be used to maintain the ordered value of existing categoricals when", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "none can be used to maintain the ordered value of existing categoricals when", "final_sentence": "none can be used to maintain the ordered value of existing categoricals when"}
{"comment_sentence_id": 3426, "class": "Option", "comment_sentence": "param help the help string.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param help the help string", "final_sentence": "param help the help string"}
{"comment_sentence_id": 3422, "class": "Option", "comment_sentence": "param allow from autoenv if this is enabled then the value of this", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param allow from autoenv if this is enabled then the value of this", "final_sentence": "param allow from autoenv if this is enabled then the value of this"}
{"comment_sentence_id": 3858, "class": "Retry", "comment_sentence": "param iterable status forcelist", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param iterable status forcelist", "final_sentence": "param iterable status forcelist"}
{"comment_sentence_id": 2035, "class": "PlotAccessor", "comment_sentence": "values to use for the xticks.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "values to use for the xticks", "final_sentence": "values to use for the xticks"}
{"comment_sentence_id": 3735, "class": "Request", "comment_sentence": "param files dictionary of filename fileobject files to multipart upload.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param files dictionary of filename fileobject files to multipart upload", "final_sentence": "param files dictionary of filename fileobject files to multipart upload"}
{"comment_sentence_id": 5720, "class": "Unfold", "comment_sentence": "default 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 2005, "class": "PlotAccessor", "comment_sentence": "density same as kde", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "density same as kde", "final_sentence": "density same as kde"}
{"comment_sentence_id": 5656, "class": "TransformerEncoderLayer", "comment_sentence": "dropout the dropout value default 01 .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dropout the dropout value default 01", "final_sentence": "dropout the dropout value default 01"}
{"comment_sentence_id": 4282, "class": "Adamax", "comment_sentence": "numerical stability default 1e 8", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "numerical stability default 1e 8", "final_sentence": "numerical stability default 1e 8"}
{"comment_sentence_id": 2680, "class": "Environment", "comment_sentence": "you to take advantage of newer python features.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "you to take advantage of newer python features", "final_sentence": "you to take advantage of newer python features"}
{"comment_sentence_id": 1723, "class": "CategoricalIndex", "comment_sentence": "if not given here or in dtype , the resulting", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if not given here or in dtype the resulting", "final_sentence": "if not given here or in dtype the resulting"}
{"comment_sentence_id": 1852, "class": "ExcelFile", "comment_sentence": "a file like object, xlrd workbook or openpypl workbook.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a file like object xlrd workbook or openpypl workbook", "final_sentence": "a file like object xlrd workbook or openpypl workbook"}
{"comment_sentence_id": 5706, "class": "Unfold", "comment_sentence": "reshaping.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "reshaping", "final_sentence": "reshaping"}
{"comment_sentence_id": 922, "class": "Audio", "comment_sentence": "for the standard channel order, see", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "for the standard channel order see", "final_sentence": "for the standard channel order see"}
{"comment_sentence_id": 5080, "class": "EmbeddingBag", "comment_sentence": "specifies the way to reduce the bag.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "specifies the way to reduce the bag", "final_sentence": "specifies the way to reduce the bag"}
{"comment_sentence_id": 4893, "class": "CyclicLR", "comment_sentence": "triangular a basic triangular cycle without amplitude scaling.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "triangular a basic triangular cycle without amplitude scaling", "final_sentence": "triangular a basic triangular cycle without amplitude scaling"}
{"comment_sentence_id": 2008, "class": "PlotAccessor", "comment_sentence": "scatter scatter plot", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "scatter scatter plot", "final_sentence": "scatter scatter plot"}
{"comment_sentence_id": 2010, "class": "PlotAccessor", "comment_sentence": "figsize a tuple width, height in inches", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "figsize a tuple width height in inches", "final_sentence": "figsize a tuple width height in inches"}
{"comment_sentence_id": 4389, "class": "BatchNorm1d", "comment_sentence": "this module does not track such statistics and always uses batch", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this module does not track such statistics and always uses batch", "final_sentence": "this module does not track such statistics and always uses batch"}
{"comment_sentence_id": 3874, "class": "Retry", "comment_sentence": "than attr retry^backoff max .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "than attr retry backoff max", "final_sentence": "than attr retry backoff max"}
{"comment_sentence_id": 1889, "class": "IntegerArray", "comment_sentence": "a 1 d boolean dtype array indicating missing values.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a 1 d boolean dtype array indicating missing values", "final_sentence": "a 1 d boolean dtype array indicating missing values"}
{"comment_sentence_id": 2046, "class": "PlotAccessor", "comment_sentence": "colormap to select colors from.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "colormap to select colors from", "final_sentence": "colormap to select colors from"}
{"comment_sentence_id": 3733, "class": "Request", "comment_sentence": "param url url to send.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param url url to send", "final_sentence": "param url url to send"}
{"comment_sentence_id": 2596, "class": "Environment", "comment_sentence": "statements.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "statements", "final_sentence": "statements"}
{"comment_sentence_id": 5077, "class": "EmbeddingBag", "comment_sentence": "default false .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default false", "final_sentence": "default false"}
{"comment_sentence_id": 4385, "class": "BatchNorm1d", "comment_sentence": "learnable affine parameters.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "learnable affine parameters", "final_sentence": "learnable affine parameters"}
{"comment_sentence_id": 1722, "class": "CategoricalIndex", "comment_sentence": "categorical.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "categorical", "final_sentence": "categorical"}
{"comment_sentence_id": 5072, "class": "EmbeddingBag", "comment_sentence": "is renormalized to have norm attr max norm .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "is renormalized to have norm attr max norm", "final_sentence": "is renormalized to have norm attr max norm"}
{"comment_sentence_id": 4222, "class": "Adadelta", "comment_sentence": "to the parameters default 10", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "to the parameters default 10", "final_sentence": "to the parameters default 10"}
{"comment_sentence_id": 3864, "class": "Retry", "comment_sentence": "a backoff factor to apply between attempts after the second try", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a backoff factor to apply between attempts after the second try", "final_sentence": "a backoff factor to apply between attempts after the second try"}
{"comment_sentence_id": 3882, "class": "Retry", "comment_sentence": "been exhausted.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "been exhausted", "final_sentence": "been exhausted"}
{"comment_sentence_id": 3890, "class": "Retry", "comment_sentence": "attr retry^retry after status codes or not.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr retry retry after status codes or not", "final_sentence": "attr retry retry after status codes or not"}
{"comment_sentence_id": 2022, "class": "PlotAccessor", "comment_sentence": "place legend on axis subplots.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "place legend on axis subplots", "final_sentence": "place legend on axis subplots"}
{"comment_sentence_id": 3413, "class": "Option", "comment_sentence": "enabled.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "enabled", "final_sentence": "enabled"}
{"comment_sentence_id": 4764, "class": "Conv3d", "comment_sentence": "groups int, optional number of blocked connections from input channels to output channels.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "groups int optional number of blocked connections from input channels to output channels", "final_sentence": "groups int optional number of blocked connections from input channels to output channels"}
{"comment_sentence_id": 2076, "class": "PlotAccessor", "comment_sentence": "alternatively, to", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "alternatively to", "final_sentence": "alternatively to"}
{"comment_sentence_id": 1994, "class": "PlotAccessor", "comment_sentence": "allows plotting of one column versus another.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "allows plotting of one column versus another", "final_sentence": "allows plotting of one column versus another"}
{"comment_sentence_id": 1276, "class": "ConfigDict", "comment_sentence": "2", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 4676, "class": "ConstantPad3d", "comment_sentence": "math text padding left , math text padding right ,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "math text padding left math text padding right", "final_sentence": "math text padding left math text padding right"}
{"comment_sentence_id": 920, "class": "Audio", "comment_sentence": "numpy 2d array containing waveforms for each channel.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "numpy 2d array containing waveforms for each channel", "final_sentence": "numpy 2d array containing waveforms for each channel"}
{"comment_sentence_id": 4378, "class": "BatchNorm1d", "comment_sentence": "default 1e 5", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1e 5", "final_sentence": "default 1e 5"}
{"comment_sentence_id": 4380, "class": "BatchNorm1d", "comment_sentence": "computation.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "computation", "final_sentence": "computation"}
{"comment_sentence_id": 1274, "class": "ConfigDict", "comment_sentence": "1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 5654, "class": "TransformerEncoderLayer", "comment_sentence": "nhead the number of heads in the multiheadattention models required .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "nhead the number of heads in the multiheadattention models required", "final_sentence": "nhead the number of heads in the multiheadattention models required"}
{"comment_sentence_id": 3867, "class": "Retry", "comment_sentence": "urllib3 will sleep for", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "urllib3 will sleep for", "final_sentence": "urllib3 will sleep for"}
{"comment_sentence_id": 2081, "class": "PlotAccessor", "comment_sentence": "options to pass to matplotlib plotting method.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "options to pass to matplotlib plotting method", "final_sentence": "options to pass to matplotlib plotting method"}
{"comment_sentence_id": 1721, "class": "CategoricalIndex", "comment_sentence": "whether or not this categorical is treated as an ordered", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether or not this categorical is treated as an ordered", "final_sentence": "whether or not this categorical is treated as an ordered"}
{"comment_sentence_id": 4538, "class": "BCEWithLogitsLoss", "comment_sentence": "output scalar.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "output scalar", "final_sentence": "output scalar"}
{"comment_sentence_id": 1715, "class": "CategoricalIndex", "comment_sentence": "categories index like, optional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "categories index like optional", "final_sentence": "categories index like optional"}
{"comment_sentence_id": 4280, "class": "Adamax", "comment_sentence": "running averages of gradient and its square", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "running averages of gradient and its square", "final_sentence": "running averages of gradient and its square"}
{"comment_sentence_id": 3844, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 3839, "class": "Retry", "comment_sentence": "how many redirects to perform.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "how many redirects to perform", "final_sentence": "how many redirects to perform"}
{"comment_sentence_id": 948, "class": "Audio", "comment_sentence": "normalize bool", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "normalize bool", "final_sentence": "normalize bool"}
{"comment_sentence_id": 937, "class": "Audio", "comment_sentence": "the original source be referenced.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the original source be referenced", "final_sentence": "the original source be referenced"}
{"comment_sentence_id": 2030, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 4763, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 2041, "class": "PlotAccessor", "comment_sentence": "rotation for ticks xticks for vertical, yticks for horizontal", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "rotation for ticks xticks for vertical yticks for horizontal", "final_sentence": "rotation for ticks xticks for vertical yticks for horizontal"}
{"comment_sentence_id": 2619, "class": "Environment", "comment_sentence": "keep trailing newline", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "keep trailing newline", "final_sentence": "keep trailing newline"}
{"comment_sentence_id": 1717, "class": "CategoricalIndex", "comment_sentence": "items need to be unique.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "items need to be unique", "final_sentence": "items need to be unique"}
{"comment_sentence_id": 2018, "class": "PlotAccessor", "comment_sentence": "true, print each item in the list above the corresponding subplot.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "true print each item in the list above the corresponding subplot", "final_sentence": "true print each item in the list above the corresponding subplot"}
{"comment_sentence_id": 2068, "class": "PlotAccessor", "comment_sentence": "when using a secondary y axis, automatically mark the column", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "when using a secondary y axis automatically mark the column", "final_sentence": "when using a secondary y axis automatically mark the column"}
{"comment_sentence_id": 2621, "class": "Environment", "comment_sentence": "the default is false , which causes a single newline,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the default is false which causes a single newline", "final_sentence": "the default is false which causes a single newline"}
{"comment_sentence_id": 3610, "class": "Path", "comment_sentence": "this value to be valid.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this value to be valid", "final_sentence": "this value to be valid"}
{"comment_sentence_id": 4674, "class": "ConstantPad3d", "comment_sentence": "padding in all boundaries.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "padding in all boundaries", "final_sentence": "padding in all boundaries"}
{"comment_sentence_id": 3873, "class": "Retry", "comment_sentence": "it will never be longer", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "it will never be longer", "final_sentence": "it will never be longer"}
{"comment_sentence_id": 4381, "class": "BatchNorm1d", "comment_sentence": "can be set to none for cumulative moving average", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "can be set to none for cumulative moving average", "final_sentence": "can be set to none for cumulative moving average"}
{"comment_sentence_id": 4302, "class": "AdaptiveMaxPool3d", "comment_sentence": "d, h and w can be either a int , or none which means the size will", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "d h and w can be either a int or none which means the size will", "final_sentence": "d h and w can be either a int or none which means the size will"}
{"comment_sentence_id": 5579, "class": "Subset", "comment_sentence": "dataset dataset the whole dataset", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dataset dataset the whole dataset", "final_sentence": "dataset dataset the whole dataset"}
{"comment_sentence_id": 3045, "class": "KeyType", "comment_sentence": "keys can be bare unquoted , or quoted using basic , or literal", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "keys can be bare unquoted or quoted using basic or literal", "final_sentence": "keys can be bare unquoted or quoted using basic or literal"}
{"comment_sentence_id": 3872, "class": "Retry", "comment_sentence": "between retries.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "between retries", "final_sentence": "between retries"}
{"comment_sentence_id": 3394, "class": "Option", "comment_sentence": "this is particularly useful for dynamic options.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this is particularly useful for dynamic options", "final_sentence": "this is particularly useful for dynamic options"}
{"comment_sentence_id": 2050, "class": "PlotAccessor", "comment_sentence": "if true, plot colorbar only relevant for scatter and hexbin", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if true plot colorbar only relevant for scatter and hexbin", "final_sentence": "if true plot colorbar only relevant for scatter and hexbin"}
{"comment_sentence_id": 2255, "class": "StringArray", "comment_sentence": "the array of data.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the array of data", "final_sentence": "the array of data"}
{"comment_sentence_id": 1716, "class": "CategoricalIndex", "comment_sentence": "the categories for the categorical.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the categories for the categorical", "final_sentence": "the categories for the categorical"}
{"comment_sentence_id": 1729, "class": "CategoricalIndex", "comment_sentence": "copy bool, default false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 2580, "class": "Environment", "comment_sentence": "the string marking the end of a block.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the end of a block", "final_sentence": "the string marking the end of a block"}
{"comment_sentence_id": 4527, "class": "BCEWithLogitsLoss", "comment_sentence": "mean the sum of the output will be divided by the number of", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "mean the sum of the output will be divided by the number of", "final_sentence": "mean the sum of the output will be divided by the number of"}
{"comment_sentence_id": 2506, "class": "Context_", "comment_sentence": "template code only.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "template code only", "final_sentence": "template code only"}
{"comment_sentence_id": 5068, "class": "EmbeddingBag", "comment_sentence": "args", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 924, "class": "Audio", "comment_sentence": "list of float or integer representing the waveform mono", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "list of float or integer representing the waveform mono", "final_sentence": "list of float or integer representing the waveform mono"}
{"comment_sentence_id": 1718, "class": "CategoricalIndex", "comment_sentence": "if the categories are not given here and also not in dtype , they", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if the categories are not given here and also not in dtype they", "final_sentence": "if the categories are not given here and also not in dtype they"}
{"comment_sentence_id": 4300, "class": "AdaptiveMaxPool3d", "comment_sentence": "output size the target output size of the image of the form d x h x w.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "output size the target output size of the image of the form d x h x w", "final_sentence": "output size the target output size of the image of the form d x h x w"}
{"comment_sentence_id": 5701, "class": "Unfold", "comment_sentence": "the attr padding , attr stride and attr dilation arguments specify", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the attr padding attr stride and attr dilation arguments specify", "final_sentence": "the attr padding attr stride and attr dilation arguments specify"}
{"comment_sentence_id": 1647, "class": "CategoricalDtype", "comment_sentence": "categories sequence, optional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "categories sequence optional", "final_sentence": "categories sequence optional"}
{"comment_sentence_id": 2016, "class": "PlotAccessor", "comment_sentence": "at the top of the figure.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "at the top of the figure", "final_sentence": "at the top of the figure"}
{"comment_sentence_id": 487, "class": "Migration", "comment_sentence": "run before a list of tuples of app path, migration name", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "run before a list of tuples of app path migration name", "final_sentence": "run before a list of tuples of app path migration name"}
{"comment_sentence_id": 4523, "class": "BCEWithLogitsLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 2508, "class": "Context_", "comment_sentence": "func contextfunction s get the active context passed as first argument", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "func contextfunction s get the active context passed as first argument", "final_sentence": "func contextfunction s get the active context passed as first argument"}
{"comment_sentence_id": 2504, "class": "Context_", "comment_sentence": "modifications on attr parent must not", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "modifications on attr parent must not", "final_sentence": "modifications on attr parent must not"}
{"comment_sentence_id": 5264, "class": "LBFGS", "comment_sentence": "default 1e 5 .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1e 5", "final_sentence": "default 1e 5"}
{"comment_sentence_id": 5360, "class": "MultiLabelMarginLoss", "comment_sentence": "and attr reduce are in the process of being deprecated, and in the meantime,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "and attr reduce are in the process of being deprecated and in the meantime", "final_sentence": "and attr reduce are in the process of being deprecated and in the meantime"}
{"comment_sentence_id": 4761, "class": "Conv3d", "comment_sentence": "accepted values zeros and circular default zeros", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "accepted values zeros and circular default zeros", "final_sentence": "accepted values zeros and circular default zeros"}
{"comment_sentence_id": 2000, "class": "PlotAccessor", "comment_sentence": "bar vertical bar plot", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "bar vertical bar plot", "final_sentence": "bar vertical bar plot"}
{"comment_sentence_id": 1724, "class": "CategoricalIndex", "comment_sentence": "categorical will be unordered.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "categorical will be unordered", "final_sentence": "categorical will be unordered"}
{"comment_sentence_id": 4516, "class": "BCEWithLogitsLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 484, "class": "Migration", "comment_sentence": "of the following attributes", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "of the following attributes", "final_sentence": "of the following attributes"}
{"comment_sentence_id": 3819, "class": "Retry", "comment_sentence": "param int total", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param int total", "final_sentence": "param int total"}
{"comment_sentence_id": 4758, "class": "Conv3d", "comment_sentence": "padding int or tuple, optional zero padding added to all three sides of the input.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "padding int or tuple optional zero padding added to all three sides of the input", "final_sentence": "padding int or tuple optional zero padding added to all three sides of the input"}
{"comment_sentence_id": 3419, "class": "Option", "comment_sentence": "in how it works but supports arbitrary number of", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "in how it works but supports arbitrary number of", "final_sentence": "in how it works but supports arbitrary number of"}
{"comment_sentence_id": 2515, "class": "Context_", "comment_sentence": "class undefined object for missing variables.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "class undefined object for missing variables", "final_sentence": "class undefined object for missing variables"}
{"comment_sentence_id": 3424, "class": "Option", "comment_sentence": "variable in case a prefix is defined on the", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "variable in case a prefix is defined on the", "final_sentence": "variable in case a prefix is defined on the"}
{"comment_sentence_id": 1996, "class": "PlotAccessor", "comment_sentence": "dataframe.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dataframe", "final_sentence": "dataframe"}
{"comment_sentence_id": 5357, "class": "MultiLabelMarginLoss", "comment_sentence": "mean the sum of the output will be divided by the number of", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "mean the sum of the output will be divided by the number of", "final_sentence": "mean the sum of the output will be divided by the number of"}
{"comment_sentence_id": 1277, "class": "ConfigDict", "comment_sentence": "a data type sanity check", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a data type sanity check", "final_sentence": "a data type sanity check"}
{"comment_sentence_id": 2257, "class": "StringArray", "comment_sentence": "currently, this expects an object dtype ndarray", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "currently this expects an object dtype ndarray", "final_sentence": "currently this expects an object dtype ndarray"}
{"comment_sentence_id": 2004, "class": "PlotAccessor", "comment_sentence": "kde kernel density estimation plot", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "kde kernel density estimation plot", "final_sentence": "kde kernel density estimation plot"}
{"comment_sentence_id": 5714, "class": "Unfold", "comment_sentence": "padding int or tuple, optional implicit zero padding to be added on", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "padding int or tuple optional implicit zero padding to be added on", "final_sentence": "padding int or tuple optional implicit zero padding to be added on"}
{"comment_sentence_id": 122, "class": "BaseCommand", "comment_sentence": "help", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "help", "final_sentence": "help"}
{"comment_sentence_id": 5266, "class": "LBFGS", "comment_sentence": "value parameter changes default 1e 9 .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "value parameter changes default 1e 9", "final_sentence": "value parameter changes default 1e 9"}
{"comment_sentence_id": 1730, "class": "CategoricalIndex", "comment_sentence": "make a copy of input ndarray.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "make a copy of input ndarray", "final_sentence": "make a copy of input ndarray"}
{"comment_sentence_id": 3826, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to 0 to fail on the first retry", "final_sentence": "set to 0 to fail on the first retry"}
{"comment_sentence_id": 1995, "class": "PlotAccessor", "comment_sentence": "only used if data is a", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "only used if data is a", "final_sentence": "only used if data is a"}
{"comment_sentence_id": 3734, "class": "Request", "comment_sentence": "param headers dictionary of headers to send.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param headers dictionary of headers to send", "final_sentence": "param headers dictionary of headers to send"}
{"comment_sentence_id": 2060, "class": "PlotAccessor", "comment_sentence": "if a series or dataframe is passed, use passed data to draw a", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a series or dataframe is passed use passed data to draw a", "final_sentence": "if a series or dataframe is passed use passed data to draw a"}
{"comment_sentence_id": 2650, "class": "Environment", "comment_sentence": "versionchanged 24", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionchanged 24", "final_sentence": "versionchanged 24"}
{"comment_sentence_id": 3847, "class": "Retry", "comment_sentence": "how many times to retry on bad status codes.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "how many times to retry on bad status codes", "final_sentence": "how many times to retry on bad status codes"}
{"comment_sentence_id": 2047, "class": "PlotAccessor", "comment_sentence": "if string, load colormap with that", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if string load colormap with that", "final_sentence": "if string load colormap with that"}
{"comment_sentence_id": 3416, "class": "Option", "comment_sentence": "param multiple if this is set to true then the argument is accepted", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param multiple if this is set to true then the argument is accepted", "final_sentence": "param multiple if this is set to true then the argument is accepted"}
{"comment_sentence_id": 3830, "class": "Retry", "comment_sentence": "these are errors raised before the request is sent to the remote server,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "these are errors raised before the request is sent to the remote server", "final_sentence": "these are errors raised before the request is sent to the remote server"}
{"comment_sentence_id": 2072, "class": "PlotAccessor", "comment_sentence": "backend str, default none", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "backend str default none", "final_sentence": "backend str default none"}
{"comment_sentence_id": 2215, "class": "SelectNSeries", "comment_sentence": "returns", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 4765, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 138, "class": "BaseCommand", "comment_sentence": "to validate an individual application s models", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "to validate an individual application s models", "final_sentence": "to validate an individual application s models"}
{"comment_sentence_id": 2631, "class": "Environment", "comment_sentence": "should the optimizer be enabled?", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "should the optimizer be enabled", "final_sentence": "should the optimizer be enabled"}
{"comment_sentence_id": 3865, "class": "Retry", "comment_sentence": "most errors are resolved immediately by a second try without a", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "most errors are resolved immediately by a second try without a", "final_sentence": "most errors are resolved immediately by a second try without a"}
{"comment_sentence_id": 3841, "class": "Retry", "comment_sentence": "loops.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "loops", "final_sentence": "loops"}
{"comment_sentence_id": 3840, "class": "Retry", "comment_sentence": "limit this to avoid infinite redirect", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "limit this to avoid infinite redirect", "final_sentence": "limit this to avoid infinite redirect"}
{"comment_sentence_id": 121, "class": "BaseCommand", "comment_sentence": "several attributes affect behavior at various steps along the way", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "several attributes affect behavior at various steps along the way", "final_sentence": "several attributes affect behavior at various steps along the way"}
{"comment_sentence_id": 5340, "class": "MultiLabelMarginLoss", "comment_sentence": "note that for", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "note that for", "final_sentence": "note that for"}
{"comment_sentence_id": 5473, "class": "Poisson", "comment_sentence": "rate number, tensor the rate parameter", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "rate number tensor the rate parameter", "final_sentence": "rate number tensor the rate parameter"}
{"comment_sentence_id": 4522, "class": "BCEWithLogitsLoss", "comment_sentence": "batch element instead and ignores attr size average .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "batch element instead and ignores attr size average", "final_sentence": "batch element instead and ignores attr size average"}
{"comment_sentence_id": 3862, "class": "Retry", "comment_sentence": "by default, this is disabled with none .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "by default this is disabled with none", "final_sentence": "by default this is disabled with none"}
{"comment_sentence_id": 5259, "class": "LBFGS", "comment_sentence": "max iter int maximal number of iterations per optimization step", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "max iter int maximal number of iterations per optimization step", "final_sentence": "max iter int maximal number of iterations per optimization step"}
{"comment_sentence_id": 3625, "class": "Path", "comment_sentence": "param allow dash if this is set to true , a single dash to indicate", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param allow dash if this is set to true a single dash to indicate", "final_sentence": "param allow dash if this is set to true a single dash to indicate"}
{"comment_sentence_id": 3737, "class": "Request", "comment_sentence": "if a dictionary or", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a dictionary or", "final_sentence": "if a dictionary or"}
{"comment_sentence_id": 3398, "class": "Option", "comment_sentence": "are not shown.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "are not shown", "final_sentence": "are not shown"}
{"comment_sentence_id": 952, "class": "Audio", "comment_sentence": "when set to false , data must be between", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "when set to false data must be between", "final_sentence": "when set to false data must be between"}
{"comment_sentence_id": 5345, "class": "MultiLabelMarginLoss", "comment_sentence": "when reduce is false .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "when reduce is false", "final_sentence": "when reduce is false"}
{"comment_sentence_id": 4644, "class": "BuildType", "comment_sentence": "arguments", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 3836, "class": "Retry", "comment_sentence": "request may have side effects.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "request may have side effects", "final_sentence": "request may have side effects"}
{"comment_sentence_id": 2577, "class": "Environment", "comment_sentence": "the string marking the beginning of a block.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the beginning of a block", "final_sentence": "the string marking the beginning of a block"}
{"comment_sentence_id": 2254, "class": "StringArray", "comment_sentence": "values array like", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "values array like", "final_sentence": "values array like"}
{"comment_sentence_id": 2032, "class": "PlotAccessor", "comment_sentence": "use log scaling or symlog scaling on both x and y axes.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "use log scaling or symlog scaling on both x and y axes", "final_sentence": "use log scaling or symlog scaling on both x and y axes"}
{"comment_sentence_id": 2012, "class": "PlotAccessor", "comment_sentence": "use index as ticks for x axis.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "use index as ticks for x axis", "final_sentence": "use index as ticks for x axis"}
{"comment_sentence_id": 1991, "class": "PlotAccessor", "comment_sentence": "x label or position, default none", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "x label or position default none", "final_sentence": "x label or position default none"}
{"comment_sentence_id": 1999, "class": "PlotAccessor", "comment_sentence": "line line plot default", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "line line plot default", "final_sentence": "line line plot default"}
{"comment_sentence_id": 1986, "class": "PlotAccessor", "comment_sentence": "option plotting^backend .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "option plotting backend", "final_sentence": "option plotting backend"}
{"comment_sentence_id": 2513, "class": "Context_", "comment_sentence": "additionally there is a meth resolve", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "additionally there is a meth resolve", "final_sentence": "additionally there is a meth resolve"}
{"comment_sentence_id": 4519, "class": "BCEWithLogitsLoss", "comment_sentence": "losses are averaged or summed over observations for each minibatch depending", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "losses are averaged or summed over observations for each minibatch depending", "final_sentence": "losses are averaged or summed over observations for each minibatch depending"}
{"comment_sentence_id": 5516, "class": "SGD", "comment_sentence": "dampening float, optional dampening for momentum default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dampening float optional dampening for momentum default 0", "final_sentence": "dampening float optional dampening for momentum default 0"}
{"comment_sentence_id": 2628, "class": "Environment", "comment_sentence": "for more information have a", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "for more information have a", "final_sentence": "for more information have a"}
{"comment_sentence_id": 5580, "class": "Subset", "comment_sentence": "indices sequence indices in the whole set selected for subset", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "indices sequence indices in the whole set selected for subset", "final_sentence": "indices sequence indices in the whole set selected for subset"}
{"comment_sentence_id": 4895, "class": "CyclicLR", "comment_sentence": "exp range a cycle that scales initial amplitude by math text gamma ^ text cycle iterations", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations", "final_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations"}
{"comment_sentence_id": 3390, "class": "Option", "comment_sentence": "normally, defaults are not shown.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "normally defaults are not shown", "final_sentence": "normally defaults are not shown"}
{"comment_sentence_id": 3824, "class": "Retry", "comment_sentence": "it s a good idea to set this to some sensibly high value to", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "it s a good idea to set this to some sensibly high value to", "final_sentence": "it s a good idea to set this to some sensibly high value to"}
{"comment_sentence_id": 4762, "class": "Conv3d", "comment_sentence": "dilation int or tuple, optional spacing between kernel elements.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dilation int or tuple optional spacing between kernel elements", "final_sentence": "dilation int or tuple optional spacing between kernel elements"}
{"comment_sentence_id": 5514, "class": "SGD", "comment_sentence": "momentum float, optional momentum factor default 0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "momentum float optional momentum factor default 0", "final_sentence": "momentum float optional momentum factor default 0"}
{"comment_sentence_id": 4526, "class": "BCEWithLogitsLoss", "comment_sentence": "none no reduction will be applied,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "none no reduction will be applied", "final_sentence": "none no reduction will be applied"}
{"comment_sentence_id": 1591, "class": "BooleanArray", "comment_sentence": "mask numpy^ndarray", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "mask numpy ndarray", "final_sentence": "mask numpy ndarray"}
{"comment_sentence_id": 953, "class": "Audio", "comment_sentence": "1 and 1 inclusive , otherwise an error is raised.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "1 and 1 inclusive otherwise an error is raised", "final_sentence": "1 and 1 inclusive otherwise an error is raised"}
{"comment_sentence_id": 5079, "class": "EmbeddingBag", "comment_sentence": "mode string, optional sum , mean or max .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "mode string optional sum mean or max", "final_sentence": "mode string optional sum mean or max"}
{"comment_sentence_id": 1649, "class": "CategoricalDtype", "comment_sentence": "ordered bool or none, default false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ordered bool or none default false", "final_sentence": "ordered bool or none default false"}
{"comment_sentence_id": 3887, "class": "Retry", "comment_sentence": "each list item is of class class requesthistory .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "each list item is of class class requesthistory", "final_sentence": "each list item is of class class requesthistory"}
{"comment_sentence_id": 3889, "class": "Retry", "comment_sentence": "whether to respect retry after header on status codes defined as", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether to respect retry after header on status codes defined as", "final_sentence": "whether to respect retry after header on status codes defined as"}
{"comment_sentence_id": 4242, "class": "Adam", "comment_sentence": "lr float, optional learning rate default 1e 3", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "lr float optional learning rate default 1e 3", "final_sentence": "lr float optional learning rate default 1e 3"}
{"comment_sentence_id": 4278, "class": "Adamax", "comment_sentence": "lr float, optional learning rate default 2e 3", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "lr float optional learning rate default 2e 3", "final_sentence": "lr float optional learning rate default 2e 3"}
{"comment_sentence_id": 4753, "class": "Conv3d", "comment_sentence": "in channels int number of channels in the input image", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "in channels int number of channels in the input image", "final_sentence": "in channels int number of channels in the input image"}
{"comment_sentence_id": 3860, "class": "Retry", "comment_sentence": "a retry is initiated if the request method is in method whitelist", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a retry is initiated if the request method is in method whitelist", "final_sentence": "a retry is initiated if the request method is in method whitelist"}
{"comment_sentence_id": 1961, "class": "IntervalDtype", "comment_sentence": "subtype str, np^dtype", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "subtype str np dtype", "final_sentence": "subtype str np dtype"}
{"comment_sentence_id": 2043, "class": "PlotAccessor", "comment_sentence": "fontsize int, default none", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "fontsize int default none", "final_sentence": "fontsize int default none"}
{"comment_sentence_id": 2029, "class": "PlotAccessor", "comment_sentence": "use log scaling or symlog scaling on y axis.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "use log scaling or symlog scaling on y axis", "final_sentence": "use log scaling or symlog scaling on y axis"}
{"comment_sentence_id": 3878, "class": "Retry", "comment_sentence": "response code in the 3xx range.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "response code in the 3xx range", "final_sentence": "response code in the 3xx range"}
{"comment_sentence_id": 4529, "class": "BCEWithLogitsLoss", "comment_sentence": "note attr size average", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "note attr size average", "final_sentence": "note attr size average"}
{"comment_sentence_id": 4896, "class": "CyclicLR", "comment_sentence": "at each cycle iteration.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "at each cycle iteration", "final_sentence": "at each cycle iteration"}
{"comment_sentence_id": 3612, "class": "Path", "comment_sentence": "file does indeed not exist, then all further checks are", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "file does indeed not exist then all further checks are", "final_sentence": "file does indeed not exist then all further checks are"}
{"comment_sentence_id": 2626, "class": "Environment", "comment_sentence": "this can either be import paths", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this can either be import paths", "final_sentence": "this can either be import paths"}
{"comment_sentence_id": 2011, "class": "PlotAccessor", "comment_sentence": "use index bool, default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "use index bool default true", "final_sentence": "use index bool default true"}
{"comment_sentence_id": 3820, "class": "Retry", "comment_sentence": "total number of retries to allow.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "total number of retries to allow", "final_sentence": "total number of retries to allow"}
{"comment_sentence_id": 4767, "class": "Conv3d", "comment_sentence": "default true", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 5725, "class": "Unfold", "comment_sentence": "called im2col .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "called im2col", "final_sentence": "called im2col"}
{"comment_sentence_id": 2019, "class": "PlotAccessor", "comment_sentence": "grid bool, default none matlab style default", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "grid bool default none matlab style default", "final_sentence": "grid bool default none matlab style default"}
{"comment_sentence_id": 4383, "class": "BatchNorm1d", "comment_sentence": "default 01", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 01", "final_sentence": "default 01"}
{"comment_sentence_id": 3418, "class": "Option", "comment_sentence": "this is similar to nargs", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this is similar to nargs", "final_sentence": "this is similar to nargs"}
{"comment_sentence_id": 942, "class": "Audio", "comment_sentence": "rate integer", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "rate integer", "final_sentence": "rate integer"}
{"comment_sentence_id": 930, "class": "Audio", "comment_sentence": "dependent.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "dependent", "final_sentence": "dependent"}
{"comment_sentence_id": 2633, "class": "Environment", "comment_sentence": "undefined", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "undefined", "final_sentence": "undefined"}
{"comment_sentence_id": 3425, "class": "Option", "comment_sentence": "context.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "context", "final_sentence": "context"}
{"comment_sentence_id": 951, "class": "Audio", "comment_sentence": "default is true .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default is true", "final_sentence": "default is true"}
{"comment_sentence_id": 2661, "class": "Environment", "comment_sentence": "1 the cache will not be cleaned.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "1 the cache will not be cleaned", "final_sentence": "1 the cache will not be cleaned"}
{"comment_sentence_id": 4535, "class": "BCEWithLogitsLoss", "comment_sentence": "shape", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "shape", "final_sentence": "shape"}
{"comment_sentence_id": 3888, "class": "Retry", "comment_sentence": "param bool respect retry after header", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param bool respect retry after header", "final_sentence": "param bool respect retry after header"}
{"comment_sentence_id": 3414, "class": "Option", "comment_sentence": "this is set to a boolean automatically if", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "this is set to a boolean automatically if", "final_sentence": "this is set to a boolean automatically if"}
{"comment_sentence_id": 4275, "class": "Adamax", "comment_sentence": "arguments", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 4017, "class": "SkipTo", "comment_sentence": "the skipped text and target expression are returned as a 2 element list .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the skipped text and target expression are returned as a 2 element list", "final_sentence": "the skipped text and target expression are returned as a 2 element list"}
{"comment_sentence_id": 4757, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 1595, "class": "BooleanArray", "comment_sentence": "whether to copy the values and mask arrays.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether to copy the values and mask arrays", "final_sentence": "whether to copy the values and mask arrays"}
{"comment_sentence_id": 2592, "class": "Environment", "comment_sentence": "the string marking the end of a comment.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the end of a comment", "final_sentence": "the string marking the end of a comment"}
{"comment_sentence_id": 5337, "class": "MultiLabelMarginLoss", "comment_sentence": "size average bool, optional deprecated see attr reduction .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "size average bool optional deprecated see attr reduction", "final_sentence": "size average bool optional deprecated see attr reduction"}
{"comment_sentence_id": 4530, "class": "BCEWithLogitsLoss", "comment_sentence": "and attr reduce are in the process of being deprecated, and in the meantime,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "and attr reduce are in the process of being deprecated and in the meantime", "final_sentence": "and attr reduce are in the process of being deprecated and in the meantime"}
{"comment_sentence_id": 2002, "class": "PlotAccessor", "comment_sentence": "hist histogram", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "hist histogram", "final_sentence": "hist histogram"}
{"comment_sentence_id": 5086, "class": "EmbeddingBag", "comment_sentence": "sparse bool, optional if true , gradient w^r.t. attr weight matrix will be a sparse tensor.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "sparse bool optional if true gradient w r t attr weight matrix will be a sparse tensor", "final_sentence": "sparse bool optional if true gradient w r t attr weight matrix will be a sparse tensor"}
{"comment_sentence_id": 4382, "class": "BatchNorm1d", "comment_sentence": "ie simple average .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "ie simple average", "final_sentence": "ie simple average"}
{"comment_sentence_id": 3833, "class": "Retry", "comment_sentence": "param int read", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param int read", "final_sentence": "param int read"}
{"comment_sentence_id": 926, "class": "Audio", "comment_sentence": "bytestring containing raw pcm data or", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "bytestring containing raw pcm data or", "final_sentence": "bytestring containing raw pcm data or"}
{"comment_sentence_id": 5339, "class": "MultiLabelMarginLoss", "comment_sentence": "the losses are averaged over each loss element in the batch.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the losses are averaged over each loss element in the batch", "final_sentence": "the losses are averaged over each loss element in the batch"}
{"comment_sentence_id": 3832, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 2211, "class": "SelectNSeries", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 2644, "class": "Environment", "comment_sentence": "for more details about autoescaping see", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "for more details about autoescaping see", "final_sentence": "for more details about autoescaping see"}
{"comment_sentence_id": 2027, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 123, "class": "BaseCommand", "comment_sentence": "a short description of the command, which will be printed in", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a short description of the command which will be printed in", "final_sentence": "a short description of the command which will be printed in"}
{"comment_sentence_id": 947, "class": "Audio", "comment_sentence": "default is false .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default is false", "final_sentence": "default is false"}
{"comment_sentence_id": 4387, "class": "BatchNorm1d", "comment_sentence": "track running stats a boolean value that when set to true , this", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "track running stats a boolean value that when set to true this", "final_sentence": "track running stats a boolean value that when set to true this"}
{"comment_sentence_id": 4239, "class": "Adam", "comment_sentence": "arguments", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 2256, "class": "StringArray", "comment_sentence": "warning", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "warning", "final_sentence": "warning"}
{"comment_sentence_id": 3879, "class": "Retry", "comment_sentence": "param bool raise on status similar meaning to raise on redirect", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param bool raise on status similar meaning to raise on redirect", "final_sentence": "param bool raise on status similar meaning to raise on redirect"}
{"comment_sentence_id": 5342, "class": "MultiLabelMarginLoss", "comment_sentence": "if the field attr size average", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 2074, "class": "PlotAccessor", "comment_sentence": "plotting^backend .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "plotting backend", "final_sentence": "plotting backend"}
{"comment_sentence_id": 3402, "class": "Option", "comment_sentence": "option name capitalized.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "option name capitalized", "final_sentence": "option name capitalized"}
{"comment_sentence_id": 4528, "class": "BCEWithLogitsLoss", "comment_sentence": "elements in the output, sum the output will be summed.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "elements in the output sum the output will be summed", "final_sentence": "elements in the output sum the output will be summed"}
{"comment_sentence_id": 3843, "class": "Retry", "comment_sentence": "308", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "308", "final_sentence": "308"}
{"comment_sentence_id": 3745, "class": "Request", "comment_sentence": "param auth auth handler or user, pass tuple.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param auth auth handler or user pass tuple", "final_sentence": "param auth auth handler or user pass tuple"}
{"comment_sentence_id": 5350, "class": "MultiLabelMarginLoss", "comment_sentence": "on attr size average .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "on attr size average", "final_sentence": "on attr size average"}
{"comment_sentence_id": 5075, "class": "EmbeddingBag", "comment_sentence": "scale grad by freq boolean, optional if given, this will scale gradients by the inverse of frequency of", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "scale grad by freq boolean optional if given this will scale gradients by the inverse of frequency of", "final_sentence": "scale grad by freq boolean optional if given this will scale gradients by the inverse of frequency of"}
{"comment_sentence_id": 3388, "class": "Option", "comment_sentence": "param show default controls if the default value should be shown on the", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param show default controls if the default value should be shown on the", "final_sentence": "param show default controls if the default value should be shown on the"}
{"comment_sentence_id": 5347, "class": "MultiLabelMarginLoss", "comment_sentence": "reduce bool, optional deprecated see attr reduction .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "reduce bool optional deprecated see attr reduction", "final_sentence": "reduce bool optional deprecated see attr reduction"}
{"comment_sentence_id": 5090, "class": "EmbeddingBag", "comment_sentence": "supported when mode max .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "supported when mode max", "final_sentence": "supported when mode max"}
{"comment_sentence_id": 1732, "class": "CategoricalIndex", "comment_sentence": "name to be stored in the index.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "name to be stored in the index", "final_sentence": "name to be stored in the index"}
{"comment_sentence_id": 2214, "class": "SelectNSeries", "comment_sentence": "keep first , last , default first", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "keep first last default first", "final_sentence": "keep first last default first"}
{"comment_sentence_id": 2058, "class": "PlotAccessor", "comment_sentence": "if true, draw a table using the data in the dataframe and the data", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "if true draw a table using the data in the dataframe and the data", "final_sentence": "if true draw a table using the data in the dataframe and the data"}
{"comment_sentence_id": 4276, "class": "Adamax", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 5356, "class": "MultiLabelMarginLoss", "comment_sentence": "none no reduction will be applied,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "none no reduction will be applied", "final_sentence": "none no reduction will be applied"}
{"comment_sentence_id": 2023, "class": "PlotAccessor", "comment_sentence": "style list or dict", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "style list or dict", "final_sentence": "style list or dict"}
{"comment_sentence_id": 1714, "class": "CategoricalIndex", "comment_sentence": "categories will be replaced with nan.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "categories will be replaced with nan", "final_sentence": "categories will be replaced with nan"}
{"comment_sentence_id": 3871, "class": "Retry", "comment_sentence": "for 00s, 02s, 04s, .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "for 00s 02s 04s", "final_sentence": "for 00s 02s 04s"}
{"comment_sentence_id": 3859, "class": "Retry", "comment_sentence": "a set of integer http status codes that we should force a retry on.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "a set of integer http status codes that we should force a retry on", "final_sentence": "a set of integer http status codes that we should force a retry on"}
{"comment_sentence_id": 3892, "class": "Retry", "comment_sentence": "sequence of headers to remove from the request when a response", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "sequence of headers to remove from the request when a response", "final_sentence": "sequence of headers to remove from the request when a response"}
{"comment_sentence_id": 5336, "class": "MultiLabelMarginLoss", "comment_sentence": "args", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 3883, "class": "Retry", "comment_sentence": "param tuple history the history of the request encountered during", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "param tuple history the history of the request encountered during", "final_sentence": "param tuple history the history of the request encountered during"}
{"comment_sentence_id": 3624, "class": "Path", "comment_sentence": "supposed to be done by the shell only.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "supposed to be done by the shell only", "final_sentence": "supposed to be done by the shell only"}
{"comment_sentence_id": 2512, "class": "Context_", "comment_sentence": "getitem , contains .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "getitem contains", "final_sentence": "getitem contains"}
{"comment_sentence_id": 3837, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 2213, "class": "SelectNSeries", "comment_sentence": "n int", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "n int", "final_sentence": "n int"}
{"comment_sentence_id": 3893, "class": "Retry", "comment_sentence": "indicating a redirect is returned before firing off the redirected", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "indicating a redirect is returned before firing off the redirected", "final_sentence": "indicating a redirect is returned before firing off the redirected"}
{"comment_sentence_id": 2070, "class": "PlotAccessor", "comment_sentence": "include bool bool, default is false", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "include bool bool default is false", "final_sentence": "include bool bool default is false"}
{"comment_sentence_id": 3825, "class": "Retry", "comment_sentence": "account for unexpected edge cases and avoid infinite retry loops.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "account for unexpected edge cases and avoid infinite retry loops", "final_sentence": "account for unexpected edge cases and avoid infinite retry loops"}
{"comment_sentence_id": 5362, "class": "MultiLabelMarginLoss", "comment_sentence": "default mean", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 3884, "class": "Retry", "comment_sentence": "each call to meth retry^increment .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "each call to meth retry increment", "final_sentence": "each call to meth retry increment"}
{"comment_sentence_id": 2013, "class": "PlotAccessor", "comment_sentence": "title str or list", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "title str or list", "final_sentence": "title str or list"}
{"comment_sentence_id": 128, "class": "BaseCommand", "comment_sentence": "wrapped with begin and commit .", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "wrapped with begin and commit", "final_sentence": "wrapped with begin and commit"}
{"comment_sentence_id": 2507, "class": "Context_", "comment_sentence": "template filters and global functions marked as", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "template filters and global functions marked as", "final_sentence": "template filters and global functions marked as"}
{"comment_sentence_id": 3854, "class": "Retry", "comment_sentence": "idempotent multiple requests with the same parameters end with the", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "idempotent multiple requests with the same parameters end with the", "final_sentence": "idempotent multiple requests with the same parameters end with the"}
{"comment_sentence_id": 4721, "class": "Conv3d", "comment_sentence": "it is harder to describe, but this link has a nice visualization of what attr dilation does.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does", "final_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does"}
{"comment_sentence_id": 4021, "class": "SkipTo", "comment_sentence": "included in the skipped test if found before the target expression is found,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "included in the skipped test if found before the target expression is found", "final_sentence": "included in the skipped test if found before the target expression is found"}
{"comment_sentence_id": 797, "class": "StaticFilesHandler", "comment_sentence": "wsgi middleware that intercepts calls to the static files directory, as", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "wsgi middleware that intercepts calls to the static files directory as", "final_sentence": "wsgi middleware that intercepts calls to the static files directory as"}
{"comment_sentence_id": 2514, "class": "Context_", "comment_sentence": "method that doesn t fail with a keyerror but returns an", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "method that doesn t fail with a keyerror but returns an", "final_sentence": "method that doesn t fail with a keyerror but returns an"}
{"comment_sentence_id": 4014, "class": "SkipTo", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 1711, "class": "CategoricalIndex", "comment_sentence": "data array like 1 dimensional", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "data array like 1 dimensional", "final_sentence": "data array like 1 dimensional"}
{"comment_sentence_id": 3415, "class": "Option", "comment_sentence": "the option string contains a slash to mark two options.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "the option string contains a slash to mark two options", "final_sentence": "the option string contains a slash to mark two options"}
{"comment_sentence_id": 2253, "class": "StringArray", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 3880, "class": "Retry", "comment_sentence": "whether we should raise an exception, or return a response,", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether we should raise an exception or return a response", "final_sentence": "whether we should raise an exception or return a response"}
{"comment_sentence_id": 4505, "class": "BCEWithLogitsLoss", "comment_sentence": "of each batch element.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "of each batch element", "final_sentence": "of each batch element"}
{"comment_sentence_id": 3823, "class": "Retry", "comment_sentence": "counts.", "partition": 0, "instance_type": 1, "category": "Parameters", "pre_sentence": "counts", "final_sentence": "counts"}
{"comment_sentence_id": 1883, "class": "IntegerArray", "comment_sentence": "func pandas^array with one of the integer dtypes see examples .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "func pandas array with one of the integer dtypes see examples", "final_sentence": "func pandas array with one of the integer dtypes see examples"}
{"comment_sentence_id": 2338, "class": "TermValue", "comment_sentence": "hold a term value the we use to construct a condition filter", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "hold a term value the we use to construct a condition filter", "final_sentence": "hold a term value the we use to construct a condition filter"}
{"comment_sentence_id": 3053, "class": "LockFailed", "comment_sentence": "try", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "try", "final_sentence": "try"}
{"comment_sentence_id": 5006, "class": "DeQuantStub", "comment_sentence": "this will be swapped as nnq^dequantize in convert .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this will be swapped as nnq dequantize in convert", "final_sentence": "this will be swapped as nnq dequantize in convert"}
{"comment_sentence_id": 94, "class": "BaseCommand", "comment_sentence": "if you are interested in overriding customizing various aspects of", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if you are interested in overriding customizing various aspects of", "final_sentence": "if you are interested in overriding customizing various aspects of"}
{"comment_sentence_id": 3062, "class": "LRUCache", "comment_sentence": "a simple lru cache implementation.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a simple lru cache implementation", "final_sentence": "a simple lru cache implementation"}
{"comment_sentence_id": 1145, "class": "Struct", "comment_sentence": "protection of class members like keys, items when using attribute", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "protection of class members like keys items when using attribute", "final_sentence": "protection of class members like keys items when using attribute"}
{"comment_sentence_id": 4883, "class": "CyclicLR", "comment_sentence": "sets the learning rate of each parameter group according to", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sets the learning rate of each parameter group according to", "final_sentence": "sets the learning rate of each parameter group according to"}
{"comment_sentence_id": 2858, "class": "FileSystemLoader", "comment_sentence": "to follow symbolic links, set the followlinks parameter to true", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to follow symbolic links set the followlinks parameter to true", "final_sentence": "to follow symbolic links set the followlinks parameter to true"}
{"comment_sentence_id": 4640, "class": "BuildType", "comment_sentence": "if attr cmake build type env", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr cmake build type env", "final_sentence": "if attr cmake build type env"}
{"comment_sentence_id": 634, "class": "MultiValueField", "comment_sentence": "its clean method takes a decompressed list of values, which are then", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "its clean method takes a decompressed list of values which are then", "final_sentence": "its clean method takes a decompressed list of values which are then"}
{"comment_sentence_id": 1138, "class": "Obj", "comment_sentence": "namespace to hold arbitrary information.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "namespace to hold arbitrary information", "final_sentence": "namespace to hold arbitrary information"}
{"comment_sentence_id": 1839, "class": "CythonCommand", "comment_sentence": "to compile pyx c, and stop there.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to compile pyx c and stop there", "final_sentence": "to compile pyx c and stop there"}
{"comment_sentence_id": 5198, "class": "Error", "comment_sentence": "each error is a section in the output of cuda memcheck.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "each error is a section in the output of cuda memcheck", "final_sentence": "each error is a section in the output of cuda memcheck"}
{"comment_sentence_id": 1485, "class": "StorageBackedLongs", "comment_sentence": "TRUE", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 229, "class": "BoundWidget", "comment_sentence": "widgets that have choices.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "widgets that have choices", "final_sentence": "widgets that have choices"}
{"comment_sentence_id": 7, "class": "AppConfigStub", "comment_sentence": "stub of an appconfig.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "stub of an appconfig", "final_sentence": "stub of an appconfig"}
{"comment_sentence_id": 4885, "class": "CyclicLR", "comment_sentence": "the policy cycles the learning", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the policy cycles the learning", "final_sentence": "the policy cycles the learning"}
{"comment_sentence_id": 5902, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 331, "class": "EarliestOrLatestTests", "comment_sentence": "tests for the earliest and latest objects methods", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests for the earliest and latest objects methods", "final_sentence": "tests for the earliest and latest objects methods"}
{"comment_sentence_id": 4749, "class": "Conv3d", "comment_sentence": "math in channels c in , out channels c in times k, .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math in channels c in out channels c in times k", "final_sentence": "math in channels c in out channels c in times k"}
{"comment_sentence_id": 1848, "class": "ExcelFile", "comment_sentence": "see read excel for more documentation", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see read excel for more documentation", "final_sentence": "see read excel for more documentation"}
{"comment_sentence_id": 1238, "class": "_MockPOP3", "comment_sentence": "keyerror .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "keyerror", "final_sentence": "keyerror"}
{"comment_sentence_id": 5659, "class": "TransformerEncoderLayer", "comment_sentence": "encoder layer nn^transformerencoderlayer d model 512, nhead 8", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "encoder layer nn transformerencoderlayer d model 512 nhead 8", "final_sentence": "encoder layer nn transformerencoderlayer d model 512 nhead 8"}
{"comment_sentence_id": 1438, "class": "EncryptedIntDict", "comment_sentence": "encrypteddict which only deals in signed 64 bit int values.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "encrypteddict which only deals in signed 64 bit int values", "final_sentence": "encrypteddict which only deals in signed 64 bit int values"}
{"comment_sentence_id": 3514, "class": "ParseResults", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 405, "class": "KMLSitemap", "comment_sentence": "a minimal hook to produce kml sitemaps.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a minimal hook to produce kml sitemaps", "final_sentence": "a minimal hook to produce kml sitemaps"}
{"comment_sentence_id": 4970, "class": "CyclicLR", "comment_sentence": "train batch .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "train batch", "final_sentence": "train batch"}
{"comment_sentence_id": 3262, "class": "NotAny", "comment_sentence": "may be constructed using the operator.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "may be constructed using the operator", "final_sentence": "may be constructed using the operator"}
{"comment_sentence_id": 5768, "class": "Unfold", "comment_sentence": "torch^size 2, 30, 4", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "torch size 2 30 4", "final_sentence": "torch size 2 30 4"}
{"comment_sentence_id": 3537, "class": "ParseResults", "comment_sentence": "minutes in result false", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "minutes in result false", "final_sentence": "minutes in result false"}
{"comment_sentence_id": 3476, "class": "PacifyFlushWrapper", "comment_sentence": "so as to have minimal impact on any", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "so as to have minimal impact on any", "final_sentence": "so as to have minimal impact on any"}
{"comment_sentence_id": 1522, "class": "VCardStore", "comment_sentence": "vcs^del vcards vcs^find vcards guy", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs del vcards vcs find vcards guy", "final_sentence": "vcs del vcards vcs find vcards guy"}
{"comment_sentence_id": 3337, "class": "omdict", "comment_sentence": "getlist , add , addlist , set , setlist , setdefaultlist ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "getlist add addlist set setlist setdefaultlist", "final_sentence": "getlist add addlist set setlist setdefaultlist"}
{"comment_sentence_id": 5057, "class": "EmbeddingBag", "comment_sentence": "with mode mean is equivalent to class torch^nn.embedding followed by torch^mean dim 0 ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0", "final_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0"}
{"comment_sentence_id": 4463, "class": "BCEWithLogitsLoss", "comment_sentence": "followed by a bceloss as, by combining the operations into one layer,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "followed by a bceloss as by combining the operations into one layer", "final_sentence": "followed by a bceloss as by combining the operations into one layer"}
{"comment_sentence_id": 3180, "class": "MemcachedBytecodeCache", "comment_sentence": "value is a string and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "value is a string and", "final_sentence": "value is a string and"}
{"comment_sentence_id": 3522, "class": "ParseResults", "comment_sentence": "def test s, fn repr", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "def test s fn repr", "final_sentence": "def test s fn repr"}
{"comment_sentence_id": 86, "class": "BarAccount", "comment_sentence": "a service specific account of type bar.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a service specific account of type bar", "final_sentence": "a service specific account of type bar"}
{"comment_sentence_id": 1280, "class": "ConfigDict", "comment_sentence": "if the sanity check is itself a dictionary of rules, values are expected", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the sanity check is itself a dictionary of rules values are expected", "final_sentence": "if the sanity check is itself a dictionary of rules values are expected"}
{"comment_sentence_id": 3298, "class": "NotMyLock", "comment_sentence": "pass", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 5520, "class": "SGD", "comment_sentence": "optimizer^zero grad", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "optimizer zero grad", "final_sentence": "optimizer zero grad"}
{"comment_sentence_id": 1600, "class": "BooleanArray", "comment_sentence": "returns", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 3052, "class": "LockFailed", "comment_sentence": "lock file creation failed for some other reason.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "lock file creation failed for some other reason", "final_sentence": "lock file creation failed for some other reason"}
{"comment_sentence_id": 425, "class": "ListMixin", "comment_sentence": "set the single item at index i to value optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "set the single item at index i to value optional", "final_sentence": "set the single item at index i to value optional"}
{"comment_sentence_id": 1192, "class": "YouTubeVideo", "comment_sentence": "display vid", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "display vid", "final_sentence": "display vid"}
{"comment_sentence_id": 5739, "class": "Unfold", "comment_sentence": ", dilation .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dilation", "final_sentence": "dilation"}
{"comment_sentence_id": 4357, "class": "BatchNorm1d", "comment_sentence": "computed mean and variance, which are then used for normalization during", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "computed mean and variance which are then used for normalization during", "final_sentence": "computed mean and variance which are then used for normalization during"}
{"comment_sentence_id": 2358, "class": "_BZ2Proxy", "comment_sentence": "support for r bz2 and w bz2 modes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "support for r bz2 and w bz2 modes", "final_sentence": "support for r bz2 and w bz2 modes"}
{"comment_sentence_id": 1317, "class": "ConfigDict", "comment_sentence": "red , blue , red , red", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "red blue red red", "final_sentence": "red blue red red"}
{"comment_sentence_id": 3994, "class": "Session", "comment_sentence": "s requests^session", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "s requests session", "final_sentence": "s requests session"}
{"comment_sentence_id": 4541, "class": "BCEWithLogitsLoss", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1112, "class": "Magics", "comment_sentence": "use the method decorators @line magic and @cell magic to decorate", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "use the method decorators @line magic and @cell magic to decorate", "final_sentence": "use the method decorators @line magic and @cell magic to decorate"}
{"comment_sentence_id": 5895, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 3100, "class": "Markup", "comment_sentence": "markup em hello em foo", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup em hello em foo", "final_sentence": "markup em hello em foo"}
{"comment_sentence_id": 1228, "class": "_MockPOP3", "comment_sentence": "msg 1 , msg 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "msg 1 msg 2", "final_sentence": "msg 1 msg 2"}
{"comment_sentence_id": 1506, "class": "VCardStore", "comment_sentence": "# create a file for the card on disk, using a random name.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "create a file for the card on disk using a random name", "final_sentence": "create a file for the card on disk using a random name"}
{"comment_sentence_id": 1195, "class": "YouTubeVideo", "comment_sentence": "start int timedelta hours 1, minutes 46, seconds 40 ^total seconds", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "start int timedelta hours 1 minutes 46 seconds 40 total seconds", "final_sentence": "start int timedelta hours 1 minutes 46 seconds 40 total seconds"}
{"comment_sentence_id": 5563, "class": "StackTransform", "comment_sentence": "transform functor that applies a sequence of transforms tseq", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "transform functor that applies a sequence of transforms tseq", "final_sentence": "transform functor that applies a sequence of transforms tseq"}
{"comment_sentence_id": 5464, "class": "Poisson", "comment_sentence": "creates a poisson distribution parameterized by attr rate , the rate parameter.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter", "final_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter"}
{"comment_sentence_id": 5639, "class": "TestYellowFin", "comment_sentence": "yellowfin an automatic tuner for momentum sgd", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "yellowfin an automatic tuner for momentum sgd", "final_sentence": "yellowfin an automatic tuner for momentum sgd"}
{"comment_sentence_id": 4728, "class": "Conv3d", "comment_sentence": "layers side by side, each seeing half the input channels,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "layers side by side each seeing half the input channels", "final_sentence": "layers side by side each seeing half the input channels"}
{"comment_sentence_id": 5322, "class": "MultiLabelMarginLoss", "comment_sentence": "creates a criterion that optimizes a multi class multi classification", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "creates a criterion that optimizes a multi class multi classification", "final_sentence": "creates a criterion that optimizes a multi class multi classification"}
{"comment_sentence_id": 5296, "class": "Module", "comment_sentence": "super model, self .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "super model self", "final_sentence": "super model self"}
{"comment_sentence_id": 2827, "class": "FileMetadata", "comment_sentence": "this provider rejects all data and metadata requests except for pkg info,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this provider rejects all data and metadata requests except for pkg info", "final_sentence": "this provider rejects all data and metadata requests except for pkg info"}
{"comment_sentence_id": 3226, "class": "MethodDispatcher", "comment_sentence": "dict with 2 special properties", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dict with 2 special properties", "final_sentence": "dict with 2 special properties"}
{"comment_sentence_id": 3472, "class": "PacifyFlushWrapper", "comment_sentence": "from ^flush being called on broken pipe during the shutdown final gc", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "from flush being called on broken pipe during the shutdown final gc", "final_sentence": "from flush being called on broken pipe during the shutdown final gc"}
{"comment_sentence_id": 4145, "class": "_OpNamespace", "comment_sentence": "say a user has created a custom operator called my namespace my op .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "say a user has created a custom operator called my namespace my op", "final_sentence": "say a user has created a custom operator called my namespace my op"}
{"comment_sentence_id": 3021, "class": "InternalName", "comment_sentence": "yourself but the parser provides a", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "yourself but the parser provides a", "final_sentence": "yourself but the parser provides a"}
{"comment_sentence_id": 4369, "class": "BatchNorm1d", "comment_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t", "final_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t"}
{"comment_sentence_id": 4030, "class": "SkipTo", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 1442, "class": "EncryptedUnicodeDict", "comment_sentence": "encrypteddict which only deals in unicode values.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "encrypteddict which only deals in unicode values", "final_sentence": "encrypteddict which only deals in unicode values"}
{"comment_sentence_id": 104, "class": "BaseCommand", "comment_sentence": "pythonpath , and then calls the execute method,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pythonpath and then calls the execute method", "final_sentence": "pythonpath and then calls the execute method"}
{"comment_sentence_id": 3040, "class": "Kanji", "comment_sentence": "unicode set for kanji unicode character range", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unicode set for kanji unicode character range", "final_sentence": "unicode set for kanji unicode character range"}
{"comment_sentence_id": 4464, "class": "BCEWithLogitsLoss", "comment_sentence": "we take advantage of the log sum exp trick for numerical stability.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "we take advantage of the log sum exp trick for numerical stability", "final_sentence": "we take advantage of the log sum exp trick for numerical stability"}
{"comment_sentence_id": 4797, "class": "Conv3d", "comment_sentence": "input torch^randn 20, 16, 10, 50, 100", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 20 16 10 50 100", "final_sentence": "input torch randn 20 16 10 50 100"}
{"comment_sentence_id": 3532, "class": "ParseResults", "comment_sentence": "list result 1999 , , 12 , , 31", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "list result 1999 12 31", "final_sentence": "list result 1999 12 31"}
{"comment_sentence_id": 5103, "class": "EmbeddingBag", "comment_sentence": "starting index positions of each bag in attr input .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "starting index positions of each bag in attr input", "final_sentence": "starting index positions of each bag in attr input"}
{"comment_sentence_id": 5292, "class": "Module", "comment_sentence": "import torch^nn as nn", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "import torch nn as nn", "final_sentence": "import torch nn as nn"}
{"comment_sentence_id": 2495, "class": "CONSOLE_SCREEN_BUFFER_INFO", "comment_sentence": "struct in wincon^h.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "struct in wincon h", "final_sentence": "struct in wincon h"}
{"comment_sentence_id": 4729, "class": "Conv3d", "comment_sentence": "and producing half the output channels, and both subsequently", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and producing half the output channels and both subsequently", "final_sentence": "and producing half the output channels and both subsequently"}
{"comment_sentence_id": 3780, "class": "RequirementUninstaller", "comment_sentence": "a context manager to remove a package for the inner block.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a context manager to remove a package for the inner block", "final_sentence": "a context manager to remove a package for the inner block"}
{"comment_sentence_id": 5644, "class": "TransformerEncoderLayer", "comment_sentence": "ashish vaswani, noam shazeer, niki parmar, jakob uszkoreit, llion jones, aidan n gomez,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ashish vaswani noam shazeer niki parmar jakob uszkoreit llion jones aidan n gomez", "final_sentence": "ashish vaswani noam shazeer niki parmar jakob uszkoreit llion jones aidan n gomez"}
{"comment_sentence_id": 1444, "class": "Event", "comment_sentence": "this is a single event in the event log.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is a single event in the event log", "final_sentence": "this is a single event in the event log"}
{"comment_sentence_id": 913, "class": "Audio", "comment_sentence": "when this object is returned by an input cell or passed to the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "when this object is returned by an input cell or passed to the", "final_sentence": "when this object is returned by an input cell or passed to the"}
{"comment_sentence_id": 1515, "class": "VCardStore", "comment_sentence": "or they can be found using searches.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or they can be found using searches", "final_sentence": "or they can be found using searches"}
{"comment_sentence_id": 1968, "class": "IntervalDtype", "comment_sentence": "pd^intervaldtype subtype int64", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd intervaldtype subtype int64", "final_sentence": "pd intervaldtype subtype int64"}
{"comment_sentence_id": 2951, "class": "HebrewProber", "comment_sentence": "built.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "built", "final_sentence": "built"}
{"comment_sentence_id": 96, "class": "BaseCommand", "comment_sentence": "as follows", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "as follows", "final_sentence": "as follows"}
{"comment_sentence_id": 1177, "class": "UserMagics", "comment_sentence": "their own class.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "their own class", "final_sentence": "their own class"}
{"comment_sentence_id": 1198, "class": "YouTubeVideo", "comment_sentence": "when converting the notebook using nbconvert, a jpeg representation of the video", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "when converting the notebook using nbconvert a jpeg representation of the video", "final_sentence": "when converting the notebook using nbconvert a jpeg representation of the video"}
{"comment_sentence_id": 3515, "class": "ParseResults", "comment_sentence": "date str integer^setresultsname year", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "date str integer setresultsname year", "final_sentence": "date str integer setresultsname year"}
{"comment_sentence_id": 1911, "class": "IntegerArray", "comment_sentence": "pd^array 1, none, 3 , dtype uint16", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd array 1 none 3 dtype uint16", "final_sentence": "pd array 1 none 3 dtype uint16"}
{"comment_sentence_id": 424, "class": "ListMixin", "comment_sentence": "function set single self, i, value", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "function set single self i value", "final_sentence": "function set single self i value"}
{"comment_sentence_id": 5120, "class": "EmbeddingBag", "comment_sentence": "input torch^longtensor 1,2,4,5,4,3,2,9", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch longtensor 1 2 4 5 4 3 2 9", "final_sentence": "input torch longtensor 1 2 4 5 4 3 2 9"}
{"comment_sentence_id": 3676, "class": "PoolManager", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1662, "class": "CategoricalDtype", "comment_sentence": "this class is useful for specifying the type of a categorical", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class is useful for specifying the type of a categorical", "final_sentence": "this class is useful for specifying the type of a categorical"}
{"comment_sentence_id": 3089, "class": "Markup", "comment_sentence": "class foo", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class foo", "final_sentence": "class foo"}
{"comment_sentence_id": 2892, "class": "FollowedBy", "comment_sentence": "prints", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 5939, "class": "PreparedRequest", "comment_sentence": "r req^prepare", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "r req prepare", "final_sentence": "r req prepare"}
{"comment_sentence_id": 2831, "class": "FileMetadata", "comment_sentence": "usage", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 1313, "class": "ConfigDict", "comment_sentence": "pot colors ^append red", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot colors append red", "final_sentence": "pot colors append red"}
{"comment_sentence_id": 840, "class": "TestImageFieldFile", "comment_sentence": "custom field file class that records whether or not the underlying file", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "custom field file class that records whether or not the underlying file", "final_sentence": "custom field file class that records whether or not the underlying file"}
{"comment_sentence_id": 1480, "class": "StorageBackedLongs", "comment_sentence": "1 in sbl", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 in sbl", "final_sentence": "1 in sbl"}
{"comment_sentence_id": 3992, "class": "Session", "comment_sentence": "basic usage", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "basic usage", "final_sentence": "basic usage"}
{"comment_sentence_id": 435, "class": "ListMixin", "comment_sentence": "a type or tuple of allowed item types optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a type or tuple of allowed item types optional", "final_sentence": "a type or tuple of allowed item types optional"}
{"comment_sentence_id": 2881, "class": "FollowedBy", "comment_sentence": "followedby", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "followedby", "final_sentence": "followedby"}
{"comment_sentence_id": 1914, "class": "IntegerArray", "comment_sentence": "length 3, dtype uint16", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "length 3 dtype uint16", "final_sentence": "length 3 dtype uint16"}
{"comment_sentence_id": 5109, "class": "EmbeddingBag", "comment_sentence": "per sample weights tensor, optional a tensor of float double weights, or none", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "per sample weights tensor optional a tensor of float double weights or none", "final_sentence": "per sample weights tensor optional a tensor of float double weights or none"}
{"comment_sentence_id": 5735, "class": "Unfold", "comment_sentence": "consider class torch^nn.fold and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "consider class torch nn fold and", "final_sentence": "consider class torch nn fold and"}
{"comment_sentence_id": 2849, "class": "FileSystemLoader", "comment_sentence": "this loader can find templates", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this loader can find templates", "final_sentence": "this loader can find templates"}
{"comment_sentence_id": 300, "class": "CryptPasswordHasher", "comment_sentence": "password hashing using unix crypt not recommended", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "password hashing using unix crypt not recommended", "final_sentence": "password hashing using unix crypt not recommended"}
{"comment_sentence_id": 236, "class": "BoundWidget", "comment_sentence": "label", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "label", "final_sentence": "label"}
{"comment_sentence_id": 1496, "class": "Util", "comment_sentence": "utility functions for builds", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "utility functions for builds", "final_sentence": "utility functions for builds"}
{"comment_sentence_id": 329, "class": "Dumpdata", "comment_sentence": "tests for dumpdata management command.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests for dumpdata management command", "final_sentence": "tests for dumpdata management command"}
{"comment_sentence_id": 1965, "class": "IntervalDtype", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 893, "class": "XFrameOptionsMiddleware", "comment_sentence": "do not set the header if it s already set or if the response contains", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "do not set the header if it s already set or if the response contains", "final_sentence": "do not set the header if it s already set or if the response contains"}
{"comment_sentence_id": 1175, "class": "UserMagics", "comment_sentence": "all magics are eventually merged into a single namespace at runtime, but we", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "all magics are eventually merged into a single namespace at runtime but we", "final_sentence": "all magics are eventually merged into a single namespace at runtime but we"}
{"comment_sentence_id": 3307, "class": "omdict", "comment_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "final_sentence": "an ordered multivalue dictionary is a multivalue dictionary that"}
{"comment_sentence_id": 2890, "class": "FollowedBy", "comment_sentence": "attr expr group label suppress oneormore data word, stopon label ^setparseaction ^join", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr expr group label suppress oneormore data word stopon label setparseaction join", "final_sentence": "attr expr group label suppress oneormore data word stopon label setparseaction join"}
{"comment_sentence_id": 1910, "class": "IntegerArray", "comment_sentence": "length 3, dtype int32", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "length 3 dtype int32", "final_sentence": "length 3 dtype int32"}
{"comment_sentence_id": 5509, "class": "SGD", "comment_sentence": "on the importance of initialization and momentum in deep learning .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "on the importance of initialization and momentum in deep learning", "final_sentence": "on the importance of initialization and momentum in deep learning"}
{"comment_sentence_id": 3782, "class": "RequirementUninstaller", "comment_sentence": "if the inner block", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the inner block", "final_sentence": "if the inner block"}
{"comment_sentence_id": 5731, "class": "Unfold", "comment_sentence": "so, if the blocks overlap, they are not", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "so if the blocks overlap they are not", "final_sentence": "so if the blocks overlap they are not"}
{"comment_sentence_id": 4638, "class": "BuildType", "comment_sentence": "checks build type.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "checks build type", "final_sentence": "checks build type"}
{"comment_sentence_id": 433, "class": "ListMixin", "comment_sentence": "the maximum legal length optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the maximum legal length optional", "final_sentence": "the maximum legal length optional"}
{"comment_sentence_id": 4687, "class": "ConstantPad3d", "comment_sentence": "input torch^randn 16, 3, 10, 20, 30", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 16 3 10 20 30", "final_sentence": "input torch randn 16 3 10 20 30"}
{"comment_sentence_id": 872, "class": "VariableWrapper", "comment_sentence": "from being converted into a string when used to instantiate an oracleparam.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "from being converted into a string when used to instantiate an oracleparam", "final_sentence": "from being converted into a string when used to instantiate an oracleparam"}
{"comment_sentence_id": 575, "class": "MigrationQuestioner", "comment_sentence": "this base class has a built in noninteractive mode, but the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this base class has a built in noninteractive mode but the", "final_sentence": "this base class has a built in noninteractive mode but the"}
{"comment_sentence_id": 1134, "class": "MyFrame", "comment_sentence": "and has a simple menu.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and has a simple menu", "final_sentence": "and has a simple menu"}
{"comment_sentence_id": 1110, "class": "Magics", "comment_sentence": "classes providing magic functions need to subclass this class, and they", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "classes providing magic functions need to subclass this class and they", "final_sentence": "classes providing magic functions need to subclass this class and they"}
{"comment_sentence_id": 5764, "class": "Unfold", "comment_sentence": "output unfold input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output unfold input", "final_sentence": "output unfold input"}
{"comment_sentence_id": 5942, "class": "PreparedRequest", "comment_sentence": "s requests^session", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "s requests session", "final_sentence": "s requests session"}
{"comment_sentence_id": 1424, "class": "ConfigureMailboxes", "comment_sentence": "add one or more mailboxes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "add one or more mailboxes", "final_sentence": "add one or more mailboxes"}
{"comment_sentence_id": 1333, "class": "ConfigDict", "comment_sentence": "valueerror invalid value for config potatoes moo", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "valueerror invalid value for config potatoes moo", "final_sentence": "valueerror invalid value for config potatoes moo"}
{"comment_sentence_id": 505, "class": "MigrationGraph", "comment_sentence": "each migration is a node, and each dependency is an edge.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "each migration is a node and each dependency is an edge", "final_sentence": "each migration is a node and each dependency is an edge"}
{"comment_sentence_id": 5214, "class": "ExternalInitializer", "comment_sentence": "current version is not doing any real sanity checks to the parameter.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "current version is not doing any real sanity checks to the parameter", "final_sentence": "current version is not doing any real sanity checks to the parameter"}
{"comment_sentence_id": 3793, "class": "Resource", "comment_sentence": "class resourcefinder which manages the resource.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class resourcefinder which manages the resource", "final_sentence": "class resourcefinder which manages the resource"}
{"comment_sentence_id": 3260, "class": "NotAny", "comment_sentence": "notany always returns", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "notany always returns", "final_sentence": "notany always returns"}
{"comment_sentence_id": 4689, "class": "ConstantPad3d", "comment_sentence": "# using different paddings for different sides", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "using different paddings for different sides", "final_sentence": "using different paddings for different sides"}
{"comment_sentence_id": 357, "class": "FallbackStorage", "comment_sentence": "messages in each subsequent backend.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "messages in each subsequent backend", "final_sentence": "messages in each subsequent backend"}
{"comment_sentence_id": 4373, "class": "BatchNorm1d", "comment_sentence": "on n, l slices, it s common terminology to call this temporal batch normalization.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "on n l slices it s common terminology to call this temporal batch normalization", "final_sentence": "on n l slices it s common terminology to call this temporal batch normalization"}
{"comment_sentence_id": 337, "class": "ErrorDict", "comment_sentence": "a collection of errors that knows how to display itself in various formats.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a collection of errors that knows how to display itself in various formats", "final_sentence": "a collection of errors that knows how to display itself in various formats"}
{"comment_sentence_id": 2940, "class": "HebrewProber", "comment_sentence": "with the scores of the two sbcharsetprobers to produce a final answer.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with the scores of the two sbcharsetprobers to produce a final answer", "final_sentence": "with the scores of the two sbcharsetprobers to produce a final answer"}
{"comment_sentence_id": 4297, "class": "AdaptiveMaxPool3d", "comment_sentence": "the output is of size d x h x w, for any input size.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the output is of size d x h x w for any input size", "final_sentence": "the output is of size d x h x w for any input size"}
{"comment_sentence_id": 1987, "class": "PlotAccessor", "comment_sentence": "by default, matplotlib is used.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by default matplotlib is used", "final_sentence": "by default matplotlib is used"}
{"comment_sentence_id": 1838, "class": "CythonCommand", "comment_sentence": "custom distutils command subclassed from cython^distutils.build ext", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "custom distutils command subclassed from cython distutils build ext", "final_sentence": "custom distutils command subclassed from cython distutils build ext"}
{"comment_sentence_id": 2248, "class": "StringArray", "comment_sentence": "stringarray is considered experimental.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "stringarray is considered experimental", "final_sentence": "stringarray is considered experimental"}
{"comment_sentence_id": 5060, "class": "EmbeddingBag", "comment_sentence": "operations.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "operations", "final_sentence": "operations"}
{"comment_sentence_id": 1771, "class": "CategoricalIndex", "comment_sentence": "ci", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ci", "final_sentence": "ci"}
{"comment_sentence_id": 3606, "class": "Path", "comment_sentence": "basic checks about what the file or directory should be.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "basic checks about what the file or directory should be", "final_sentence": "basic checks about what the file or directory should be"}
{"comment_sentence_id": 1963, "class": "IntervalDtype", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 2558, "class": "Distribution", "comment_sentence": "either way, it must have some metadata, so that s all that s needed", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "either way it must have some metadata so that s all that s needed", "final_sentence": "either way it must have some metadata so that s all that s needed"}
{"comment_sentence_id": 2272, "class": "StringArray", "comment_sentence": "stringarray returns a booleanarray for comparison methods.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "stringarray returns a booleanarray for comparison methods", "final_sentence": "stringarray returns a booleanarray for comparison methods"}
{"comment_sentence_id": 1658, "class": "CategoricalDtype", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 2326, "class": "StringMethods", "comment_sentence": "methods, with some inspiration from r s stringr package.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods with some inspiration from r s stringr package", "final_sentence": "methods with some inspiration from r s stringr package"}
{"comment_sentence_id": 1521, "class": "VCardStore", "comment_sentence": "TRUE", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 2570, "class": "Environment", "comment_sentence": "globals and others.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "globals and others", "final_sentence": "globals and others"}
{"comment_sentence_id": 1221, "class": "_MockPOP3", "comment_sentence": "pm^stat", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pm stat", "final_sentence": "pm stat"}
{"comment_sentence_id": 899, "class": "XFrameOptionsMiddleware", "comment_sentence": "your project s django settings to deny .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "your project s django settings to deny", "final_sentence": "your project s django settings to deny"}
{"comment_sentence_id": 3991, "class": "Session", "comment_sentence": "provides cookie persistence, connection pooling, and configuration.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "provides cookie persistence connection pooling and configuration", "final_sentence": "provides cookie persistence connection pooling and configuration"}
{"comment_sentence_id": 685, "class": "ParentWithDependentChildren", "comment_sentence": "model where the validation of child foreign key relationships depends", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "model where the validation of child foreign key relationships depends", "final_sentence": "model where the validation of child foreign key relationships depends"}
{"comment_sentence_id": 410, "class": "ListMixin", "comment_sentence": "function get single external self, i", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "function get single external self i", "final_sentence": "function get single external self i"}
{"comment_sentence_id": 3530, "class": "ParseResults", "comment_sentence": "test result^dump , str", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test result dump str", "final_sentence": "test result dump str"}
{"comment_sentence_id": 1230, "class": "_MockPOP3", "comment_sentence": "47, 51", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "47 51", "final_sentence": "47 51"}
{"comment_sentence_id": 4042, "class": "SkipTo", "comment_sentence": "print tkt^dump", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "print tkt dump", "final_sentence": "print tkt dump"}
{"comment_sentence_id": 3808, "class": "Retry", "comment_sentence": "they can be safely reused.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "they can be safely reused", "final_sentence": "they can be safely reused"}
{"comment_sentence_id": 1846, "class": "ExcelFile", "comment_sentence": "class for parsing tabular excel sheets into dataframe objects.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class for parsing tabular excel sheets into dataframe objects", "final_sentence": "class for parsing tabular excel sheets into dataframe objects"}
{"comment_sentence_id": 1083, "class": "InteractiveShellApp", "comment_sentence": "meth init gui pylab", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "meth init gui pylab", "final_sentence": "meth init gui pylab"}
{"comment_sentence_id": 2422, "class": "Bucket", "comment_sentence": "buckets are used to store the bytecode for one template.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "buckets are used to store the bytecode for one template", "final_sentence": "buckets are used to store the bytecode for one template"}
{"comment_sentence_id": 1482, "class": "StorageBackedLongs", "comment_sentence": "sbl^append 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sbl append 2", "final_sentence": "sbl append 2"}
{"comment_sentence_id": 557, "class": "MigrationLoader", "comment_sentence": "in memory.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in memory", "final_sentence": "in memory"}
{"comment_sentence_id": 1216, "class": "_MockPOP3", "comment_sentence": "pm pop3mailbox localhost , user bad , conn cls mockpop3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pm pop3mailbox localhost user bad conn cls mockpop3", "final_sentence": "pm pop3mailbox localhost user bad conn cls mockpop3"}
{"comment_sentence_id": 5426, "class": "NetModifier", "comment_sentence": "an abstraction class for supporting modifying a generated net.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an abstraction class for supporting modifying a generated net", "final_sentence": "an abstraction class for supporting modifying a generated net"}
{"comment_sentence_id": 3539, "class": "ParseResults", "comment_sentence": "day 31", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "day 31", "final_sentence": "day 31"}
{"comment_sentence_id": 4043, "class": "SkipTo", "comment_sentence": "prints", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 4487, "class": "BCEWithLogitsLoss", "comment_sentence": "1 y n,c cdot log 1 sigma x n,c right ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 y n c cdot log 1 sigma x n c right", "final_sentence": "1 y n c cdot log 1 sigma x n c right"}
{"comment_sentence_id": 1219, "class": "_MockPOP3", "comment_sentence": "pm pop3mailbox localhost , user a , password b ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pm pop3mailbox localhost user a password b", "final_sentence": "pm pop3mailbox localhost user a password b"}
{"comment_sentence_id": 795, "class": "SplitHiddenDateTimeWidget", "comment_sentence": "a widget that splits datetime input into two input type hidden inputs.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a widget that splits datetime input into two input type hidden inputs", "final_sentence": "a widget that splits datetime input into two input type hidden inputs"}
{"comment_sentence_id": 894, "class": "XFrameOptionsMiddleware", "comment_sentence": "a xframe options exempt value set to true.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a xframe options exempt value set to true", "final_sentence": "a xframe options exempt value set to true"}
{"comment_sentence_id": 746, "class": "RequestFactoryEnvironmentTests", "comment_sentence": "are set correctly in requestfactory.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "are set correctly in requestfactory", "final_sentence": "are set correctly in requestfactory"}
{"comment_sentence_id": 2960, "class": "HebrewProber", "comment_sentence": "disjointed from the model probers, the results of the hebrewprober", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "disjointed from the model probers the results of the hebrewprober", "final_sentence": "disjointed from the model probers the results of the hebrewprober"}
{"comment_sentence_id": 1985, "class": "PlotAccessor", "comment_sentence": "uses the backend specified by the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "uses the backend specified by the", "final_sentence": "uses the backend specified by the"}
{"comment_sentence_id": 5658, "class": "TransformerEncoderLayer", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1299, "class": "ConfigDict", "comment_sentence": "colors colors , red , blue ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "colors colors red blue", "final_sentence": "colors colors red blue"}
{"comment_sentence_id": 5746, "class": "Unfold", "comment_sentence": "equality holds", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "equality holds", "final_sentence": "equality holds"}
{"comment_sentence_id": 4044, "class": "SkipTo", "comment_sentence": "101 , critical , intermittent system crash , 6", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "101 critical intermittent system crash 6", "final_sentence": "101 critical intermittent system crash 6"}
{"comment_sentence_id": 408, "class": "ListMixin", "comment_sentence": "derived classes must call listmixin s init function", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "derived classes must call listmixin s init function", "final_sentence": "derived classes must call listmixin s init function"}
{"comment_sentence_id": 3188, "class": "MemcachedBytecodeCache", "comment_sentence": "if the item does not", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the item does not", "final_sentence": "if the item does not"}
{"comment_sentence_id": 1737, "class": "CategoricalIndex", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 725, "class": "ProxyModelInheritanceTests", "comment_sentence": "this test creates two dummy", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this test creates two dummy", "final_sentence": "this test creates two dummy"}
{"comment_sentence_id": 5062, "class": "EmbeddingBag", "comment_sentence": "pass.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 3296, "class": "NotMyLock", "comment_sentence": "raise notmylock", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "raise notmylock", "final_sentence": "raise notmylock"}
{"comment_sentence_id": 726, "class": "ProxyModelInheritanceTests", "comment_sentence": "apps and calls migrate, then verifies that the table has been created.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "apps and calls migrate then verifies that the table has been created", "final_sentence": "apps and calls migrate then verifies that the table has been created"}
{"comment_sentence_id": 428, "class": "ListMixin", "comment_sentence": "function len self", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "function len self", "final_sentence": "function len self"}
{"comment_sentence_id": 1158, "class": "TBTools", "comment_sentence": "basic tools used by all traceback printer classes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "basic tools used by all traceback printer classes", "final_sentence": "basic tools used by all traceback printer classes"}
{"comment_sentence_id": 4468, "class": "BCEWithLogitsLoss", "comment_sentence": "l n w n left y n cdot log sigma x n", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "l n w n left y n cdot log sigma x n", "final_sentence": "l n w n left y n cdot log sigma x n"}
{"comment_sentence_id": 2852, "class": "FileSystemLoader", "comment_sentence": "locations are wanted a list of them which is then looked up in the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "locations are wanted a list of them which is then looked up in the", "final_sentence": "locations are wanted a list of them which is then looked up in the"}
{"comment_sentence_id": 3524, "class": "ParseResults", "comment_sentence": "test list result", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test list result", "final_sentence": "test list result"}
{"comment_sentence_id": 3294, "class": "NotMyLock", "comment_sentence": "raised when an attempt is made to unlock a file someone else locked.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "raised when an attempt is made to unlock a file someone else locked", "final_sentence": "raised when an attempt is made to unlock a file someone else locked"}
{"comment_sentence_id": 1163, "class": "TermColors", "comment_sentence": "also defines a nocolor escape which is just the null", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "also defines a nocolor escape which is just the null", "final_sentence": "also defines a nocolor escape which is just the null"}
{"comment_sentence_id": 538, "class": "MigrationLoader", "comment_sentence": "load migration files from disk and their status from the database.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "load migration files from disk and their status from the database", "final_sentence": "load migration files from disk and their status from the database"}
{"comment_sentence_id": 1900, "class": "IntegerArray", "comment_sentence": "int array pd^array 1, none, 3 , dtype pd^int32dtype", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "int array pd array 1 none 3 dtype pd int32dtype", "final_sentence": "int array pd array 1 none 3 dtype pd int32dtype"}
{"comment_sentence_id": 3003, "class": "HTTPError", "comment_sentence": "an http error occurred.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an http error occurred", "final_sentence": "an http error occurred"}
{"comment_sentence_id": 1236, "class": "_MockPOP3", "comment_sentence": "pm invalid key", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pm invalid key", "final_sentence": "pm invalid key"}
{"comment_sentence_id": 2086, "class": "PlotAccessor", "comment_sentence": "notes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 3024, "class": "InternalName", "comment_sentence": "this identifier is not available from the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this identifier is not available from the", "final_sentence": "this identifier is not available from the"}
{"comment_sentence_id": 4787, "class": "Conv3d", "comment_sentence": "bias tensor the learnable bias of the module of shape out channels .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "bias tensor the learnable bias of the module of shape out channels", "final_sentence": "bias tensor the learnable bias of the module of shape out channels"}
{"comment_sentence_id": 4371, "class": "BatchNorm1d", "comment_sentence": "new observed value.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "new observed value", "final_sentence": "new observed value"}
{"comment_sentence_id": 765, "class": "SameAsLookup", "comment_sentence": "equality of two features.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "equality of two features", "final_sentence": "equality of two features"}
{"comment_sentence_id": 306, "class": "CustomCacheKeyValidationTests", "comment_sentence": "tests for the ability to mixin a custom validate key method to", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests for the ability to mixin a custom validate key method to", "final_sentence": "tests for the ability to mixin a custom validate key method to"}
{"comment_sentence_id": 897, "class": "XFrameOptionsMiddleware", "comment_sentence": "to prevent the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to prevent the", "final_sentence": "to prevent the"}
{"comment_sentence_id": 4661, "class": "Caffe2OperatorTestCase", "comment_sentence": "when run backward is false, the run forward method will be executed, otherwise", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "when run backward is false the run forward method will be executed otherwise", "final_sentence": "when run backward is false the run forward method will be executed otherwise"}
{"comment_sentence_id": 1188, "class": "YouTubeVideo", "comment_sentence": "vid youtubevideo foo", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vid youtubevideo foo", "final_sentence": "vid youtubevideo foo"}
{"comment_sentence_id": 507, "class": "MigrationGraph", "comment_sentence": "no implicit dependencies between numbered migrations the numbering is", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "no implicit dependencies between numbered migrations the numbering is", "final_sentence": "no implicit dependencies between numbered migrations the numbering is"}
{"comment_sentence_id": 5903, "class": "UseOptimizer", "comment_sentence": "with useoptimizer optim2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with useoptimizer optim2", "final_sentence": "with useoptimizer optim2"}
{"comment_sentence_id": 968, "class": "Audio", "comment_sentence": "audio url http www^w3schools^com html horse^ogg", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "audio url http www w3schools com html horse ogg", "final_sentence": "audio url http www w3schools com html horse ogg"}
{"comment_sentence_id": 1761, "class": "CategoricalIndex", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 2440, "class": "CaseInsensitiveDict", "comment_sentence": "a case insensitive dict like object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a case insensitive dict like object", "final_sentence": "a case insensitive dict like object"}
{"comment_sentence_id": 3084, "class": "Markup", "comment_sentence": "markup hello &lt em&gt world&lt em&gt !", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup hello lt em gt world lt em gt", "final_sentence": "markup hello lt em gt world lt em gt"}
{"comment_sentence_id": 517, "class": "MigrationGraph", "comment_sentence": "or not present, it should ignore the replaced ones, load in just the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or not present it should ignore the replaced ones load in just the", "final_sentence": "or not present it should ignore the replaced ones load in just the"}
{"comment_sentence_id": 5119, "class": "EmbeddingBag", "comment_sentence": "# a batch of 2 samples of 4 indices each", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a batch of 2 samples of 4 indices each", "final_sentence": "a batch of 2 samples of 4 indices each"}
{"comment_sentence_id": 657, "class": "MultiWidget", "comment_sentence": "these can be looped over and rendered like normal widgets.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "these can be looped over and rendered like normal widgets", "final_sentence": "these can be looped over and rendered like normal widgets"}
{"comment_sentence_id": 1908, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 1101, "class": "Magics", "comment_sentence": "base class for implementing magic functions.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class for implementing magic functions", "final_sentence": "base class for implementing magic functions"}
{"comment_sentence_id": 5748, "class": "Unfold", "comment_sentence": "where divisor is a tensor that depends only on the shape", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "where divisor is a tensor that depends only on the shape", "final_sentence": "where divisor is a tensor that depends only on the shape"}
{"comment_sentence_id": 348, "class": "FakePayload", "comment_sentence": "this makes sure that views can t do anything under the test client", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this makes sure that views can t do anything under the test client", "final_sentence": "this makes sure that views can t do anything under the test client"}
{"comment_sentence_id": 1463, "class": "MailpileMailbox", "comment_sentence": "instead of in filenames", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "instead of in filenames", "final_sentence": "instead of in filenames"}
{"comment_sentence_id": 3790, "class": "Resource", "comment_sentence": "a class representing an in package resource, such as a data file.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a class representing an in package resource such as a data file", "final_sentence": "a class representing an in package resource such as a data file"}
{"comment_sentence_id": 2563, "class": "DocumentErrorTree", "comment_sentence": "implements a dict like class to query errors by indexes following the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements a dict like class to query errors by indexes following the", "final_sentence": "implements a dict like class to query errors by indexes following the"}
{"comment_sentence_id": 235, "class": "BoundWidget", "comment_sentence": "span class radio radio^tag span", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "span class radio radio tag span", "final_sentence": "span class radio radio tag span"}
{"comment_sentence_id": 2327, "class": "StringMethods", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1140, "class": "RichPromptDisplayHook", "comment_sentence": "subclass of base display hook using coloured prompt", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "subclass of base display hook using coloured prompt", "final_sentence": "subclass of base display hook using coloured prompt"}
{"comment_sentence_id": 2812, "class": "FakeFile", "comment_sentence": "wrap a list of lines in an object with readline to make", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "wrap a list of lines in an object with readline to make", "final_sentence": "wrap a list of lines in an object with readline to make"}
{"comment_sentence_id": 5235, "class": "LastNWindowCollector", "comment_sentence": "collect last n samples from input record.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "collect last n samples from input record", "final_sentence": "collect last n samples from input record"}
{"comment_sentence_id": 2382, "class": "And", "comment_sentence": "requires all given class parseexpression s to be found in the given order.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "requires all given class parseexpression s to be found in the given order", "final_sentence": "requires all given class parseexpression s to be found in the given order"}
{"comment_sentence_id": 2875, "class": "Filter_", "comment_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "final_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes"}
{"comment_sentence_id": 1060, "class": "GeoJSON", "comment_sentence": "scalar types none, number, string are not allowed, only dict containers.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "scalar types none number string are not allowed only dict containers", "final_sentence": "scalar types none number string are not allowed only dict containers"}
{"comment_sentence_id": 3092, "class": "Markup", "comment_sentence": "markup foo", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup foo", "final_sentence": "markup foo"}
{"comment_sentence_id": 3056, "class": "LockFailed", "comment_sentence": "pass", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 2322, "class": "StringMethods", "comment_sentence": "vectorized string functions for series and index.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vectorized string functions for series and index", "final_sentence": "vectorized string functions for series and index"}
{"comment_sentence_id": 3474, "class": "PacifyFlushWrapper", "comment_sentence": "notably ^flush is always called on", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "notably flush is always called on", "final_sentence": "notably flush is always called on"}
{"comment_sentence_id": 202, "class": "BaseDatabaseSchemaEditor", "comment_sentence": "statements to the databases model creation removal alteration, field", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "statements to the databases model creation removal alteration field", "final_sentence": "statements to the databases model creation removal alteration field"}
{"comment_sentence_id": 1743, "class": "CategoricalIndex", "comment_sentence": "set categories", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "set categories", "final_sentence": "set categories"}
{"comment_sentence_id": 1434, "class": "ConnectToGuiOMatic", "comment_sentence": "connect to a waiting gui o matic gui", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "connect to a waiting gui o matic gui", "final_sentence": "connect to a waiting gui o matic gui"}
{"comment_sentence_id": 5586, "class": "Task", "comment_sentence": "tasks are executed in the context of a taskgroup, which, in turn, can", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tasks are executed in the context of a taskgroup which in turn can", "final_sentence": "tasks are executed in the context of a taskgroup which in turn can"}
{"comment_sentence_id": 5116, "class": "EmbeddingBag", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1147, "class": "Struct", "comment_sentence": "the ability to restrict assignment to only existing keys.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the ability to restrict assignment to only existing keys", "final_sentence": "the ability to restrict assignment to only existing keys"}
{"comment_sentence_id": 389, "class": "Individual", "comment_sentence": "related instances rendering will be called programmatically in this case .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "related instances rendering will be called programmatically in this case", "final_sentence": "related instances rendering will be called programmatically in this case"}
{"comment_sentence_id": 1582, "class": "BooleanArray", "comment_sentence": "below .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "below", "final_sentence": "below"}
{"comment_sentence_id": 2088, "class": "PlotAccessor", "comment_sentence": "if kind bar or barh , you can specify relative alignments", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if kind bar or barh you can specify relative alignments", "final_sentence": "if kind bar or barh you can specify relative alignments"}
{"comment_sentence_id": 53, "class": "AtomicTests", "comment_sentence": "since the decorator syntax is converted into a context manager see the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "since the decorator syntax is converted into a context manager see the", "final_sentence": "since the decorator syntax is converted into a context manager see the"}
{"comment_sentence_id": 5095, "class": "EmbeddingBag", "comment_sentence": "attr per index weights tensor, optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr per index weights tensor optional", "final_sentence": "attr per index weights tensor optional"}
{"comment_sentence_id": 3705, "class": "PrefixLoader", "comment_sentence": "app1 packageloader mypackage^app1 ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "app1 packageloader mypackage app1", "final_sentence": "app1 packageloader mypackage app1"}
{"comment_sentence_id": 1106, "class": "Magics", "comment_sentence": "this can make some functions easier to type, eg%cd .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this can make some functions easier to type eg cd", "final_sentence": "this can make some functions easier to type eg cd"}
{"comment_sentence_id": 2455, "class": "CaseInsensitiveDict", "comment_sentence": "list cid accept # true", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "list cid accept true", "final_sentence": "list cid accept true"}
{"comment_sentence_id": 3093, "class": "Markup", "comment_sentence": "markup a href foo foo a", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup a href foo foo a", "final_sentence": "markup a href foo foo a"}
{"comment_sentence_id": 3798, "class": "ResourceFinder", "comment_sentence": "resource finder for file system resources.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "resource finder for file system resources", "final_sentence": "resource finder for file system resources"}
{"comment_sentence_id": 3521, "class": "ParseResults", "comment_sentence": "result date str^parsestring 1999 12 31", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "result date str parsestring 1999 12 31", "final_sentence": "result date str parsestring 1999 12 31"}
{"comment_sentence_id": 1892, "class": "IntegerArray", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 1330, "class": "ConfigDict", "comment_sentence": "invalidkeyerror invalid key for config liquids evil", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "invalidkeyerror invalid key for config liquids evil", "final_sentence": "invalidkeyerror invalid key for config liquids evil"}
{"comment_sentence_id": 879, "class": "WindowFrame", "comment_sentence": "model the frame clause in window expressions.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "model the frame clause in window expressions", "final_sentence": "model the frame clause in window expressions"}
{"comment_sentence_id": 975, "class": "Audio", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 269, "class": "Client", "comment_sentence": "thus session details for the lifetime of the client instance.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "thus session details for the lifetime of the client instance", "final_sentence": "thus session details for the lifetime of the client instance"}
{"comment_sentence_id": 915, "class": "Audio", "comment_sentence": "in the frontend only works in the notebook .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in the frontend only works in the notebook", "final_sentence": "in the frontend only works in the notebook"}
{"comment_sentence_id": 3731, "class": "Request", "comment_sentence": "used to prepare a class preparedrequest preparedrequest , which is sent to the server.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "used to prepare a class preparedrequest preparedrequest which is sent to the server", "final_sentence": "used to prepare a class preparedrequest preparedrequest which is sent to the server"}
{"comment_sentence_id": 3473, "class": "PacifyFlushWrapper", "comment_sentence": "of the python interpreter.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "of the python interpreter", "final_sentence": "of the python interpreter"}
{"comment_sentence_id": 5114, "class": "EmbeddingBag", "comment_sentence": "only supported for mode sum .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "only supported for mode sum", "final_sentence": "only supported for mode sum"}
{"comment_sentence_id": 5368, "class": "MultiLabelMarginLoss", "comment_sentence": "if attr reduction is none , then math n .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr reduction is none then math n", "final_sentence": "if attr reduction is none then math n"}
{"comment_sentence_id": 5752, "class": "Unfold", "comment_sentence": "when the divisor tensor contains no zero elements, then", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "when the divisor tensor contains no zero elements then", "final_sentence": "when the divisor tensor contains no zero elements then"}
{"comment_sentence_id": 3184, "class": "MemcachedBytecodeCache", "comment_sentence": "provided it s an integer with the number of seconds the cache", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "provided it s an integer with the number of seconds the cache", "final_sentence": "provided it s an integer with the number of seconds the cache"}
{"comment_sentence_id": 4485, "class": "BCEWithLogitsLoss", "comment_sentence": "ell c x, y l c l 1,c , dots,l n,c ^ top, quad", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ell c x y l c l 1 c dots l n c top quad", "final_sentence": "ell c x y l c l 1 c dots l n c top quad"}
{"comment_sentence_id": 4777, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 5771, "class": "Unfold", "comment_sentence": "w torch^randn 2, 3, 4, 5", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "w torch randn 2 3 4 5", "final_sentence": "w torch randn 2 3 4 5"}
{"comment_sentence_id": 1142, "class": "Struct", "comment_sentence": "a dict subclass with attribute style access.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a dict subclass with attribute style access", "final_sentence": "a dict subclass with attribute style access"}
{"comment_sentence_id": 2853, "class": "FileSystemLoader", "comment_sentence": "given order", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "given order", "final_sentence": "given order"}
{"comment_sentence_id": 2879, "class": "FollowedBy", "comment_sentence": "the input string, it only verifies that the specified parse", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the input string it only verifies that the specified parse", "final_sentence": "the input string it only verifies that the specified parse"}
{"comment_sentence_id": 882, "class": "WindowFrame", "comment_sentence": "means intended to be complete is done here.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "means intended to be complete is done here", "final_sentence": "means intended to be complete is done here"}
{"comment_sentence_id": 5604, "class": "Task", "comment_sentence": "each instance will copy local to globl 100 times, then add local", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "each instance will copy local to globl 100 times then add local", "final_sentence": "each instance will copy local to globl 100 times then add local"}
{"comment_sentence_id": 416, "class": "ListMixin", "comment_sentence": "different types of objects, set list must distinguish", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "different types of objects set list must distinguish", "final_sentence": "different types of objects set list must distinguish"}
{"comment_sentence_id": 4035, "class": "SkipTo", "comment_sentence": "string data skipto sep, ignore quotedstring", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "string data skipto sep ignore quotedstring", "final_sentence": "string data skipto sep ignore quotedstring"}
{"comment_sentence_id": 5298, "class": "Module", "comment_sentence": "self^conv1 nn^conv2d 1, 20, 5", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "self conv1 nn conv2d 1 20 5", "final_sentence": "self conv1 nn conv2d 1 20 5"}
{"comment_sentence_id": 4023, "class": "SkipTo", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 665, "class": "NestedObjectsTests", "comment_sentence": "tests for nestedobject utility collection.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests for nestedobject utility collection", "final_sentence": "tests for nestedobject utility collection"}
{"comment_sentence_id": 5597, "class": "Task", "comment_sentence": "with ops^loop 100", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with ops loop 100", "final_sentence": "with ops loop 100"}
{"comment_sentence_id": 1305, "class": "ConfigDict", "comment_sentence": "pot liquids vodka", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot liquids vodka", "final_sentence": "pot liquids vodka"}
{"comment_sentence_id": 1760, "class": "CategoricalIndex", "comment_sentence": "for more.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for more", "final_sentence": "for more"}
{"comment_sentence_id": 3749, "class": "Request", "comment_sentence": "import requests", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "import requests", "final_sentence": "import requests"}
{"comment_sentence_id": 2818, "class": "fdspawn", "comment_sentence": "for example, you could use it to read through a file looking", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for example you could use it to read through a file looking", "final_sentence": "for example you could use it to read through a file looking"}
{"comment_sentence_id": 2282, "class": "StringArray", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 2956, "class": "HebrewProber", "comment_sentence": "the hebrewprober is not using any language model.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the hebrewprober is not using any language model", "final_sentence": "the hebrewprober is not using any language model"}
{"comment_sentence_id": 3091, "class": "Markup", "comment_sentence": "return a href foo foo a", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "return a href foo foo a", "final_sentence": "return a href foo foo a"}
{"comment_sentence_id": 1871, "class": "Holiday", "comment_sentence": "for observance.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for observance", "final_sentence": "for observance"}
{"comment_sentence_id": 3813, "class": "Retry", "comment_sentence": "or per request which overrides the default for the pool", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or per request which overrides the default for the pool", "final_sentence": "or per request which overrides the default for the pool"}
{"comment_sentence_id": 4055, "class": "SkipTo", "comment_sentence": "days open 47", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "days open 47", "final_sentence": "days open 47"}
{"comment_sentence_id": 513, "class": "MigrationGraph", "comment_sentence": "this is to support the squash feature.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is to support the squash feature", "final_sentence": "this is to support the squash feature"}
{"comment_sentence_id": 3505, "class": "ParseResultBytes", "comment_sentence": "compatibility shim for the urlparse^parseresultbytes object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "compatibility shim for the urlparse parseresultbytes object", "final_sentence": "compatibility shim for the urlparse parseresultbytes object"}
{"comment_sentence_id": 1736, "class": "CategoricalIndex", "comment_sentence": "ordered", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ordered", "final_sentence": "ordered"}
{"comment_sentence_id": 4033, "class": "SkipTo", "comment_sentence": "# ignore quoted strings, so that a character inside a quoted string does not match", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ignore quoted strings so that a character inside a quoted string does not match", "final_sentence": "ignore quoted strings so that a character inside a quoted string does not match"}
{"comment_sentence_id": 3519, "class": "ParseResults", "comment_sentence": "# date str integer year integer month integer day", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "date str integer year integer month integer day", "final_sentence": "date str integer year integer month integer day"}
{"comment_sentence_id": 216, "class": "BaseYearArchiveView", "comment_sentence": "list of objects published in a given year.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "list of objects published in a given year", "final_sentence": "list of objects published in a given year"}
{"comment_sentence_id": 304, "class": "CustomArticleAdmin", "comment_sentence": "tests various hooks for using custom templates and contexts.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests various hooks for using custom templates and contexts", "final_sentence": "tests various hooks for using custom templates and contexts"}
{"comment_sentence_id": 1735, "class": "CategoricalIndex", "comment_sentence": "categories", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "categories", "final_sentence": "categories"}
{"comment_sentence_id": 325, "class": "DisallowedModelAdminToField", "comment_sentence": "invalid to field was passed to admin view via url query string", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "invalid to field was passed to admin view via url query string", "final_sentence": "invalid to field was passed to admin view via url query string"}
{"comment_sentence_id": 3055, "class": "LockFailed", "comment_sentence": "except lockerror", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "except lockerror", "final_sentence": "except lockerror"}
{"comment_sentence_id": 422, "class": "ListMixin", "comment_sentence": "temp list items", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "temp list items", "final_sentence": "temp list items"}
{"comment_sentence_id": 4400, "class": "BatchNorm1d", "comment_sentence": "input torch^randn 20, 100", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 20 100", "final_sentence": "input torch randn 20 100"}
{"comment_sentence_id": 3523, "class": "ParseResults", "comment_sentence": "print %s %s % s, fn eval s", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "print s s s fn eval s", "final_sentence": "print s s s fn eval s"}
{"comment_sentence_id": 1266, "class": "AutoTlsConnBroker", "comment_sentence": "least do the ssl handshake here so we can record info about it.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "least do the ssl handshake here so we can record info about it", "final_sentence": "least do the ssl handshake here so we can record info about it"}
{"comment_sentence_id": 1476, "class": "StorageBackedLongs", "comment_sentence": "this combines storagebackeddata with pack unpacklonglist to pack", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this combines storagebackeddata with pack unpacklonglist to pack", "final_sentence": "this combines storagebackeddata with pack unpacklonglist to pack"}
{"comment_sentence_id": 3983, "class": "SafeFileCache", "comment_sentence": "not be accessible or writable.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "not be accessible or writable", "final_sentence": "not be accessible or writable"}
{"comment_sentence_id": 99, "class": "BaseCommand", "comment_sentence": "and calls its run from argv method.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and calls its run from argv method", "final_sentence": "and calls its run from argv method"}
{"comment_sentence_id": 3054, "class": "LockFailed", "comment_sentence": "raise lockfailed", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "raise lockfailed", "final_sentence": "raise lockfailed"}
{"comment_sentence_id": 3246, "class": "Mul", "comment_sentence": "multiplies the left with the right node.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "multiplies the left with the right node", "final_sentence": "multiplies the left with the right node"}
{"comment_sentence_id": 3680, "class": "PoolManager", "comment_sentence": "r manager^request get , http yahoo^com", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "r manager request get http yahoo com", "final_sentence": "r manager request get http yahoo com"}
{"comment_sentence_id": 3663, "class": "PipError", "comment_sentence": "base pip exception", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base pip exception", "final_sentence": "base pip exception"}
{"comment_sentence_id": 846, "class": "TestUtils", "comment_sentence": "this doc output is required for testing.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this doc output is required for testing", "final_sentence": "this doc output is required for testing"}
{"comment_sentence_id": 2457, "class": "CaseInsensitiveDict", "comment_sentence": "value of a content encoding response header, regardless", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "value of a content encoding response header regardless", "final_sentence": "value of a content encoding response header regardless"}
{"comment_sentence_id": 5893, "class": "UseOptimizer", "comment_sentence": "example usage with brew", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example usage with brew", "final_sentence": "example usage with brew"}
{"comment_sentence_id": 3507, "class": "ParseResults", "comment_sentence": "structured parse results, to provide multiple means of access to", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "structured parse results to provide multiple means of access to", "final_sentence": "structured parse results to provide multiple means of access to"}
{"comment_sentence_id": 1291, "class": "ConfigDict", "comment_sentence": "carrots how many carrots?", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "carrots how many carrots", "final_sentence": "carrots how many carrots"}
{"comment_sentence_id": 4971, "class": "CyclicLR", "comment_sentence": "scheduler^step", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "scheduler step", "final_sentence": "scheduler step"}
{"comment_sentence_id": 2442, "class": "CaseInsensitiveDict", "comment_sentence": "mutablemapping as well as dict s copy .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "mutablemapping as well as dict s copy", "final_sentence": "mutablemapping as well as dict s copy"}
{"comment_sentence_id": 3702, "class": "PrefixLoader", "comment_sentence": "default, which can be changed by setting the delimiter argument to", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "default which can be changed by setting the delimiter argument to", "final_sentence": "default which can be changed by setting the delimiter argument to"}
{"comment_sentence_id": 4149, "class": "_OpNamespace", "comment_sentence": "at startup, this operation will not yet be bound into python.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "at startup this operation will not yet be bound into python", "final_sentence": "at startup this operation will not yet be bound into python"}
{"comment_sentence_id": 2808, "class": "ExceptionPexpect", "comment_sentence": "base class for all exceptions raised by this module.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class for all exceptions raised by this module", "final_sentence": "base class for all exceptions raised by this module"}
{"comment_sentence_id": 4046, "class": "SkipTo", "comment_sentence": "desc intermittent system crash", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "desc intermittent system crash", "final_sentence": "desc intermittent system crash"}
{"comment_sentence_id": 3305, "class": "omdict", "comment_sentence": "a multivalue dictionary is a dictionary that can store multiple values per", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a multivalue dictionary is a dictionary that can store multiple values per", "final_sentence": "a multivalue dictionary is a dictionary that can store multiple values per"}
{"comment_sentence_id": 2276, "class": "StringArray", "comment_sentence": "stringarray", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "stringarray", "final_sentence": "stringarray"}
{"comment_sentence_id": 5220, "class": "FisherSnedecor", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 234, "class": "BoundWidget", "comment_sentence": "radio^choice label", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "radio choice label", "final_sentence": "radio choice label"}
{"comment_sentence_id": 1763, "class": "CategoricalIndex", "comment_sentence": "categoricalindex a , b , c , a , b , c , categories a , b , c , ordered false, dtype category # noqa", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa", "final_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa"}
{"comment_sentence_id": 5065, "class": "EmbeddingBag", "comment_sentence": "if attr per sample weights is passed, the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr per sample weights is passed the", "final_sentence": "if attr per sample weights is passed the"}
{"comment_sentence_id": 4659, "class": "Caffe2OperatorTestCase", "comment_sentence": "which includes input and operator, ^etc", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "which includes input and operator etc", "final_sentence": "which includes input and operator etc"}
{"comment_sentence_id": 5297, "class": "Module", "comment_sentence": "init", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "init", "final_sentence": "init"}
{"comment_sentence_id": 4499, "class": "BCEWithLogitsLoss", "comment_sentence": "pos weight torch^ones 64 # all weights are equal to 1", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pos weight torch ones 64 all weights are equal to 1", "final_sentence": "pos weight torch ones 64 all weights are equal to 1"}
{"comment_sentence_id": 426, "class": "ListMixin", "comment_sentence": "if left undefined, all mutations will result in rebuilding", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if left undefined all mutations will result in rebuilding", "final_sentence": "if left undefined all mutations will result in rebuilding"}
{"comment_sentence_id": 1749, "class": "CategoricalIndex", "comment_sentence": "if the categories do not validate.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the categories do not validate", "final_sentence": "if the categories do not validate"}
{"comment_sentence_id": 3270, "class": "NotAny", "comment_sentence": "boolean expr boolean term zeroormore and or boolean term", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "boolean expr boolean term zeroormore and or boolean term", "final_sentence": "boolean expr boolean term zeroormore and or boolean term"}
{"comment_sentence_id": 5017, "class": "DiagonalTensor", "comment_sentence": "with the pytorch dispatch system happens via the torch function", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with the pytorch dispatch system happens via the torch function", "final_sentence": "with the pytorch dispatch system happens via the torch function"}
{"comment_sentence_id": 880, "class": "WindowFrame", "comment_sentence": "there are two types of frame", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "there are two types of frame", "final_sentence": "there are two types of frame"}
{"comment_sentence_id": 2546, "class": "DataViewSequence", "comment_sentence": "a sequence of data views.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a sequence of data views", "final_sentence": "a sequence of data views"}
{"comment_sentence_id": 592, "class": "MultiPartParser", "comment_sentence": "a rfc2388 multipart form data parser.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a rfc2388 multipart form data parser", "final_sentence": "a rfc2388 multipart form data parser"}
{"comment_sentence_id": 4710, "class": "Conv3d", "comment_sentence": "planes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "planes", "final_sentence": "planes"}
{"comment_sentence_id": 1966, "class": "IntervalDtype", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 691, "class": "Permission", "comment_sentence": "the permission system is used by the django admin site, but may also be", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the permission system is used by the django admin site but may also be", "final_sentence": "the permission system is used by the django admin site but may also be"}
{"comment_sentence_id": 5112, "class": "EmbeddingBag", "comment_sentence": "must have exactly the same shape as input and is treated as having the same", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "must have exactly the same shape as input and is treated as having the same", "final_sentence": "must have exactly the same shape as input and is treated as having the same"}
{"comment_sentence_id": 4013, "class": "SkipTo", "comment_sentence": "expression is found.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "expression is found", "final_sentence": "expression is found"}
{"comment_sentence_id": 4151, "class": "_OpNamespace", "comment_sentence": "following sequence of magic tricks will occur", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "following sequence of magic tricks will occur", "final_sentence": "following sequence of magic tricks will occur"}
{"comment_sentence_id": 2806, "class": "EOF", "comment_sentence": "this usually means the child has exited.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this usually means the child has exited", "final_sentence": "this usually means the child has exited"}
{"comment_sentence_id": 753, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "in the example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in the example", "final_sentence": "in the example"}
{"comment_sentence_id": 5599, "class": "Task", "comment_sentence": "with ops^task instance exit", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with ops task instance exit", "final_sentence": "with ops task instance exit"}
{"comment_sentence_id": 1146, "class": "Struct", "comment_sentence": "style access.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "style access", "final_sentence": "style access"}
{"comment_sentence_id": 270, "class": "Client", "comment_sentence": "this is not intended as a replacement for twill selenium or", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is not intended as a replacement for twill selenium or", "final_sentence": "this is not intended as a replacement for twill selenium or"}
{"comment_sentence_id": 4253, "class": "Adam", "comment_sentence": "on the convergence of adam and beyond", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "on the convergence of adam and beyond", "final_sentence": "on the convergence of adam and beyond"}
{"comment_sentence_id": 301, "class": "CryptPasswordHasher", "comment_sentence": "the crypt module is not supported on all platforms.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the crypt module is not supported on all platforms", "final_sentence": "the crypt module is not supported on all platforms"}
{"comment_sentence_id": 1186, "class": "YouTubeVideo", "comment_sentence": "eg to embed the video from https www^youtube.com watch?v foo , you would", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "eg to embed the video from https www youtube com watch v foo you would", "final_sentence": "eg to embed the video from https www youtube com watch v foo you would"}
{"comment_sentence_id": 346, "class": "FakePayload", "comment_sentence": "the network can t be sought and cannot be read outside of its content", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the network can t be sought and cannot be read outside of its content", "final_sentence": "the network can t be sought and cannot be read outside of its content"}
{"comment_sentence_id": 3471, "class": "PacifyFlushWrapper", "comment_sentence": "this wrapper is used to catch and suppress brokenpipeerrors resulting", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this wrapper is used to catch and suppress brokenpipeerrors resulting", "final_sentence": "this wrapper is used to catch and suppress brokenpipeerrors resulting"}
{"comment_sentence_id": 4711, "class": "Conv3d", "comment_sentence": "in the simplest case, the output value of the layer with input size math n, c in , d, h, w", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in the simplest case the output value of the layer with input size math n c in d h w", "final_sentence": "in the simplest case the output value of the layer with input size math n c in d h w"}
{"comment_sentence_id": 689, "class": "Permission", "comment_sentence": "the permissions system provides a way to assign permissions to specific", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the permissions system provides a way to assign permissions to specific", "final_sentence": "the permissions system provides a way to assign permissions to specific"}
{"comment_sentence_id": 2891, "class": "FollowedBy", "comment_sentence": "oneormore attr expr ^parsestring shape square color black posn upper left ^pprint", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "oneormore attr expr parsestring shape square color black posn upper left pprint", "final_sentence": "oneormore attr expr parsestring shape square color black posn upper left pprint"}
{"comment_sentence_id": 5565, "class": "StackTransform", "comment_sentence": "in a way compatible with func torch^stack .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in a way compatible with func torch stack", "final_sentence": "in a way compatible with func torch stack"}
{"comment_sentence_id": 294, "class": "ConsoleDirective", "comment_sentence": "unix oriented examples.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unix oriented examples", "final_sentence": "unix oriented examples"}
{"comment_sentence_id": 4310, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 8, 9, 10", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 1 64 8 9 10", "final_sentence": "input torch randn 1 64 8 9 10"}
{"comment_sentence_id": 2092, "class": "PlotAccessor", "comment_sentence": "center", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "center", "final_sentence": "center"}
{"comment_sentence_id": 3804, "class": "ResponseNotChunked", "comment_sentence": "response needs to be chunked in order to read it as chunks.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response needs to be chunked in order to read it as chunks", "final_sentence": "response needs to be chunked in order to read it as chunks"}
{"comment_sentence_id": 4788, "class": "Conv3d", "comment_sentence": "if attr bias is true ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr bias is true", "final_sentence": "if attr bias is true"}
{"comment_sentence_id": 3998, "class": "Session", "comment_sentence": "with requests^session as s", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with requests session as s", "final_sentence": "with requests session as s"}
{"comment_sentence_id": 1174, "class": "UserMagics", "comment_sentence": "placeholder for user defined magics to be added at runtime.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "placeholder for user defined magics to be added at runtime", "final_sentence": "placeholder for user defined magics to be added at runtime"}
{"comment_sentence_id": 5099, "class": "EmbeddingBag", "comment_sentence": "attr offsets is ignored and required to be none in this case.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr offsets is ignored and required to be none in this case", "final_sentence": "attr offsets is ignored and required to be none in this case"}
{"comment_sentence_id": 4353, "class": "BatchNorm1d", "comment_sentence": "of size c where c is the input size .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "of size c where c is the input size", "final_sentence": "of size c where c is the input size"}
{"comment_sentence_id": 5944, "class": "PreparedRequest", "comment_sentence": "response 200", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 5660, "class": "TransformerEncoderLayer", "comment_sentence": "src torch^rand 10, 32, 512", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "src torch rand 10 32 512", "final_sentence": "src torch rand 10 32 512"}
{"comment_sentence_id": 5770, "class": "Unfold", "comment_sentence": "inp torch^randn 1, 3, 10, 12", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "inp torch randn 1 3 10 12", "final_sentence": "inp torch randn 1 3 10 12"}
{"comment_sentence_id": 3706, "class": "PrefixLoader", "comment_sentence": "app2 packageloader mypackage^app2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "app2 packageloader mypackage app2", "final_sentence": "app2 packageloader mypackage app2"}
{"comment_sentence_id": 2351, "class": "UnsortedIndexError", "comment_sentence": "error raised when attempting to get a slice of a multiindex,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "error raised when attempting to get a slice of a multiindex", "final_sentence": "error raised when attempting to get a slice of a multiindex"}
{"comment_sentence_id": 2931, "class": "HashMissing", "comment_sentence": "a hash was needed for a requirement but is absent.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a hash was needed for a requirement but is absent", "final_sentence": "a hash was needed for a requirement but is absent"}
{"comment_sentence_id": 874, "class": "VariableWrapper", "comment_sentence": "cursor^execute as is.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "cursor execute as is", "final_sentence": "cursor execute as is"}
{"comment_sentence_id": 1511, "class": "VCardStore", "comment_sentence": "vcs^get vcard d@evil^com ^fn", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs get vcard d@evil com fn", "final_sentence": "vcs get vcard d@evil com fn"}
{"comment_sentence_id": 1222, "class": "_MockPOP3", "comment_sentence": "2, 123456", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "2 123456", "final_sentence": "2 123456"}
{"comment_sentence_id": 1287, "class": "ConfigDict", "comment_sentence": "values of the type specified.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "values of the type specified", "final_sentence": "values of the type specified"}
{"comment_sentence_id": 2999, "class": "HTMLParser", "comment_sentence": "html parser", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "html parser", "final_sentence": "html parser"}
{"comment_sentence_id": 3517, "class": "ParseResults", "comment_sentence": "integer^setresultsname day", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer setresultsname day", "final_sentence": "integer setresultsname day"}
{"comment_sentence_id": 3033, "class": "InvalidDateError", "comment_sentence": "a date field was improperly specified.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a date field was improperly specified", "final_sentence": "a date field was improperly specified"}
{"comment_sentence_id": 5904, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 1746, "class": "CategoricalIndex", "comment_sentence": "map", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "map", "final_sentence": "map"}
{"comment_sentence_id": 4871, "class": "ConvReLU3d", "comment_sentence": "we adopt the same interface as class torch^nn.quantized^conv3d .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "we adopt the same interface as class torch nn quantized conv3d", "final_sentence": "we adopt the same interface as class torch nn quantized conv3d"}
{"comment_sentence_id": 2089, "class": "PlotAccessor", "comment_sentence": "for bar plot layout by position keyword.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for bar plot layout by position keyword", "final_sentence": "for bar plot layout by position keyword"}
{"comment_sentence_id": 2826, "class": "FileMetadata", "comment_sentence": "metadata filemetadata path to pkg info", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "metadata filemetadata path to pkg info", "final_sentence": "metadata filemetadata path to pkg info"}
{"comment_sentence_id": 263, "class": "Client", "comment_sentence": "it allows the user to compose get and post requests, and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it allows the user to compose get and post requests and", "final_sentence": "it allows the user to compose get and post requests and"}
{"comment_sentence_id": 356, "class": "FallbackStorage", "comment_sentence": "store any unstored", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "store any unstored", "final_sentence": "store any unstored"}
{"comment_sentence_id": 5745, "class": "Unfold", "comment_sentence": "then for any supported input tensor the following", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "then for any supported input tensor the following", "final_sentence": "then for any supported input tensor the following"}
{"comment_sentence_id": 3065, "class": "LRUCache", "comment_sentence": "but as long as it s only used as storage for templates this", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "but as long as it s only used as storage for templates this", "final_sentence": "but as long as it s only used as storage for templates this"}
{"comment_sentence_id": 3809, "class": "Retry", "comment_sentence": "retries can be defined as a default for a pool", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "retries can be defined as a default for a pool", "final_sentence": "retries can be defined as a default for a pool"}
{"comment_sentence_id": 3996, "class": "Session", "comment_sentence": "response 200", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 388, "class": "Individual", "comment_sentence": "corresponding raw id widget won t have a magnifying glass link to select", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "corresponding raw id widget won t have a magnifying glass link to select", "final_sentence": "corresponding raw id widget won t have a magnifying glass link to select"}
{"comment_sentence_id": 5056, "class": "EmbeddingBag", "comment_sentence": "with mode sum is equivalent to class torch^nn.embedding followed by torch^sum dim 0 ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with mode sum is equivalent to class torch nn embedding followed by torch sum dim 0", "final_sentence": "with mode sum is equivalent to class torch nn embedding followed by torch sum dim 0"}
{"comment_sentence_id": 418, "class": "ListMixin", "comment_sentence": "function set list self, length, items", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "function set list self length items", "final_sentence": "function set list self length items"}
{"comment_sentence_id": 1315, "class": "ConfigDict", "comment_sentence": "pot colors ^extend blue , red , red", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot colors extend blue red red", "final_sentence": "pot colors extend blue red red"}
{"comment_sentence_id": 427, "class": "ListMixin", "comment_sentence": "the object using set list.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the object using set list", "final_sentence": "the object using set list"}
{"comment_sentence_id": 421, "class": "ListMixin", "comment_sentence": "therefore, it is necessary to cache the values in a temporary", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "therefore it is necessary to cache the values in a temporary", "final_sentence": "therefore it is necessary to cache the values in a temporary"}
{"comment_sentence_id": 4964, "class": "CyclicLR", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3309, "class": "omdict", "comment_sentence": "internally, items are stored in a doubly linked list, self.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "internally items are stored in a doubly linked list self", "final_sentence": "internally items are stored in a doubly linked list self"}
{"comment_sentence_id": 2961, "class": "HebrewProber", "comment_sentence": "alone are meaningless.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "alone are meaningless", "final_sentence": "alone are meaningless"}
{"comment_sentence_id": 2224, "class": "SetopCheck", "comment_sentence": "this is called to decorate the set operations of intervalindex", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is called to decorate the set operations of intervalindex", "final_sentence": "this is called to decorate the set operations of intervalindex"}
{"comment_sentence_id": 3478, "class": "PacifyFlushWrapper", "comment_sentence": "pipe, all calls and attributes are proxied.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pipe all calls and attributes are proxied", "final_sentence": "pipe all calls and attributes are proxied"}
{"comment_sentence_id": 5762, "class": "Unfold", "comment_sentence": "unfold nn^unfold kernel size 2, 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unfold nn unfold kernel size 2 3", "final_sentence": "unfold nn unfold kernel size 2 3"}
{"comment_sentence_id": 4733, "class": "Conv3d", "comment_sentence": "math left lfloor frac out channels in channels right rfloor .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math left lfloor frac out channels in channels right rfloor", "final_sentence": "math left lfloor frac out channels in channels right rfloor"}
{"comment_sentence_id": 5445, "class": "OneHotCategorical", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 4965, "class": "CyclicLR", "comment_sentence": "optimizer torch^optim.sgd model^parameters , lr 01, momentum 09", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09", "final_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09"}
{"comment_sentence_id": 4048, "class": "SkipTo", "comment_sentence": "sev critical", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sev critical", "final_sentence": "sev critical"}
{"comment_sentence_id": 1504, "class": "VCardStore", "comment_sentence": "# vcards are added to the collection using add vcard.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcards are added to the collection using add vcard", "final_sentence": "vcards are added to the collection using add vcard"}
{"comment_sentence_id": 3528, "class": "ParseResults", "comment_sentence": "test month in result", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test month in result", "final_sentence": "test month in result"}
{"comment_sentence_id": 2557, "class": "Distribution", "comment_sentence": "a base class for distributions, whether installed or from indexes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a base class for distributions whether installed or from indexes", "final_sentence": "a base class for distributions whether installed or from indexes"}
{"comment_sentence_id": 5688, "class": "Unfold", "comment_sentence": "tensor of shape math n, c times prod text kernel size , l , where", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor of shape math n c times prod text kernel size l where", "final_sentence": "tensor of shape math n c times prod text kernel size l where"}
{"comment_sentence_id": 4111, "class": "TokenStreamIterator", "comment_sentence": "iterate over the stream", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "iterate over the stream", "final_sentence": "iterate over the stream"}
{"comment_sentence_id": 4110, "class": "TokenStreamIterator", "comment_sentence": "the iterator for tokenstreams.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the iterator for tokenstreams", "final_sentence": "the iterator for tokenstreams"}
{"comment_sentence_id": 3700, "class": "PrefixLoader", "comment_sentence": "to a prefix.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to a prefix", "final_sentence": "to a prefix"}
{"comment_sentence_id": 4546, "class": "BCEWithLogitsLoss", "comment_sentence": "output^backward", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output backward", "final_sentence": "output backward"}
{"comment_sentence_id": 2816, "class": "fdspawn", "comment_sentence": "this is like pexpect^spawn but allows you to supply your own open file", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is like pexpect spawn but allows you to supply your own open file", "final_sentence": "this is like pexpect spawn but allows you to supply your own open file"}
{"comment_sentence_id": 1517, "class": "VCardStore", "comment_sentence": "u guy", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "u guy", "final_sentence": "u guy"}
{"comment_sentence_id": 5290, "class": "Module", "comment_sentence": "a tree structure.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a tree structure", "final_sentence": "a tree structure"}
{"comment_sentence_id": 1666, "class": "CategoricalDtype", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 468, "class": "MakeListTests", "comment_sentence": "escaped.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "escaped", "final_sentence": "escaped"}
{"comment_sentence_id": 4037, "class": "SkipTo", "comment_sentence": "ticket expr integer issue num sep", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ticket expr integer issue num sep", "final_sentence": "ticket expr integer issue num sep"}
{"comment_sentence_id": 3778, "class": "RequirementsFileParseError", "comment_sentence": "raised when a general error occurs parsing a requirements file line.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "raised when a general error occurs parsing a requirements file line", "final_sentence": "raised when a general error occurs parsing a requirements file line"}
{"comment_sentence_id": 5105, "class": "EmbeddingBag", "comment_sentence": "for attr offsets of shape b , attr input will be viewed as", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for attr offsets of shape b attr input will be viewed as", "final_sentence": "for attr offsets of shape b attr input will be viewed as"}
{"comment_sentence_id": 4482, "class": "BCEWithLogitsLoss", "comment_sentence": "it s possible to trade off recall and precision by adding weights to positive examples.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it s possible to trade off recall and precision by adding weights to positive examples", "final_sentence": "it s possible to trade off recall and precision by adding weights to positive examples"}
{"comment_sentence_id": 5092, "class": "EmbeddingBag", "comment_sentence": "weight tensor the learnable weights of the module of shape num embeddings, embedding dim", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim", "final_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim"}
{"comment_sentence_id": 973, "class": "Audio", "comment_sentence": "# from bytes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "from bytes", "final_sentence": "from bytes"}
{"comment_sentence_id": 4032, "class": "SkipTo", "comment_sentence": "# use skipto to simply match everything up until the next sep", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "use skipto to simply match everything up until the next sep", "final_sentence": "use skipto to simply match everything up until the next sep"}
{"comment_sentence_id": 1148, "class": "Struct", "comment_sentence": "intelligent merging.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "intelligent merging", "final_sentence": "intelligent merging"}
{"comment_sentence_id": 3083, "class": "Markup", "comment_sentence": "markup^escape hello, em world em !", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup escape hello em world em", "final_sentence": "markup escape hello em world em"}
{"comment_sentence_id": 5738, "class": "Unfold", "comment_sentence": "fold params dict kernel size .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "fold params dict kernel size", "final_sentence": "fold params dict kernel size"}
{"comment_sentence_id": 4133, "class": "UnlockError", "comment_sentence": "try", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "try", "final_sentence": "try"}
{"comment_sentence_id": 432, "class": "ListMixin", "comment_sentence": "int maxlength", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "int maxlength", "final_sentence": "int maxlength"}
{"comment_sentence_id": 3704, "class": "PrefixLoader", "comment_sentence": "loader prefixloader", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "loader prefixloader", "final_sentence": "loader prefixloader"}
{"comment_sentence_id": 3677, "class": "PoolManager", "comment_sentence": "manager poolmanager num pools 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "manager poolmanager num pools 2", "final_sentence": "manager poolmanager num pools 2"}
{"comment_sentence_id": 1452, "class": "Group_", "comment_sentence": "view groups", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "view groups", "final_sentence": "view groups"}
{"comment_sentence_id": 1227, "class": "_MockPOP3", "comment_sentence": "msg subject for msg in pm", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "msg subject for msg in pm", "final_sentence": "msg subject for msg in pm"}
{"comment_sentence_id": 1552, "class": "AccessorCallableDocumenter", "comment_sentence": "this documenter lets us removes .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this documenter lets us removes", "final_sentence": "this documenter lets us removes"}
{"comment_sentence_id": 5940, "class": "PreparedRequest", "comment_sentence": "r", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "r", "final_sentence": "r"}
{"comment_sentence_id": 3707, "class": "PrefixLoader", "comment_sentence": "by loading app1 index^html the file from the app1 package is loaded,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by loading app1 index html the file from the app1 package is loaded", "final_sentence": "by loading app1 index html the file from the app1 package is loaded"}
{"comment_sentence_id": 5733, "class": "Unfold", "comment_sentence": "in general, folding and unfolding operations are related as", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in general folding and unfolding operations are related as", "final_sentence": "in general folding and unfolding operations are related as"}
{"comment_sentence_id": 4057, "class": "SkipTo", "comment_sentence": "issue num 79", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "issue num 79", "final_sentence": "issue num 79"}
{"comment_sentence_id": 4397, "class": "BatchNorm1d", "comment_sentence": "m nn^batchnorm1d 100", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m nn batchnorm1d 100", "final_sentence": "m nn batchnorm1d 100"}
{"comment_sentence_id": 956, "class": "Audio", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 636, "class": "MultiValueField", "comment_sentence": "each value in", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "each value in", "final_sentence": "each value in"}
{"comment_sentence_id": 5122, "class": "EmbeddingBag", "comment_sentence": "embedding sum input, offsets", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "embedding sum input offsets", "final_sentence": "embedding sum input offsets"}
{"comment_sentence_id": 5592, "class": "Task", "comment_sentence": "with node trainer , task name my task , num instances 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with node trainer task name my task num instances 2", "final_sentence": "with node trainer task name my task num instances 2"}
{"comment_sentence_id": 3534, "class": "ParseResults", "comment_sentence": "result month 12", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "result month 12", "final_sentence": "result month 12"}
{"comment_sentence_id": 267, "class": "Client", "comment_sentence": "process of serving the request.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "process of serving the request", "final_sentence": "process of serving the request"}
{"comment_sentence_id": 2503, "class": "Context_", "comment_sentence": "the context is immutable.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the context is immutable", "final_sentence": "the context is immutable"}
{"comment_sentence_id": 881, "class": "WindowFrame", "comment_sentence": "clauses which are subclasses, however, all processing and validation by no", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "clauses which are subclasses however all processing and validation by no", "final_sentence": "clauses which are subclasses however all processing and validation by no"}
{"comment_sentence_id": 4780, "class": "Conv3d", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 5761, "class": "Unfold", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4126, "class": "Trie", "comment_sentence": "abstract base class for tries", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "abstract base class for tries", "final_sentence": "abstract base class for tries"}
{"comment_sentence_id": 3812, "class": "Retry", "comment_sentence": "response http^request get , http example^com", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response http request get http example com", "final_sentence": "response http request get http example com"}
{"comment_sentence_id": 3327, "class": "omdict", "comment_sentence": "an optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an optional", "final_sentence": "an optional"}
{"comment_sentence_id": 288, "class": "Combinable", "comment_sentence": "for example f foo f bar .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for example f foo f bar", "final_sentence": "for example f foo f bar"}
{"comment_sentence_id": 863, "class": "UpdateError", "comment_sentence": "occurs if django tries to update a session that was deleted.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "occurs if django tries to update a session that was deleted", "final_sentence": "occurs if django tries to update a session that was deleted"}
{"comment_sentence_id": 640, "class": "MultiValueField", "comment_sentence": "compressed into a single value.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "compressed into a single value", "final_sentence": "compressed into a single value"}
{"comment_sentence_id": 407, "class": "ListMixin", "comment_sentence": "a base class which provides complete list interface.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a base class which provides complete list interface", "final_sentence": "a base class which provides complete list interface"}
{"comment_sentence_id": 1512, "class": "VCardStore", "comment_sentence": "u dude", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "u dude", "final_sentence": "u dude"}
{"comment_sentence_id": 5055, "class": "EmbeddingBag", "comment_sentence": "for bags of constant length and no attr per sample weights , this class", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for bags of constant length and no attr per sample weights this class", "final_sentence": "for bags of constant length and no attr per sample weights this class"}
{"comment_sentence_id": 3008, "class": "InspectedValidator", "comment_sentence": "metaclass for all validators", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "metaclass for all validators", "final_sentence": "metaclass for all validators"}
{"comment_sentence_id": 4784, "class": "Conv3d", "comment_sentence": "the values of these weights are sampled from", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the values of these weights are sampled from", "final_sentence": "the values of these weights are sampled from"}
{"comment_sentence_id": 108, "class": "BaseCommand", "comment_sentence": "calling the handle method with the parsed arguments any", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "calling the handle method with the parsed arguments any", "final_sentence": "calling the handle method with the parsed arguments any"}
{"comment_sentence_id": 3333, "class": "omdict", "comment_sentence": "interact with all items in the dictionary, including multiple items with", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "interact with all items in the dictionary including multiple items with", "final_sentence": "interact with all items in the dictionary including multiple items with"}
{"comment_sentence_id": 2884, "class": "FollowedBy", "comment_sentence": "in the lookahead expression, those will be returned for access by", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in the lookahead expression those will be returned for access by", "final_sentence": "in the lookahead expression those will be returned for access by"}
{"comment_sentence_id": 2264, "class": "StringArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 1514, "class": "VCardStore", "comment_sentence": "TRUE", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 25, "class": "Atomic", "comment_sentence": "ensure that some code runs within a transaction without creating overhead.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ensure that some code runs within a transaction without creating overhead", "final_sentence": "ensure that some code runs within a transaction without creating overhead"}
{"comment_sentence_id": 508, "class": "MigrationGraph", "comment_sentence": "merely a convention to aid file listing.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "merely a convention to aid file listing", "final_sentence": "merely a convention to aid file listing"}
{"comment_sentence_id": 2238, "class": "SQLTable", "comment_sentence": "pass them between functions all the time.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pass them between functions all the time", "final_sentence": "pass them between functions all the time"}
{"comment_sentence_id": 5108, "class": "EmbeddingBag", "comment_sentence": "returned vectors filled by zeros.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "returned vectors filled by zeros", "final_sentence": "returned vectors filled by zeros"}
{"comment_sentence_id": 68, "class": "AutoFieldMeta", "comment_sentence": "a new flag needs", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a new flag needs", "final_sentence": "a new flag needs"}
{"comment_sentence_id": 4658, "class": "Caffe2OperatorTestCase", "comment_sentence": "op bench it s a user defined class child of caffe2benchmarkbase", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "op bench it s a user defined class child of caffe2benchmarkbase", "final_sentence": "op bench it s a user defined class child of caffe2benchmarkbase"}
{"comment_sentence_id": 201, "class": "BaseDatabaseSchemaEditor", "comment_sentence": "this class and its subclasses are responsible for emitting schema changing", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class and its subclasses are responsible for emitting schema changing", "final_sentence": "this class and its subclasses are responsible for emitting schema changing"}
{"comment_sentence_id": 3701, "class": "PrefixLoader", "comment_sentence": "the prefix is delimited from the template by a slash per", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the prefix is delimited from the template by a slash per", "final_sentence": "the prefix is delimited from the template by a slash per"}
{"comment_sentence_id": 1519, "class": "VCardStore", "comment_sentence": "vcs^del vcards vcs^get vcard d@evil^com", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs del vcards vcs get vcard d@evil com", "final_sentence": "vcs del vcards vcs get vcard d@evil com"}
{"comment_sentence_id": 2446, "class": "CaseInsensitiveDict", "comment_sentence": "the structure remembers the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the structure remembers the", "final_sentence": "the structure remembers the"}
{"comment_sentence_id": 960, "class": "Audio", "comment_sentence": "t np^linspace 0,5,framerate 5", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "t np linspace 0 5 framerate 5", "final_sentence": "t np linspace 0 5 framerate 5"}
{"comment_sentence_id": 2388, "class": "And", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 1767, "class": "CategoricalIndex", "comment_sentence": "categoricalindex a , b , c , a , b , c , categories a , b , c , ordered false, dtype category # noqa", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa", "final_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa"}
{"comment_sentence_id": 680, "class": "OverwritingStorage", "comment_sentence": "overwrite existing files instead of appending a suffix to generate an", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "overwrite existing files instead of appending a suffix to generate an", "final_sentence": "overwrite existing files instead of appending a suffix to generate an"}
{"comment_sentence_id": 1218, "class": "_MockPOP3", "comment_sentence": "accesserror", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "accesserror", "final_sentence": "accesserror"}
{"comment_sentence_id": 232, "class": "BoundWidget", "comment_sentence": "% for radio in myform^beatles %", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for radio in myform beatles", "final_sentence": "for radio in myform beatles"}
{"comment_sentence_id": 2461, "class": "CaseInsensitiveDict", "comment_sentence": "behavior is undefined.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "behavior is undefined", "final_sentence": "behavior is undefined"}
{"comment_sentence_id": 3681, "class": "PoolManager", "comment_sentence": "len manager^pools", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "len manager pools", "final_sentence": "len manager pools"}
{"comment_sentence_id": 2352, "class": "UnsortedIndexError", "comment_sentence": "and the index has not been lexsorted.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and the index has not been lexsorted", "final_sentence": "and the index has not been lexsorted"}
{"comment_sentence_id": 100, "class": "BaseCommand", "comment_sentence": "2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 1185, "class": "YouTubeVideo", "comment_sentence": "class for embedding a youtube video in an ipython session, based on its video id.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class for embedding a youtube video in an ipython session based on its video id", "final_sentence": "class for embedding a youtube video in an ipython session based on its video id"}
{"comment_sentence_id": 264, "class": "Client", "comment_sentence": "obtain the response that the server gave to those requests.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "obtain the response that the server gave to those requests", "final_sentence": "obtain the response that the server gave to those requests"}
{"comment_sentence_id": 231, "class": "BoundWidget", "comment_sentence": "template", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "template", "final_sentence": "template"}
{"comment_sentence_id": 3319, "class": "omdict", "comment_sentence": "behave identically.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "behave identically", "final_sentence": "behave identically"}
{"comment_sentence_id": 5769, "class": "Unfold", "comment_sentence": "# convolution is equivalent with unfold matrix multiplication fold or view to output shape", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "convolution is equivalent with unfold matrix multiplication fold or view to output shape", "final_sentence": "convolution is equivalent with unfold matrix multiplication fold or view to output shape"}
{"comment_sentence_id": 5700, "class": "Unfold", "comment_sentence": "gives all values within a certain block.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "gives all values within a certain block", "final_sentence": "gives all values within a certain block"}
{"comment_sentence_id": 1462, "class": "MailpileMailbox", "comment_sentence": "a maildir class for windows using !", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a maildir class for windows using", "final_sentence": "a maildir class for windows using"}
{"comment_sentence_id": 271, "class": "Client", "comment_sentence": "the like it is here to allow testing against the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the like it is here to allow testing against the", "final_sentence": "the like it is here to allow testing against the"}
{"comment_sentence_id": 1516, "class": "VCardStore", "comment_sentence": "vcs^find vcards guy 0 ^fn", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs find vcards guy 0 fn", "final_sentence": "vcs find vcards guy 0 fn"}
{"comment_sentence_id": 93, "class": "BaseCommand", "comment_sentence": "consider using one of the subclasses defined in this file.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "consider using one of the subclasses defined in this file", "final_sentence": "consider using one of the subclasses defined in this file"}
{"comment_sentence_id": 476, "class": "MemcachedCache", "comment_sentence": "an implementation of a cache binding using python memcached", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an implementation of a cache binding using python memcached", "final_sentence": "an implementation of a cache binding using python memcached"}
{"comment_sentence_id": 3475, "class": "PacifyFlushWrapper", "comment_sentence": "sys^stdout and sys^stderr .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sys stdout and sys stderr", "final_sentence": "sys stdout and sys stderr"}
{"comment_sentence_id": 790, "class": "SpatialRefSysMixin", "comment_sentence": "spatialrefsys objects to reduce redundant code.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "spatialrefsys objects to reduce redundant code", "final_sentence": "spatialrefsys objects to reduce redundant code"}
{"comment_sentence_id": 1762, "class": "CategoricalIndex", "comment_sentence": "pd^categoricalindex a , b , c , a , b , c", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd categoricalindex a b c a b c", "final_sentence": "pd categoricalindex a b c a b c"}
{"comment_sentence_id": 5237, "class": "LastNWindowCollector", "comment_sentence": "use packrecords to pack it before using this layer.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "use packrecords to pack it before using this layer", "final_sentence": "use packrecords to pack it before using this layer"}
{"comment_sentence_id": 98, "class": "BaseCommand", "comment_sentence": "django admin or manage^py loads the command class", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "django admin or manage py loads the command class", "final_sentence": "django admin or manage py loads the command class"}
{"comment_sentence_id": 412, "class": "ListMixin", "comment_sentence": "the index i will always satisfy 0 i len self .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the index i will always satisfy 0 i len self", "final_sentence": "the index i will always satisfy 0 i len self"}
{"comment_sentence_id": 965, "class": "Audio", "comment_sentence": "dataright np^sin 2 np^pi 224 t", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dataright np sin 2 np pi 224 t", "final_sentence": "dataright np sin 2 np pi 224 t"}
{"comment_sentence_id": 2269, "class": "StringArray", "comment_sentence": "the string methods are available on series backed by", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the string methods are available on series backed by", "final_sentence": "the string methods are available on series backed by"}
{"comment_sentence_id": 3806, "class": "Retry", "comment_sentence": "retry configuration.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "retry configuration", "final_sentence": "retry configuration"}
{"comment_sentence_id": 2830, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 1606, "class": "BooleanArray", "comment_sentence": "true, false, na", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "true false na", "final_sentence": "true false na"}
{"comment_sentence_id": 4026, "class": "SkipTo", "comment_sentence": "# severity description days open", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "severity description days open", "final_sentence": "severity description days open"}
{"comment_sentence_id": 1670, "class": "CategoricalDtype", "comment_sentence": "1 b", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 b", "final_sentence": "1 b"}
{"comment_sentence_id": 1189, "class": "YouTubeVideo", "comment_sentence": "display vid", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "display vid", "final_sentence": "display vid"}
{"comment_sentence_id": 203, "class": "BaseDatabaseSchemaEditor", "comment_sentence": "renaming, index fiddling, and so on.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "renaming index fiddling and so on", "final_sentence": "renaming index fiddling and so on"}
{"comment_sentence_id": 2444, "class": "CaseInsensitiveDict", "comment_sentence": "provides lower items .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "provides lower items", "final_sentence": "provides lower items"}
{"comment_sentence_id": 5012, "class": "DiagonalTensor", "comment_sentence": "this class has limited utility and is mostly useful for verifying that the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class has limited utility and is mostly useful for verifying that the", "final_sentence": "this class has limited utility and is mostly useful for verifying that the"}
{"comment_sentence_id": 5892, "class": "UseOptimizer", "comment_sentence": "context class to allow setting the current context.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "context class to allow setting the current context", "final_sentence": "context class to allow setting the current context"}
{"comment_sentence_id": 3748, "class": "Request", "comment_sentence": "usage", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 4486, "class": "BCEWithLogitsLoss", "comment_sentence": "l n,c w n,c left p c y n,c cdot log sigma x n,c", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "l n c w n c left p c y n c cdot log sigma x n c", "final_sentence": "l n c w n c left p c y n c cdot log sigma x n c"}
{"comment_sentence_id": 4643, "class": "BuildType", "comment_sentence": "os^environ cmake build type will be used.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "os environ cmake build type will be used", "final_sentence": "os environ cmake build type will be used"}
{"comment_sentence_id": 4363, "class": "BatchNorm1d", "comment_sentence": "evaluation time as well.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "evaluation time as well", "final_sentence": "evaluation time as well"}
{"comment_sentence_id": 1478, "class": "StorageBackedLongs", "comment_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00", "final_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00"}
{"comment_sentence_id": 2265, "class": "StringArray", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 4311, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 3178, "class": "MemcachedBytecodeCache", "comment_sentence": "method set key, value , timeout", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "method set key value timeout", "final_sentence": "method set key value timeout"}
{"comment_sentence_id": 420, "class": "ListMixin", "comment_sentence": "note items may be a generator which calls get single internal.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "note items may be a generator which calls get single internal", "final_sentence": "note items may be a generator which calls get single internal"}
{"comment_sentence_id": 430, "class": "ListMixin", "comment_sentence": "int minlength", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "int minlength", "final_sentence": "int minlength"}
{"comment_sentence_id": 11, "class": "Archive", "comment_sentence": "the external api class that encapsulates an archive implementation.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the external api class that encapsulates an archive implementation", "final_sentence": "the external api class that encapsulates an archive implementation"}
{"comment_sentence_id": 1969, "class": "IntervalDtype", "comment_sentence": "interval int64", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "interval int64", "final_sentence": "interval int64"}
{"comment_sentence_id": 5899, "class": "UseOptimizer", "comment_sentence": "weight weight optim", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "weight weight optim", "final_sentence": "weight weight optim"}
{"comment_sentence_id": 670, "class": "Operation", "comment_sentence": "as actually performing it against a live database.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "as actually performing it against a live database", "final_sentence": "as actually performing it against a live database"}
{"comment_sentence_id": 4542, "class": "BCEWithLogitsLoss", "comment_sentence": "loss nn^bcewithlogitsloss", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "loss nn bcewithlogitsloss", "final_sentence": "loss nn bcewithlogitsloss"}
{"comment_sentence_id": 5737, "class": "Unfold", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4872, "class": "ConvReLU3d", "comment_sentence": "note", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 5113, "class": "EmbeddingBag", "comment_sentence": "attr offsets , if those are not none .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr offsets if those are not none", "final_sentence": "attr offsets if those are not none"}
{"comment_sentence_id": 3094, "class": "Markup", "comment_sentence": "this is a subclass of the text type str in python 3,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is a subclass of the text type str in python 3", "final_sentence": "this is a subclass of the text type str in python 3"}
{"comment_sentence_id": 4024, "class": "SkipTo", "comment_sentence": "report", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "report", "final_sentence": "report"}
{"comment_sentence_id": 258, "class": "ChunkIter", "comment_sentence": "constructor, yield chunks of read operations from that object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "constructor yield chunks of read operations from that object", "final_sentence": "constructor yield chunks of read operations from that object"}
{"comment_sentence_id": 5776, "class": "Unfold", "comment_sentence": "# out out unf^view 1, 2, 7, 8", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "out out unf view 1 2 7 8", "final_sentence": "out out unf view 1 2 7 8"}
{"comment_sentence_id": 5726, "class": "Unfold", "comment_sentence": "note", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 2489, "class": "ColoredString", "comment_sentence": "enhanced string for len operations on colored output.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "enhanced string for len operations on colored output", "final_sentence": "enhanced string for len operations on colored output"}
{"comment_sentence_id": 1751, "class": "CategoricalIndex", "comment_sentence": "if an explicit ordered true is given but no categories and the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if an explicit ordered true is given but no categories and the", "final_sentence": "if an explicit ordered true is given but no categories and the"}
{"comment_sentence_id": 4792, "class": "Conv3d", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 227, "class": "BoundWidget", "comment_sentence": "a container class used for iterating over widgets.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a container class used for iterating over widgets", "final_sentence": "a container class used for iterating over widgets"}
{"comment_sentence_id": 4467, "class": "BCEWithLogitsLoss", "comment_sentence": "ell x, y l l 1, dots,l n ^ top, quad", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ell x y l l 1 dots l n top quad", "final_sentence": "ell x y l l 1 dots l n top quad"}
{"comment_sentence_id": 4000, "class": "Session", "comment_sentence": "response 200", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 1905, "class": "IntegerArray", "comment_sentence": "string aliases for the dtypes are also available.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "string aliases for the dtypes are also available", "final_sentence": "string aliases for the dtypes are also available"}
{"comment_sentence_id": 5015, "class": "DiagonalTensor", "comment_sentence": "example in the numpy documentation.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example in the numpy documentation", "final_sentence": "example in the numpy documentation"}
{"comment_sentence_id": 5596, "class": "Task", "comment_sentence": "local ops^const 0", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "local ops const 0", "final_sentence": "local ops const 0"}
{"comment_sentence_id": 3665, "class": "PoolManager", "comment_sentence": "allows for arbitrary requests while transparently keeping track of", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "allows for arbitrary requests while transparently keeping track of", "final_sentence": "allows for arbitrary requests while transparently keeping track of"}
{"comment_sentence_id": 5110, "class": "EmbeddingBag", "comment_sentence": "to indicate all weights should be taken to be 1 .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to indicate all weights should be taken to be 1", "final_sentence": "to indicate all weights should be taken to be 1"}
{"comment_sentence_id": 1898, "class": "IntegerArray", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 423, "class": "ListMixin", "comment_sentence": "before clobbering the original storage.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "before clobbering the original storage", "final_sentence": "before clobbering the original storage"}
{"comment_sentence_id": 471, "class": "ManagementForm", "comment_sentence": "keep track of how many form instances are displayed on the page.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "keep track of how many form instances are displayed on the page", "final_sentence": "keep track of how many form instances are displayed on the page"}
{"comment_sentence_id": 3266, "class": "NotAny", "comment_sentence": "ident and or not word alphas", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ident and or not word alphas", "final_sentence": "ident and or not word alphas"}
{"comment_sentence_id": 5753, "class": "Unfold", "comment_sentence": "fold and unfold operations are inverses of each", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "fold and unfold operations are inverses of each", "final_sentence": "fold and unfold operations are inverses of each"}
{"comment_sentence_id": 1459, "class": "MailpileJinjaLoader", "comment_sentence": "and plugin system to find template files.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and plugin system to find template files", "final_sentence": "and plugin system to find template files"}
{"comment_sentence_id": 1768, "class": "CategoricalIndex", "comment_sentence": "ordered categoricalindex can have a min and max value.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ordered categoricalindex can have a min and max value", "final_sentence": "ordered categoricalindex can have a min and max value"}
{"comment_sentence_id": 1472, "class": "OldPostingList", "comment_sentence": "a posting list is a map of search terms to message ids.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a posting list is a map of search terms to message ids", "final_sentence": "a posting list is a map of search terms to message ids"}
{"comment_sentence_id": 1445, "class": "Event", "comment_sentence": "actual interpretation and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "actual interpretation and", "final_sentence": "actual interpretation and"}
{"comment_sentence_id": 912, "class": "Audio", "comment_sentence": "create an audio object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "create an audio object", "final_sentence": "create an audio object"}
{"comment_sentence_id": 4502, "class": "BCEWithLogitsLoss", "comment_sentence": "tensor 03135", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor 03135", "final_sentence": "tensor 03135"}
{"comment_sentence_id": 3331, "class": "omdict", "comment_sentence": "methods with list in their", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods with list in their", "final_sentence": "methods with list in their"}
{"comment_sentence_id": 1967, "class": "IntervalDtype", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 5522, "class": "SGD", "comment_sentence": "optimizer^step", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "optimizer step", "final_sentence": "optimizer step"}
{"comment_sentence_id": 5094, "class": "EmbeddingBag", "comment_sentence": "inputs attr input longtensor , attr offsets longtensor, optional , and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "inputs attr input longtensor attr offsets longtensor optional and", "final_sentence": "inputs attr input longtensor attr offsets longtensor optional and"}
{"comment_sentence_id": 110, "class": "BaseCommand", "comment_sentence": "output and, if the command is intended to produce a block of", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output and if the command is intended to produce a block of", "final_sentence": "output and if the command is intended to produce a block of"}
{"comment_sentence_id": 2349, "class": "TestSorted", "comment_sentence": "everything you wanted to test about sorting", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "everything you wanted to test about sorting", "final_sentence": "everything you wanted to test about sorting"}
{"comment_sentence_id": 1874, "class": "IntegerArray", "comment_sentence": "array of integer optional missing values.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "array of integer optional missing values", "final_sentence": "array of integer optional missing values"}
{"comment_sentence_id": 681, "class": "OverwritingStorage", "comment_sentence": "unused name.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unused name", "final_sentence": "unused name"}
{"comment_sentence_id": 1272, "class": "ConfigDict", "comment_sentence": "and what their defaults are and what they are for.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and what their defaults are and what they are for", "final_sentence": "and what their defaults are and what they are for"}
{"comment_sentence_id": 3315, "class": "omdict", "comment_sentence": "standard dict methods interact with the first value associated with a given", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "standard dict methods interact with the first value associated with a given", "final_sentence": "standard dict methods interact with the first value associated with a given"}
{"comment_sentence_id": 2275, "class": "StringArray", "comment_sentence": ", dtype string", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dtype string", "final_sentence": "dtype string"}
{"comment_sentence_id": 4886, "class": "CyclicLR", "comment_sentence": "rate between two boundaries with a constant frequency, as detailed in", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "rate between two boundaries with a constant frequency as detailed in", "final_sentence": "rate between two boundaries with a constant frequency as detailed in"}
{"comment_sentence_id": 4688, "class": "ConstantPad3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 5607, "class": "Task", "comment_sentence": "of the task have finished.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "of the task have finished", "final_sentence": "of the task have finished"}
{"comment_sentence_id": 2835, "class": "FileMetadata", "comment_sentence": "the provided location.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the provided location", "final_sentence": "the provided location"}
{"comment_sentence_id": 2271, "class": "StringArray", "comment_sentence": "notes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 5630, "class": "TaskOutput", "comment_sentence": "represents the output of a task.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "represents the output of a task", "final_sentence": "represents the output of a task"}
{"comment_sentence_id": 959, "class": "Audio", "comment_sentence": "framerate 44100", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "framerate 44100", "final_sentence": "framerate 44100"}
{"comment_sentence_id": 1879, "class": "IntegerArray", "comment_sentence": "we represent an integerarray with 2 numpy arrays", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "we represent an integerarray with 2 numpy arrays", "final_sentence": "we represent an integerarray with 2 numpy arrays"}
{"comment_sentence_id": 1309, "class": "ConfigDict", "comment_sentence": "pot^walk liquids^vodka", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot walk liquids vodka", "final_sentence": "pot walk liquids vodka"}
{"comment_sentence_id": 376, "class": "ImageFileDescriptor", "comment_sentence": "just like the filedescriptor, but for imagefields.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "just like the filedescriptor but for imagefields", "final_sentence": "just like the filedescriptor but for imagefields"}
{"comment_sentence_id": 752, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "by genericrelation.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by genericrelation", "final_sentence": "by genericrelation"}
{"comment_sentence_id": 1569, "class": "BaseInterfaceTests", "comment_sentence": "tests that the basic interface is satisfied.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests that the basic interface is satisfied", "final_sentence": "tests that the basic interface is satisfied"}
{"comment_sentence_id": 219, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "this is considered by many to be the most secure algorithm but you", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is considered by many to be the most secure algorithm but you", "final_sentence": "this is considered by many to be the most secure algorithm but you"}
{"comment_sentence_id": 361, "class": "FootNote", "comment_sentence": "model added for ticket 19838", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "model added for ticket 19838", "final_sentence": "model added for ticket 19838"}
{"comment_sentence_id": 1271, "class": "ConfigDict", "comment_sentence": "a structured way what variables exist, what their legal values are,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a structured way what variables exist what their legal values are", "final_sentence": "a structured way what variables exist what their legal values are"}
{"comment_sentence_id": 5063, "class": "EmbeddingBag", "comment_sentence": "this scales the output of the embedding before performing a weighted", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this scales the output of the embedding before performing a weighted", "final_sentence": "this scales the output of the embedding before performing a weighted"}
{"comment_sentence_id": 4888, "class": "CyclicLR", "comment_sentence": "the distance between the two boundaries can be scaled on a per iteration", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the distance between the two boundaries can be scaled on a per iteration", "final_sentence": "the distance between the two boundaries can be scaled on a per iteration"}
{"comment_sentence_id": 3533, "class": "ParseResults", "comment_sentence": "result 0 1999", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "result 0 1999", "final_sentence": "result 0 1999"}
{"comment_sentence_id": 3512, "class": "ParseResults", "comment_sentence": "resultsname see class parserelement^setresultsname", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "resultsname see class parserelement setresultsname", "final_sentence": "resultsname see class parserelement setresultsname"}
{"comment_sentence_id": 3538, "class": "ParseResults", "comment_sentence": "result^dump 1999 , , 12 , , 31", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "result dump 1999 12 31", "final_sentence": "result dump 1999 12 31"}
{"comment_sentence_id": 2878, "class": "FollowedBy", "comment_sentence": "followedby does not advance the parsing position within", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "followedby does not advance the parsing position within", "final_sentence": "followedby does not advance the parsing position within"}
{"comment_sentence_id": 4662, "class": "Caffe2OperatorTestCase", "comment_sentence": "run backward method will be executed.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "run backward method will be executed", "final_sentence": "run backward method will be executed"}
{"comment_sentence_id": 1049, "class": "DisplayHook", "comment_sentence": "this class does many things, but the basic idea is that it is a callable", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class does many things but the basic idea is that it is a callable", "final_sentence": "this class does many things but the basic idea is that it is a callable"}
{"comment_sentence_id": 307, "class": "CustomCacheKeyValidationTests", "comment_sentence": "a custom cache backend that otherwise inherits from a builtin", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a custom cache backend that otherwise inherits from a builtin", "final_sentence": "a custom cache backend that otherwise inherits from a builtin"}
{"comment_sentence_id": 2825, "class": "FileMetadata", "comment_sentence": "usage", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 3044, "class": "KeyType", "comment_sentence": "the type of a key.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the type of a key", "final_sentence": "the type of a key"}
{"comment_sentence_id": 2927, "class": "Getattr", "comment_sentence": "get an attribute or item from an expression that is a ascii only", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "get an attribute or item from an expression that is a ascii only", "final_sentence": "get an attribute or item from an expression that is a ascii only"}
{"comment_sentence_id": 5938, "class": "PreparedRequest", "comment_sentence": "req requests^request get , https httpbin^org get", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "req requests request get https httpbin org get", "final_sentence": "req requests request get https httpbin org get"}
{"comment_sentence_id": 3708, "class": "PrefixLoader", "comment_sentence": "by loading app2 index^html the file from the second.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by loading app2 index html the file from the second", "final_sentence": "by loading app2 index html the file from the second"}
{"comment_sentence_id": 4053, "class": "SkipTo", "comment_sentence": "sev cosmetic", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sev cosmetic", "final_sentence": "sev cosmetic"}
{"comment_sentence_id": 5054, "class": "EmbeddingBag", "comment_sentence": "intermediate embeddings.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "intermediate embeddings", "final_sentence": "intermediate embeddings"}
{"comment_sentence_id": 4346, "class": "BatchNorm1d", "comment_sentence": "applies batch normalization over a 2d or 3d input a mini batch of 1d", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "applies batch normalization over a 2d or 3d input a mini batch of 1d", "final_sentence": "applies batch normalization over a 2d or 3d input a mini batch of 1d"}
{"comment_sentence_id": 2888, "class": "FollowedBy", "comment_sentence": "data word word alphas", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "data word word alphas", "final_sentence": "data word word alphas"}
{"comment_sentence_id": 1269, "class": "ConfigDict", "comment_sentence": "a sanity checking, self documenting dictionary of program settings.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a sanity checking self documenting dictionary of program settings", "final_sentence": "a sanity checking self documenting dictionary of program settings"}
{"comment_sentence_id": 4873, "class": "ConvReLU3d", "comment_sentence": "attributes same as torch^nn.quantized^conv3d", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes same as torch nn quantized conv3d", "final_sentence": "attributes same as torch nn quantized conv3d"}
{"comment_sentence_id": 5375, "class": "MultiLabelMarginLoss", "comment_sentence": "# 025 1 01 02 1 01 04 1 08 02 1 08 04", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "025 1 01 02 1 01 04 1 08 02 1 08 04", "final_sentence": "025 1 01 02 1 01 04 1 08 02 1 08 04"}
{"comment_sentence_id": 1215, "class": "_MockPOP3", "comment_sentence": "base mock that pretends to be a poplib pop3 connection.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base mock that pretends to be a poplib pop3 connection", "final_sentence": "base mock that pretends to be a poplib pop3 connection"}
{"comment_sentence_id": 3164, "class": "MemcachedBytecodeCache", "comment_sentence": "tummy s memcache or cmemcache but will accept any class that provides", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tummy s memcache or cmemcache but will accept any class that provides", "final_sentence": "tummy s memcache or cmemcache but will accept any class that provides"}
{"comment_sentence_id": 2353, "class": "UnsortedIndexError", "comment_sentence": "subclass of keyerror .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "subclass of keyerror", "final_sentence": "subclass of keyerror"}
{"comment_sentence_id": 4712, "class": "Conv3d", "comment_sentence": "and output math n, c out , d out , h out , w out can be precisely described as", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and output math n c out d out h out w out can be precisely described as", "final_sentence": "and output math n c out d out h out w out can be precisely described as"}
{"comment_sentence_id": 1903, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 411, "class": "ListMixin", "comment_sentence": "return single item with index i for general use.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "return single item with index i for general use", "final_sentence": "return single item with index i for general use"}
{"comment_sentence_id": 4359, "class": "BatchNorm1d", "comment_sentence": "the running estimates are kept with a default attr momentum", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the running estimates are kept with a default attr momentum", "final_sentence": "the running estimates are kept with a default attr momentum"}
{"comment_sentence_id": 4870, "class": "ConvReLU3d", "comment_sentence": "a convrelu3d module is a fused module of conv3d and relu", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a convrelu3d module is a fused module of conv3d and relu", "final_sentence": "a convrelu3d module is a fused module of conv3d and relu"}
{"comment_sentence_id": 3256, "class": "NotAny", "comment_sentence": "input string, it only verifies that the specified parse expression", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input string it only verifies that the specified parse expression", "final_sentence": "input string it only verifies that the specified parse expression"}
{"comment_sentence_id": 5649, "class": "TransformerEncoderLayer", "comment_sentence": "neural information processing systems, pages 6000 6010.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "neural information processing systems pages 6000 6010", "final_sentence": "neural information processing systems pages 6000 6010"}
{"comment_sentence_id": 1604, "class": "BooleanArray", "comment_sentence": "pd^array true, false, none , dtype boolean", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd array true false none dtype boolean", "final_sentence": "pd array true false none dtype boolean"}
{"comment_sentence_id": 5732, "class": "Unfold", "comment_sentence": "inverses of each other.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "inverses of each other", "final_sentence": "inverses of each other"}
{"comment_sentence_id": 4395, "class": "BatchNorm1d", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 5011, "class": "DiagonalTensor", "comment_sentence": "a class with torch function and a specific diagonal representation", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a class with torch function and a specific diagonal representation", "final_sentence": "a class with torch function and a specific diagonal representation"}
{"comment_sentence_id": 873, "class": "VariableWrapper", "comment_sentence": "this can be used generally for any other object that should be passed into", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this can be used generally for any other object that should be passed into", "final_sentence": "this can be used generally for any other object that should be passed into"}
{"comment_sentence_id": 5685, "class": "Unfold", "comment_sentence": "this operation flattens", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this operation flattens", "final_sentence": "this operation flattens"}
{"comment_sentence_id": 3037, "class": "InvalidVersion", "comment_sentence": "an invalid version was found, users should refer to pep 440.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an invalid version was found users should refer to pep 440", "final_sentence": "an invalid version was found users should refer to pep 440"}
{"comment_sentence_id": 2286, "class": "StringArray", "comment_sentence": "booleanarray", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 5698, "class": "Unfold", "comment_sentence": "dimensions.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dimensions", "final_sentence": "dimensions"}
{"comment_sentence_id": 467, "class": "MakeListTests", "comment_sentence": "the make list filter can destroy existing escaping, so the results are", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the make list filter can destroy existing escaping so the results are", "final_sentence": "the make list filter can destroy existing escaping so the results are"}
{"comment_sentence_id": 21, "class": "Atomic", "comment_sentence": "savepoint, depending on whether a transaction is already in progress, and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "savepoint depending on whether a transaction is already in progress and", "final_sentence": "savepoint depending on whether a transaction is already in progress and"}
{"comment_sentence_id": 2447, "class": "CaseInsensitiveDict", "comment_sentence": "case of the last key to be set, and iter instance ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "case of the last key to be set and iter instance", "final_sentence": "case of the last key to be set and iter instance"}
{"comment_sentence_id": 4036, "class": "SkipTo", "comment_sentence": "string data^setparseaction tokenmap str^strip", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "string data setparseaction tokenmap str strip", "final_sentence": "string data setparseaction tokenmap str strip"}
{"comment_sentence_id": 755, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "comments genericrelation comment", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "comments genericrelation comment", "final_sentence": "comments genericrelation comment"}
{"comment_sentence_id": 212, "class": "BaseUpdateView", "comment_sentence": "base view for updating an existing object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base view for updating an existing object", "final_sentence": "base view for updating an existing object"}
{"comment_sentence_id": 3335, "class": "omdict", "comment_sentence": "the new omdict methods are", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the new omdict methods are", "final_sentence": "the new omdict methods are"}
{"comment_sentence_id": 3525, "class": "ParseResults", "comment_sentence": "test result 0", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test result 0", "final_sentence": "test result 0"}
{"comment_sentence_id": 3022, "class": "InternalName", "comment_sentence": "meth jinja2^parser.parser^free identifier method that creates", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "meth jinja2 parser parser free identifier method that creates", "final_sentence": "meth jinja2 parser parser free identifier method that creates"}
{"comment_sentence_id": 1505, "class": "VCardStore", "comment_sentence": "this will", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this will", "final_sentence": "this will"}
{"comment_sentence_id": 2491, "class": "CommandError", "comment_sentence": "raised when there is an error in command line arguments", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "raised when there is an error in command line arguments", "final_sentence": "raised when there is an error in command line arguments"}
{"comment_sentence_id": 257, "class": "ChunkIter", "comment_sentence": "given a file like object as the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "given a file like object as the", "final_sentence": "given a file like object as the"}
{"comment_sentence_id": 2944, "class": "HebrewProber", "comment_sentence": "it reduces any sequence of such characters to a single space.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it reduces any sequence of such characters to a single space", "final_sentence": "it reduces any sequence of such characters to a single space"}
{"comment_sentence_id": 2834, "class": "FileMetadata", "comment_sentence": "which is treated as existing, and will be the contents of the file at", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "which is treated as existing and will be the contents of the file at", "final_sentence": "which is treated as existing and will be the contents of the file at"}
{"comment_sentence_id": 1311, "class": "ConfigDict", "comment_sentence": "pot^walk liquids vodka , parent true", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot walk liquids vodka parent true", "final_sentence": "pot walk liquids vodka parent true"}
{"comment_sentence_id": 3783, "class": "RequirementUninstaller", "comment_sentence": "exits correctly, the uninstallation is committed, otherwise rolled back.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "exits correctly the uninstallation is committed otherwise rolled back", "final_sentence": "exits correctly the uninstallation is committed otherwise rolled back"}
{"comment_sentence_id": 731, "class": "RawPostDataException", "comment_sentence": "you cannot access raw post data from a request that has", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "you cannot access raw post data from a request that has", "final_sentence": "you cannot access raw post data from a request that has"}
{"comment_sentence_id": 1477, "class": "StorageBackedLongs", "comment_sentence": "and save sets of ints.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and save sets of ints", "final_sentence": "and save sets of ints"}
{"comment_sentence_id": 3529, "class": "ParseResults", "comment_sentence": "test minutes in result", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test minutes in result", "final_sentence": "test minutes in result"}
{"comment_sentence_id": 71, "class": "AutoFieldMeta", "comment_sentence": "deprecate inheritance from autofield and use of isinstance with autofield", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "deprecate inheritance from autofield and use of isinstance with autofield", "final_sentence": "deprecate inheritance from autofield and use of isinstance with autofield"}
{"comment_sentence_id": 4730, "class": "Conv3d", "comment_sentence": "concatenated.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "concatenated", "final_sentence": "concatenated"}
{"comment_sentence_id": 690, "class": "Permission", "comment_sentence": "users and groups of users.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "users and groups of users", "final_sentence": "users and groups of users"}
{"comment_sentence_id": 1672, "class": "CategoricalDtype", "comment_sentence": "3 nan", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "3 nan", "final_sentence": "3 nan"}
{"comment_sentence_id": 3182, "class": "MemcachedBytecodeCache", "comment_sentence": "if timeout is not provided", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if timeout is not provided", "final_sentence": "if timeout is not provided"}
{"comment_sentence_id": 4794, "class": "Conv3d", "comment_sentence": "m nn^conv3d 16, 33, 3, stride 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m nn conv3d 16 33 3 stride 2", "final_sentence": "m nn conv3d 16 33 3 stride 2"}
{"comment_sentence_id": 3190, "class": "MemcachedBytecodeCache", "comment_sentence": "the other arguments to the constructor are the prefix for all keys that", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the other arguments to the constructor are the prefix for all keys that", "final_sentence": "the other arguments to the constructor are the prefix for all keys that"}
{"comment_sentence_id": 5438, "class": "OneHotCategorical", "comment_sentence": "creates a one hot categorical distribution parameterized by attr probs or", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "creates a one hot categorical distribution parameterized by attr probs or", "final_sentence": "creates a one hot categorical distribution parameterized by attr probs or"}
{"comment_sentence_id": 4314, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 4685, "class": "ConstantPad3d", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 5933, "class": "PreparedRequest", "comment_sentence": "the fully mutable class preparedrequest preparedrequest object,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the fully mutable class preparedrequest preparedrequest object", "final_sentence": "the fully mutable class preparedrequest preparedrequest object"}
{"comment_sentence_id": 4660, "class": "Caffe2OperatorTestCase", "comment_sentence": "test config a namedtuple includes test name, input shape, tag, run backward.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test config a namedtuple includes test name input shape tag run backward", "final_sentence": "test config a namedtuple includes test name input shape tag run backward"}
{"comment_sentence_id": 478, "class": "MemoryFileUploadHandler", "comment_sentence": "file upload handler to stream uploads into memory used for small files .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "file upload handler to stream uploads into memory used for small files", "final_sentence": "file upload handler to stream uploads into memory used for small files"}
{"comment_sentence_id": 600, "class": "MultiValueDict", "comment_sentence": "d multivaluedict name adrian , simon , position developer", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "d multivaluedict name adrian simon position developer", "final_sentence": "d multivaluedict name adrian simon position developer"}
{"comment_sentence_id": 374, "class": "HiddenRangeWidget", "comment_sentence": "a widget that splits input into two input type hidden inputs.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a widget that splits input into two input type hidden inputs", "final_sentence": "a widget that splits input into two input type hidden inputs"}
{"comment_sentence_id": 5601, "class": "Task", "comment_sentence": "with ops^task exit", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with ops task exit", "final_sentence": "with ops task exit"}
{"comment_sentence_id": 1458, "class": "MailpileJinjaLoader", "comment_sentence": "a jinja2 template loader which uses the mailpile configuration", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a jinja2 template loader which uses the mailpile configuration", "final_sentence": "a jinja2 template loader which uses the mailpile configuration"}
{"comment_sentence_id": 2270, "class": "StringArray", "comment_sentence": "a stringarray.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a stringarray", "final_sentence": "a stringarray"}
{"comment_sentence_id": 5107, "class": "EmbeddingBag", "comment_sentence": "empty bags ie, having 0 length will have", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "empty bags ie having 0 length will have", "final_sentence": "empty bags ie having 0 length will have"}
{"comment_sentence_id": 808, "class": "SuccessMessageMixin", "comment_sentence": "add a success message on successful form submission.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "add a success message on successful form submission", "final_sentence": "add a success message on successful form submission"}
{"comment_sentence_id": 1160, "class": "TermColors", "comment_sentence": "color escape sequences.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "color escape sequences", "final_sentence": "color escape sequences"}
{"comment_sentence_id": 2873, "class": "Filter", "comment_sentence": "alphabetizes attributes for elements", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "alphabetizes attributes for elements", "final_sentence": "alphabetizes attributes for elements"}
{"comment_sentence_id": 3540, "class": "ParseResults", "comment_sentence": "month 12", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "month 12", "final_sentence": "month 12"}
{"comment_sentence_id": 3176, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface for the client passed to the constructor is this", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the minimal interface for the client passed to the constructor is this", "final_sentence": "the minimal interface for the client passed to the constructor is this"}
{"comment_sentence_id": 3329, "class": "omdict", "comment_sentence": "items , values , iteritems , itervalues", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "items values iteritems itervalues", "final_sentence": "items values iteritems itervalues"}
{"comment_sentence_id": 1548, "class": "AbstractEngine", "comment_sentence": "object serving as a base class for all engines.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "object serving as a base class for all engines", "final_sentence": "object serving as a base class for all engines"}
{"comment_sentence_id": 4501, "class": "BCEWithLogitsLoss", "comment_sentence": "criterion output, target # log sigmoid 0999", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "criterion output target log sigmoid 0999", "final_sentence": "criterion output target log sigmoid 0999"}
{"comment_sentence_id": 2087, "class": "PlotAccessor", "comment_sentence": "see matplotlib documentation online for more on this subject", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see matplotlib documentation online for more on this subject", "final_sentence": "see matplotlib documentation online for more on this subject"}
{"comment_sentence_id": 5772, "class": "Unfold", "comment_sentence": "inp unf torch^nn.functional^unfold inp, 4, 5", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "inp unf torch nn functional unfold inp 4 5", "final_sentence": "inp unf torch nn functional unfold inp 4 5"}
{"comment_sentence_id": 4889, "class": "CyclicLR", "comment_sentence": "or per cycle basis.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or per cycle basis", "final_sentence": "or per cycle basis"}
{"comment_sentence_id": 2542, "class": "CookieConflictError", "comment_sentence": "there are two cookies that meet the criteria specified in the cookie jar.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "there are two cookies that meet the criteria specified in the cookie jar", "final_sentence": "there are two cookies that meet the criteria specified in the cookie jar"}
{"comment_sentence_id": 1759, "class": "CategoricalIndex", "comment_sentence": "http pandas^pydata.org pandas docs stable user guide advanced^html#categoricalindex", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "http pandas pydata org pandas docs stable user guide advanced html categoricalindex", "final_sentence": "http pandas pydata org pandas docs stable user guide advanced html categoricalindex"}
{"comment_sentence_id": 751, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "accessor to the related objects manager on the one to many relation created", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "accessor to the related objects manager on the one to many relation created", "final_sentence": "accessor to the related objects manager on the one to many relation created"}
{"comment_sentence_id": 2936, "class": "HebrewProber", "comment_sentence": "the two sbcharsetprobers identify that the text is in", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the two sbcharsetprobers identify that the text is in", "final_sentence": "the two sbcharsetprobers identify that the text is in"}
{"comment_sentence_id": 3072, "class": "Markup", "comment_sentence": "a string that is ready to be safely inserted into an html or xml", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a string that is ready to be safely inserted into an html or xml", "final_sentence": "a string that is ready to be safely inserted into an html or xml"}
{"comment_sentence_id": 3527, "class": "ParseResults", "comment_sentence": "test result^day", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test result day", "final_sentence": "test result day"}
{"comment_sentence_id": 5117, "class": "EmbeddingBag", "comment_sentence": "# an embedding module containing 10 tensors of size 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an embedding module containing 10 tensors of size 3", "final_sentence": "an embedding module containing 10 tensors of size 3"}
{"comment_sentence_id": 415, "class": "ListMixin", "comment_sentence": "note that if get single internal and get single internal return", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "note that if get single internal and get single internal return", "final_sentence": "note that if get single internal and get single internal return"}
{"comment_sentence_id": 2459, "class": "CaseInsensitiveDict", "comment_sentence": "if the constructor, ^update , or equality comparison", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the constructor update or equality comparison", "final_sentence": "if the constructor update or equality comparison"}
{"comment_sentence_id": 2859, "class": "FileSystemLoader", "comment_sentence": "loader filesystemloader path to templates , followlinks true", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "loader filesystemloader path to templates followlinks true", "final_sentence": "loader filesystemloader path to templates followlinks true"}
{"comment_sentence_id": 1706, "class": "CategoricalIndex", "comment_sentence": "also,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "also", "final_sentence": "also"}
{"comment_sentence_id": 4790, "class": "Conv3d", "comment_sentence": "sampled from math mathcal u sqrt k , sqrt k where", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sampled from math mathcal u sqrt k sqrt k where", "final_sentence": "sampled from math mathcal u sqrt k sqrt k where"}
{"comment_sentence_id": 1263, "class": "AutocryptSearch", "comment_sentence": "search for the autocrypt database.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "search for the autocrypt database", "final_sentence": "search for the autocrypt database"}
{"comment_sentence_id": 382, "class": "IncompleteCategoryFormWithExclude", "comment_sentence": "a form that replaces the model s url field with a custom one.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a form that replaces the model s url field with a custom one", "final_sentence": "a form that replaces the model s url field with a custom one"}
{"comment_sentence_id": 3064, "class": "LRUCache", "comment_sentence": "scale.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "scale", "final_sentence": "scale"}
{"comment_sentence_id": 2284, "class": "StringArray", "comment_sentence": "for comparison methods, this returns a class pandas^booleanarray", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for comparison methods this returns a class pandas booleanarray", "final_sentence": "for comparison methods this returns a class pandas booleanarray"}
{"comment_sentence_id": 4159, "class": "_OpNamespace", "comment_sentence": "the my namespace object, which will retrieve the operation via", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the my namespace object which will retrieve the operation via", "final_sentence": "the my namespace object which will retrieve the operation via"}
{"comment_sentence_id": 4727, "class": "Conv3d", "comment_sentence": "at groups 2, the operation becomes equivalent to having two conv", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "at groups 2 the operation becomes equivalent to having two conv", "final_sentence": "at groups 2 the operation becomes equivalent to having two conv"}
{"comment_sentence_id": 3013, "class": "InstalledDistribution", "comment_sentence": "instantiated., or uses a passed in metadata instance useful for when", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "instantiated or uses a passed in metadata instance useful for when", "final_sentence": "instantiated or uses a passed in metadata instance useful for when"}
{"comment_sentence_id": 4465, "class": "BCEWithLogitsLoss", "comment_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "final_sentence": "the unreduced ie with attr reduction set to none loss can be described as"}
{"comment_sentence_id": 1474, "class": "Rescan", "comment_sentence": "add new messages to index", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "add new messages to index", "final_sentence": "add new messages to index"}
{"comment_sentence_id": 4969, "class": "CyclicLR", "comment_sentence": "for batch in data loader", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for batch in data loader", "final_sentence": "for batch in data loader"}
{"comment_sentence_id": 2887, "class": "FollowedBy", "comment_sentence": "# use followedby to match a label only if it is followed by a", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "use followedby to match a label only if it is followed by a", "final_sentence": "use followedby to match a label only if it is followed by a"}
{"comment_sentence_id": 1560, "class": "Base", "comment_sentence": "common tests for all variations of intervalindex construction.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "common tests for all variations of intervalindex construction", "final_sentence": "common tests for all variations of intervalindex construction"}
{"comment_sentence_id": 5647, "class": "TransformerEncoderLayer", "comment_sentence": "attention is all you need.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attention is all you need", "final_sentence": "attention is all you need"}
{"comment_sentence_id": 5696, "class": "Unfold", "comment_sentence": "where math text spatial size is formed by the spatial dimensions", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "where math text spatial size is formed by the spatial dimensions", "final_sentence": "where math text spatial size is formed by the spatial dimensions"}
{"comment_sentence_id": 220, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "must first install the bcrypt library.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "must first install the bcrypt library", "final_sentence": "must first install the bcrypt library"}
{"comment_sentence_id": 1913, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 1224, "class": "_MockPOP3", "comment_sentence": "evil , good", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "evil good", "final_sentence": "evil good"}
{"comment_sentence_id": 3815, "class": "Retry", "comment_sentence": "retries can be disabled by passing false", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "retries can be disabled by passing false", "final_sentence": "retries can be disabled by passing false"}
{"comment_sentence_id": 1065, "class": "HelpEnd", "comment_sentence": "and obj?", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and obj", "final_sentence": "and obj"}
{"comment_sentence_id": 1523, "class": "VCardStore", "comment_sentence": "vcs^find vcards guy", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs find vcards guy", "final_sentence": "vcs find vcards guy"}
{"comment_sentence_id": 3503, "class": "ParserElement", "comment_sentence": "abstract base level parser element class.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "abstract base level parser element class", "final_sentence": "abstract base level parser element class"}
{"comment_sentence_id": 1225, "class": "_MockPOP3", "comment_sentence": "evil in pm, bogon in pm", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "evil in pm bogon in pm", "final_sentence": "evil in pm bogon in pm"}
{"comment_sentence_id": 898, "class": "XFrameOptionsMiddleware", "comment_sentence": "response from being loaded in a frame in any site, set x frame options in", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response from being loaded in a frame in any site set x frame options in", "final_sentence": "response from being loaded in a frame in any site set x frame options in"}
{"comment_sentence_id": 732, "class": "RawPostDataException", "comment_sentence": "multipart post data if it has been accessed via post,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "multipart post data if it has been accessed via post", "final_sentence": "multipart post data if it has been accessed via post"}
{"comment_sentence_id": 268, "class": "Client", "comment_sentence": "client objects are stateful they will retain cookie and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "client objects are stateful they will retain cookie and", "final_sentence": "client objects are stateful they will retain cookie and"}
{"comment_sentence_id": 2344, "class": "TestFromTuples", "comment_sentence": "tests specific to intervalindex^from tuples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests specific to intervalindex from tuples", "final_sentence": "tests specific to intervalindex from tuples"}
{"comment_sentence_id": 4307, "class": "AdaptiveMaxPool3d", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 5061, "class": "EmbeddingBag", "comment_sentence": "embeddingbag also supports per sample weights as an argument to the forward", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "embeddingbag also supports per sample weights as an argument to the forward", "final_sentence": "embeddingbag also supports per sample weights as an argument to the forward"}
{"comment_sentence_id": 3025, "class": "InternalName", "comment_sentence": "template and is not threated specially by the compiler.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "template and is not threated specially by the compiler", "final_sentence": "template and is not threated specially by the compiler"}
{"comment_sentence_id": 4461, "class": "BCEWithLogitsLoss", "comment_sentence": "class.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class", "final_sentence": "class"}
{"comment_sentence_id": 1426, "class": "ConfigureMailboxes", "comment_sentence": "in the metadata index.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in the metadata index", "final_sentence": "in the metadata index"}
{"comment_sentence_id": 3990, "class": "Session", "comment_sentence": "a requests session.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a requests session", "final_sentence": "a requests session"}
{"comment_sentence_id": 5766, "class": "Unfold", "comment_sentence": "# 4 blocks 2x3 kernels in total in the 3x4 input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "4 blocks 2x3 kernels in total in the 3x4 input", "final_sentence": "4 blocks 2x3 kernels in total in the 3x4 input"}
{"comment_sentence_id": 4361, "class": "BatchNorm1d", "comment_sentence": "if attr track running stats is set to false , this layer then does not", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr track running stats is set to false this layer then does not", "final_sentence": "if attr track running stats is set to false this layer then does not"}
{"comment_sentence_id": 1479, "class": "StorageBackedLongs", "comment_sentence": "sbl storagebackedlongs storage, sbl", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "sbl storagebackedlongs storage sbl", "final_sentence": "sbl storagebackedlongs storage sbl"}
{"comment_sentence_id": 367, "class": "Group", "comment_sentence": "table column fields", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "table column fields", "final_sentence": "table column fields"}
{"comment_sentence_id": 4153, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace will invoke the getattr magic method", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "torch ops my namespace will invoke the getattr magic method", "final_sentence": "torch ops my namespace will invoke the getattr magic method"}
{"comment_sentence_id": 4027, "class": "SkipTo", "comment_sentence": "101 critical intermittent system crash 6", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "101 critical intermittent system crash 6", "final_sentence": "101 critical intermittent system crash 6"}
{"comment_sentence_id": 706, "class": "Permission", "comment_sentence": "the permissions listed above are automatically created for each model.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the permissions listed above are automatically created for each model", "final_sentence": "the permissions listed above are automatically created for each model"}
{"comment_sentence_id": 1498, "class": "Vcard", "comment_sentence": "display a single vcard", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "display a single vcard", "final_sentence": "display a single vcard"}
{"comment_sentence_id": 5059, "class": "EmbeddingBag", "comment_sentence": "however, class torch^nn.embeddingbag is much more time and memory efficient than using a chain of these", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "however class torch nn embeddingbag is much more time and memory efficient than using a chain of these", "final_sentence": "however class torch nn embeddingbag is much more time and memory efficient than using a chain of these"}
{"comment_sentence_id": 1162, "class": "TermColors", "comment_sentence": "colors in terminals.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "colors in terminals", "final_sentence": "colors in terminals"}
{"comment_sentence_id": 1896, "class": "IntegerArray", "comment_sentence": "returns", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 1187, "class": "YouTubeVideo", "comment_sentence": "do", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "do", "final_sentence": "do"}
{"comment_sentence_id": 1069, "class": "HistoryAccessor", "comment_sentence": "this is intended for use by standalone history tools.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is intended for use by standalone history tools", "final_sentence": "this is intended for use by standalone history tools"}
{"comment_sentence_id": 5645, "class": "TransformerEncoderLayer", "comment_sentence": "lukasz kaiser, and illia polosukhin.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "lukasz kaiser and illia polosukhin", "final_sentence": "lukasz kaiser and illia polosukhin"}
{"comment_sentence_id": 4966, "class": "CyclicLR", "comment_sentence": "scheduler torch^optim.lr scheduler^cycliclr optimizer, base lr 001, max lr 01", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "scheduler torch optim lr scheduler cycliclr optimizer base lr 001 max lr 01", "final_sentence": "scheduler torch optim lr scheduler cycliclr optimizer base lr 001 max lr 01"}
{"comment_sentence_id": 2346, "class": "TestPeriodIndexSeriesComparisonConsistency", "comment_sentence": "test periodindex and period series ops consistency", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "test periodindex and period series ops consistency", "final_sentence": "test periodindex and period series ops consistency"}
{"comment_sentence_id": 692, "class": "Permission", "comment_sentence": "useful in your own code.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "useful in your own code", "final_sentence": "useful in your own code"}
{"comment_sentence_id": 694, "class": "Permission", "comment_sentence": "the add permission limits the user s ability to view the add form", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the add permission limits the user s ability to view the add form", "final_sentence": "the add permission limits the user s ability to view the add form"}
{"comment_sentence_id": 2230, "class": "SQLiteTable", "comment_sentence": "patch the sqltable for fallback support.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "patch the sqltable for fallback support", "final_sentence": "patch the sqltable for fallback support"}
{"comment_sentence_id": 4713, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 3264, "class": "NotAny", "comment_sentence": "and, or, not map caselesskeyword, and or not ^split", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and or not map caselesskeyword and or not split", "final_sentence": "and or not map caselesskeyword and or not split"}
{"comment_sentence_id": 4047, "class": "SkipTo", "comment_sentence": "issue num 101", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "issue num 101", "final_sentence": "issue num 101"}
{"comment_sentence_id": 1500, "class": "VCardSet", "comment_sentence": "add a lines to a vcard, ensuring vcard exists", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "add a lines to a vcard ensuring vcard exists", "final_sentence": "add a lines to a vcard ensuring vcard exists"}
{"comment_sentence_id": 1282, "class": "ConfigDict", "comment_sentence": "this", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this", "final_sentence": "this"}
{"comment_sentence_id": 1708, "class": "CategoricalIndex", "comment_sentence": "additions, divisions, .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "additions divisions", "final_sentence": "additions divisions"}
{"comment_sentence_id": 4106, "class": "TarFile", "comment_sentence": "the tarfile class provides an interface to tar archives.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the tarfile class provides an interface to tar archives", "final_sentence": "the tarfile class provides an interface to tar archives"}
{"comment_sentence_id": 5937, "class": "PreparedRequest", "comment_sentence": "import requests", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "import requests", "final_sentence": "import requests"}
{"comment_sentence_id": 2340, "class": "TestDatetimelikeSubtype", "comment_sentence": "tests specific to intervalindex with datetime like subtype", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests specific to intervalindex with datetime like subtype", "final_sentence": "tests specific to intervalindex with datetime like subtype"}
{"comment_sentence_id": 3325, "class": "omdict", "comment_sentence": "optional parameters have been added to some dict methods, but because the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "optional parameters have been added to some dict methods but because the", "final_sentence": "optional parameters have been added to some dict methods but because the"}
{"comment_sentence_id": 1507, "class": "VCardStore", "comment_sentence": "vcs^add vcards mailpilevcard vcardline fn dude ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcs add vcards mailpilevcard vcardline fn dude", "final_sentence": "vcs add vcards mailpilevcard vcardline fn dude"}
{"comment_sentence_id": 1844, "class": "DataIndexableCol", "comment_sentence": "represent a data column that can be indexed", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "represent a data column that can be indexed", "final_sentence": "represent a data column that can be indexed"}
{"comment_sentence_id": 5287, "class": "Module", "comment_sentence": "base class for all neural network modules.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class for all neural network modules", "final_sentence": "base class for all neural network modules"}
{"comment_sentence_id": 4726, "class": "Conv3d", "comment_sentence": "at groups 1, all inputs are convolved to all outputs.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "at groups 1 all inputs are convolved to all outputs", "final_sentence": "at groups 1 all inputs are convolved to all outputs"}
{"comment_sentence_id": 4316, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x9x8", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "target output size of 7x9x8", "final_sentence": "target output size of 7x9x8"}
{"comment_sentence_id": 2449, "class": "CaseInsensitiveDict", "comment_sentence": "will contain case sensitive keys.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "will contain case sensitive keys", "final_sentence": "will contain case sensitive keys"}
{"comment_sentence_id": 5648, "class": "TransformerEncoderLayer", "comment_sentence": "in advances in", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in advances in", "final_sentence": "in advances in"}
{"comment_sentence_id": 1233, "class": "_MockPOP3", "comment_sentence": "n", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "n", "final_sentence": "n"}
{"comment_sentence_id": 5734, "class": "Unfold", "comment_sentence": "follows.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "follows", "final_sentence": "follows"}
{"comment_sentence_id": 112, "class": "BaseCommand", "comment_sentence": "4", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "4", "final_sentence": "4"}
{"comment_sentence_id": 5294, "class": "Module", "comment_sentence": "class model nn^module", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class model nn module", "final_sentence": "class model nn module"}
{"comment_sentence_id": 3063, "class": "LRUCache", "comment_sentence": "this is fast for small capacities something below 1000 but doesn t", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is fast for small capacities something below 1000 but doesn t", "final_sentence": "this is fast for small capacities something below 1000 but doesn t"}
{"comment_sentence_id": 3222, "class": "MemoizedZipManifests", "comment_sentence": "memoized zipfile manifests.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "memoized zipfile manifests", "final_sentence": "memoized zipfile manifests"}
{"comment_sentence_id": 5102, "class": "EmbeddingBag", "comment_sentence": "attr offsets is required to be a 1d tensor containing the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr offsets is required to be a 1d tensor containing the", "final_sentence": "attr offsets is required to be a 1d tensor containing the"}
{"comment_sentence_id": 102, "class": "BaseCommand", "comment_sentence": "an argumentparser for the arguments, parses them, performs", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an argumentparser for the arguments parses them performs", "final_sentence": "an argumentparser for the arguments parses them performs"}
{"comment_sentence_id": 4129, "class": "UndefinedEnvironmentName", "comment_sentence": "environment.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "environment", "final_sentence": "environment"}
{"comment_sentence_id": 1562, "class": "Base", "comment_sentence": "to be supplied in breaks format, then converted by the subclass method", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to be supplied in breaks format then converted by the subclass method", "final_sentence": "to be supplied in breaks format then converted by the subclass method"}
{"comment_sentence_id": 1508, "class": "VCardStore", "comment_sentence": "vcardline email d@evil^com ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcardline email d@evil com", "final_sentence": "vcardline email d@evil com"}
{"comment_sentence_id": 742, "class": "RemoteTestRunner", "comment_sentence": "run tests and record everything but don t display anything.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "run tests and record everything but don t display anything", "final_sentence": "run tests and record everything but don t display anything"}
{"comment_sentence_id": 213, "class": "BaseUpdateView", "comment_sentence": "using this base class requires subclassing to provide a response mixin.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "using this base class requires subclassing to provide a response mixin", "final_sentence": "using this base class requires subclassing to provide a response mixin"}
{"comment_sentence_id": 974, "class": "Audio", "comment_sentence": "audio data b raw wav data.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "audio data b raw wav data", "final_sentence": "audio data b raw wav data"}
{"comment_sentence_id": 5682, "class": "Unfold", "comment_sentence": "consider a batched attr input tensor of shape math n, c, ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "consider a batched attr input tensor of shape math n c", "final_sentence": "consider a batched attr input tensor of shape math n c"}
{"comment_sentence_id": 669, "class": "Operation", "comment_sentence": "see db migrations state^py to represent what it performs, as well", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see db migrations state py to represent what it performs as well", "final_sentence": "see db migrations state py to represent what it performs as well"}
{"comment_sentence_id": 413, "class": "ListMixin", "comment_sentence": "function get single internal self, i", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "function get single internal self i", "final_sentence": "function get single internal self i"}
{"comment_sentence_id": 1765, "class": "CategoricalIndex", "comment_sentence": "c pd^categorical a , b , c , a , b , c", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "c pd categorical a b c a b c", "final_sentence": "c pd categorical a b c a b c"}
{"comment_sentence_id": 431, "class": "ListMixin", "comment_sentence": "the minimum legal length optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the minimum legal length optional", "final_sentence": "the minimum legal length optional"}
{"comment_sentence_id": 5661, "class": "TransformerEncoderLayer", "comment_sentence": "out encoder layer src", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "out encoder layer src", "final_sentence": "out encoder layer src"}
{"comment_sentence_id": 218, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "secure password hashing using the bcrypt algorithm recommended", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "secure password hashing using the bcrypt algorithm recommended", "final_sentence": "secure password hashing using the bcrypt algorithm recommended"}
{"comment_sentence_id": 693, "class": "Permission", "comment_sentence": "the django admin site uses permissions as follows", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the django admin site uses permissions as follows", "final_sentence": "the django admin site uses permissions as follows"}
{"comment_sentence_id": 3020, "class": "InternalName", "comment_sentence": "you cannot create these nodes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "you cannot create these nodes", "final_sentence": "you cannot create these nodes"}
{"comment_sentence_id": 4039, "class": "SkipTo", "comment_sentence": "string data desc sep", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "string data desc sep", "final_sentence": "string data desc sep"}
{"comment_sentence_id": 1870, "class": "Holiday", "comment_sentence": "class that defines a holiday with start end dates and rules", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class that defines a holiday with start end dates and rules", "final_sentence": "class that defines a holiday with start end dates and rules"}
{"comment_sentence_id": 2384, "class": "And", "comment_sentence": "may be constructed using the operator.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "may be constructed using the operator", "final_sentence": "may be constructed using the operator"}
{"comment_sentence_id": 66, "class": "AutoFieldMeta", "comment_sentence": "in many areas django also relies on using isinstance to check for an", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in many areas django also relies on using isinstance to check for an", "final_sentence": "in many areas django also relies on using isinstance to check for an"}
{"comment_sentence_id": 1229, "class": "_MockPOP3", "comment_sentence": "pm^get msg size evil , pm^get msg size good", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pm get msg size evil pm get msg size good", "final_sentence": "pm get msg size evil pm get msg size good"}
{"comment_sentence_id": 2848, "class": "FileSystemLoader", "comment_sentence": "loads templates from the file system.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "loads templates from the file system", "final_sentence": "loads templates from the file system"}
{"comment_sentence_id": 2502, "class": "Context_", "comment_sentence": "be created by hand.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "be created by hand", "final_sentence": "be created by hand"}
{"comment_sentence_id": 871, "class": "VariableWrapper", "comment_sentence": "an adapter class for cursor variables that prevents the wrapped object", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an adapter class for cursor variables that prevents the wrapped object", "final_sentence": "an adapter class for cursor variables that prevents the wrapped object"}
{"comment_sentence_id": 2287, "class": "StringArray", "comment_sentence": "true, na, false", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "true na false", "final_sentence": "true na false"}
{"comment_sentence_id": 5507, "class": "SGD", "comment_sentence": "implements stochastic gradient descent optionally with momentum .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements stochastic gradient descent optionally with momentum", "final_sentence": "implements stochastic gradient descent optionally with momentum"}
{"comment_sentence_id": 1598, "class": "BooleanArray", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 2543, "class": "CookieConflictError", "comment_sentence": "use ^get and ^set and include domain and path args in order to be more specific.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "use get and set and include domain and path args in order to be more specific", "final_sentence": "use get and set and include domain and path args in order to be more specific"}
{"comment_sentence_id": 5890, "class": "UploadTaskGroupBuilder", "comment_sentence": "a simple class to upload checkpoints.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a simple class to upload checkpoints", "final_sentence": "a simple class to upload checkpoints"}
{"comment_sentence_id": 5118, "class": "EmbeddingBag", "comment_sentence": "embedding sum nn^embeddingbag 10, 3, mode sum", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "embedding sum nn embeddingbag 10 3 mode sum", "final_sentence": "embedding sum nn embeddingbag 10 3 mode sum"}
{"comment_sentence_id": 1301, "class": "ConfigDict", "comment_sentence": "colors , liquids , tags , , ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "colors liquids tags", "final_sentence": "colors liquids tags"}
{"comment_sentence_id": 3987, "class": "SchemaValidatorMixin", "comment_sentence": "validator.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "validator", "final_sentence": "validator"}
{"comment_sentence_id": 3997, "class": "Session", "comment_sentence": "or as a context manager", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or as a context manager", "final_sentence": "or as a context manager"}
{"comment_sentence_id": 4544, "class": "BCEWithLogitsLoss", "comment_sentence": "target torch^empty 3 ^random 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "target torch empty 3 random 2", "final_sentence": "target torch empty 3 random 2"}
{"comment_sentence_id": 5896, "class": "UseOptimizer", "comment_sentence": "with useoptimizer weight weight optim", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "with useoptimizer weight weight optim", "final_sentence": "with useoptimizer weight weight optim"}
{"comment_sentence_id": 695, "class": "Permission", "comment_sentence": "and add an object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and add an object", "final_sentence": "and add an object"}
{"comment_sentence_id": 4166, "class": "_OpNamespace", "comment_sentence": "operation will already exist .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "operation will already exist", "final_sentence": "operation will already exist"}
{"comment_sentence_id": 2555, "class": "DirectedGraph", "comment_sentence": "a graph structure with directed edges.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a graph structure with directed edges", "final_sentence": "a graph structure with directed edges"}
{"comment_sentence_id": 2928, "class": "Getattr", "comment_sentence": "bytestring and prefer the attribute.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "bytestring and prefer the attribute", "final_sentence": "bytestring and prefer the attribute"}
{"comment_sentence_id": 5690, "class": "Unfold", "comment_sentence": "within each block a block has math prod text kernel size spatial", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "within each block a block has math prod text kernel size spatial", "final_sentence": "within each block a block has math prod text kernel size spatial"}
{"comment_sentence_id": 5067, "class": "EmbeddingBag", "comment_sentence": "attr per sample weights .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr per sample weights", "final_sentence": "attr per sample weights"}
{"comment_sentence_id": 780, "class": "SessionStorage", "comment_sentence": "store messages in the session that is, django^contrib.sessions .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "store messages in the session that is django contrib sessions", "final_sentence": "store messages in the session that is django contrib sessions"}
{"comment_sentence_id": 4791, "class": "Conv3d", "comment_sentence": "math k frac 1 c text in prod i 0 ^ 2 text kernel size i", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i", "final_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i"}
{"comment_sentence_id": 1336, "class": "ConfigDict", "comment_sentence": "configvalueerror invalid value for config colors 4 green", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "configvalueerror invalid value for config colors 4 green", "final_sentence": "configvalueerror invalid value for config colors 4 green"}
{"comment_sentence_id": 4670, "class": "ConstantPad3d", "comment_sentence": "for n dimensional padding, use func torch^nn.functional^pad .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for n dimensional padding use func torch nn functional pad", "final_sentence": "for n dimensional padding use func torch nn functional pad"}
{"comment_sentence_id": 2828, "class": "FileMetadata", "comment_sentence": "which is treated as existing, and will be the contents of the file at", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "which is treated as existing and will be the contents of the file at", "final_sentence": "which is treated as existing and will be the contents of the file at"}
{"comment_sentence_id": 1744, "class": "CategoricalIndex", "comment_sentence": "as ordered", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "as ordered", "final_sentence": "as ordered"}
{"comment_sentence_id": 576, "class": "MigrationQuestioner", "comment_sentence": "interactive subclass is what the command line arguments will use.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "interactive subclass is what the command line arguments will use", "final_sentence": "interactive subclass is what the command line arguments will use"}
{"comment_sentence_id": 5692, "class": "Unfold", "comment_sentence": "the total number of such blocks", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the total number of such blocks", "final_sentence": "the total number of such blocks"}
{"comment_sentence_id": 3250, "class": "Node", "comment_sentence": "represents an item in the tree", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "represents an item in the tree", "final_sentence": "represents an item in the tree"}
{"comment_sentence_id": 3023, "class": "InternalName", "comment_sentence": "a new identifier for you.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a new identifier for you", "final_sentence": "a new identifier for you"}
{"comment_sentence_id": 5014, "class": "DiagonalTensor", "comment_sentence": "it is based on the diagonalarray", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it is based on the diagonalarray", "final_sentence": "it is based on the diagonalarray"}
{"comment_sentence_id": 4475, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname mean l , & text if reduction text mean", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "operatorname mean l text if reduction text mean", "final_sentence": "operatorname mean l text if reduction text mean"}
{"comment_sentence_id": 756, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "post^comments is a reversegenericmanytoonedescriptor instance.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "post comments is a reversegenericmanytoonedescriptor instance", "final_sentence": "post comments is a reversegenericmanytoonedescriptor instance"}
{"comment_sentence_id": 733, "class": "RawPostDataException", "comment_sentence": "files, etc.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "files etc", "final_sentence": "files etc"}
{"comment_sentence_id": 4038, "class": "SkipTo", "comment_sentence": "string data sev sep", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "string data sev sep", "final_sentence": "string data sev sep"}
{"comment_sentence_id": 914, "class": "Audio", "comment_sentence": "display function, it will result in audio controls being displayed", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "display function it will result in audio controls being displayed", "final_sentence": "display function it will result in audio controls being displayed"}
{"comment_sentence_id": 2234, "class": "SQLTable", "comment_sentence": "for mapping pandas tables to sql tables.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for mapping pandas tables to sql tables", "final_sentence": "for mapping pandas tables to sql tables"}
{"comment_sentence_id": 841, "class": "TestImageFieldFile", "comment_sentence": "was opened.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "was opened", "final_sentence": "was opened"}
{"comment_sentence_id": 1217, "class": "_MockPOP3", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1964, "class": "IntervalDtype", "comment_sentence": "subtype", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "subtype", "final_sentence": "subtype"}
{"comment_sentence_id": 5106, "class": "EmbeddingBag", "comment_sentence": "having b bags.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "having b bags", "final_sentence": "having b bags"}
{"comment_sentence_id": 1133, "class": "MyFrame", "comment_sentence": "it just shows a few controls on a wxpanel,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it just shows a few controls on a wxpanel", "final_sentence": "it just shows a few controls on a wxpanel"}
{"comment_sentence_id": 5300, "class": "Module", "comment_sentence": "def forward self, x", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "def forward self x", "final_sentence": "def forward self x"}
{"comment_sentence_id": 378, "class": "ImageFileDescriptor", "comment_sentence": "assigning the width height to the width field height field, if appropriate.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "assigning the width height to the width field height field if appropriate", "final_sentence": "assigning the width height to the width field height field if appropriate"}
{"comment_sentence_id": 638, "class": "MultiValueField", "comment_sentence": "cleaned by the first field, the second value is cleaned by the second", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "cleaned by the first field the second value is cleaned by the second", "final_sentence": "cleaned by the first field the second value is cleaned by the second"}
{"comment_sentence_id": 958, "class": "Audio", "comment_sentence": "import numpy as np", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "import numpy as np", "final_sentence": "import numpy as np"}
{"comment_sentence_id": 414, "class": "ListMixin", "comment_sentence": "same as above, but for use within the class optional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "same as above but for use within the class optional", "final_sentence": "same as above but for use within the class optional"}
{"comment_sentence_id": 5559, "class": "SharedCache", "comment_sentence": "dictionary from multiprocessing handles to storageweakref", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "dictionary from multiprocessing handles to storageweakref", "final_sentence": "dictionary from multiprocessing handles to storageweakref"}
{"comment_sentence_id": 4786, "class": "Conv3d", "comment_sentence": "math k frac 1 c text in prod i 0 ^ 2 text kernel size i", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i", "final_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i"}
{"comment_sentence_id": 318, "class": "DatabaseReceiver", "comment_sentence": "used in the tests for the database argument in signals #13552", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "used in the tests for the database argument in signals 13552", "final_sentence": "used in the tests for the database argument in signals 13552"}
{"comment_sentence_id": 4142, "class": "ZipResourceFinder", "comment_sentence": "resource finder for resources in ^zip files.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "resource finder for resources in zip files", "final_sentence": "resource finder for resources in zip files"}
{"comment_sentence_id": 5594, "class": "Task", "comment_sentence": "globl ops^const 0", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "globl ops const 0", "final_sentence": "globl ops const 0"}
{"comment_sentence_id": 2456, "class": "CaseInsensitiveDict", "comment_sentence": "for example, headers content encoding will return the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "for example headers content encoding will return the", "final_sentence": "for example headers content encoding will return the"}
{"comment_sentence_id": 97, "class": "BaseCommand", "comment_sentence": "1", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 265, "class": "Client", "comment_sentence": "the server response objects are annotated with the details", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the server response objects are annotated with the details", "final_sentence": "the server response objects are annotated with the details"}
{"comment_sentence_id": 4714, "class": "Conv3d", "comment_sentence": "out n i, c out j bias c out j", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "out n i c out j bias c out j", "final_sentence": "out n i c out j bias c out j"}
{"comment_sentence_id": 3792, "class": "Resource", "comment_sentence": "not normally instantiated by user code, but rather by a", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "not normally instantiated by user code but rather by a", "final_sentence": "not normally instantiated by user code but rather by a"}
{"comment_sentence_id": 4469, "class": "BCEWithLogitsLoss", "comment_sentence": "1 y n cdot log 1 sigma x n right ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 y n cdot log 1 sigma x n right", "final_sentence": "1 y n cdot log 1 sigma x n right"}
{"comment_sentence_id": 516, "class": "MigrationGraph", "comment_sentence": "migration files and if the replaced migrations are all either unapplied", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "migration files and if the replaced migrations are all either unapplied", "final_sentence": "migration files and if the replaced migrations are all either unapplied"}
{"comment_sentence_id": 5428, "class": "NetModifier", "comment_sentence": "related operators are added to the net.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "related operators are added to the net", "final_sentence": "related operators are added to the net"}
{"comment_sentence_id": 3341, "class": "omdict", "comment_sentence": "iterlistitems", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "iterlistitems", "final_sentence": "iterlistitems"}
{"comment_sentence_id": 3317, "class": "omdict", "comment_sentence": "this means that omdict retains method parity with dict, and a dict", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this means that omdict retains method parity with dict and a dict", "final_sentence": "this means that omdict retains method parity with dict and a dict"}
{"comment_sentence_id": 5743, "class": "Unfold", "comment_sentence": ", fold params", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "fold params", "final_sentence": "fold params"}
{"comment_sentence_id": 2342, "class": "TestFromArrays", "comment_sentence": "tests specific to intervalindex^from arrays", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests specific to intervalindex from arrays", "final_sentence": "tests specific to intervalindex from arrays"}
{"comment_sentence_id": 3518, "class": "ParseResults", "comment_sentence": "# equivalent form", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "equivalent form", "final_sentence": "equivalent form"}
{"comment_sentence_id": 1758, "class": "CategoricalIndex", "comment_sentence": "see the user guide", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see the user guide", "final_sentence": "see the user guide"}
{"comment_sentence_id": 2371, "class": "_FileInFile", "comment_sentence": "object.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 1220, "class": "_MockPOP3", "comment_sentence": "conn cls mockpop3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "conn cls mockpop3", "final_sentence": "conn cls mockpop3"}
{"comment_sentence_id": 1906, "class": "IntegerArray", "comment_sentence": "they are capitalized.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "they are capitalized", "final_sentence": "they are capitalized"}
{"comment_sentence_id": 1165, "class": "TermColors", "comment_sentence": "confused by color escapes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "confused by color escapes", "final_sentence": "confused by color escapes"}
{"comment_sentence_id": 3323, "class": "omdict", "comment_sentence": "getitem , setitem , delitem , contains ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "getitem setitem delitem contains", "final_sentence": "getitem setitem delitem contains"}
{"comment_sentence_id": 5736, "class": "Unfold", "comment_sentence": "class torch^nn.unfold instances created with the same", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class torch nn unfold instances created with the same", "final_sentence": "class torch nn unfold instances created with the same"}
{"comment_sentence_id": 3510, "class": "ParseResults", "comment_sentence": "by list index results 0 , results 1 , etc", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by list index results 0 results 1 etc", "final_sentence": "by list index results 0 results 1 etc"}
{"comment_sentence_id": 5747, "class": "Unfold", "comment_sentence": "fold unfold input divisor input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "fold unfold input divisor input", "final_sentence": "fold unfold input divisor input"}
{"comment_sentence_id": 4732, "class": "Conv3d", "comment_sentence": "its own set of filters, of size", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "its own set of filters of size", "final_sentence": "its own set of filters of size"}
{"comment_sentence_id": 3531, "class": "ParseResults", "comment_sentence": "prints", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 5729, "class": "Unfold", "comment_sentence": "class torch^nn.unfold extracts the values in the local blocks by", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "class torch nn unfold extracts the values in the local blocks by", "final_sentence": "class torch nn unfold extracts the values in the local blocks by"}
{"comment_sentence_id": 1190, "class": "YouTubeVideo", "comment_sentence": "to start from 30 seconds", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to start from 30 seconds", "final_sentence": "to start from 30 seconds"}
{"comment_sentence_id": 970, "class": "Audio", "comment_sentence": "audio filename path to sound^ogg", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "audio filename path to sound ogg", "final_sentence": "audio filename path to sound ogg"}
{"comment_sentence_id": 4312, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x7x7 cube", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "target output size of 7x7x7 cube", "final_sentence": "target output size of 7x7x7 cube"}
{"comment_sentence_id": 4770, "class": "Conv3d", "comment_sentence": "output math n, c out , d out , h out , w out where", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output math n c out d out h out w out where", "final_sentence": "output math n c out d out h out w out where"}
{"comment_sentence_id": 327, "class": "DjangoHTMLTranslator", "comment_sentence": "django specific rest to html tweaks.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "django specific rest to html tweaks", "final_sentence": "django specific rest to html tweaks"}
{"comment_sentence_id": 1322, "class": "ConfigDict", "comment_sentence": "pot tags ^append z invalid", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot tags append z invalid", "final_sentence": "pot tags append z invalid"}
{"comment_sentence_id": 512, "class": "MigrationGraph", "comment_sentence": "migrations files can be marked as replacing another set of migrations", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "migrations files can be marked as replacing another set of migrations", "final_sentence": "migrations files can be marked as replacing another set of migrations"}
{"comment_sentence_id": 1654, "class": "CategoricalDtype", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 5775, "class": "Unfold", "comment_sentence": "# or equivalently and avoiding a copy ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "or equivalently and avoiding a copy", "final_sentence": "or equivalently and avoiding a copy"}
{"comment_sentence_id": 1518, "class": "VCardStore", "comment_sentence": "cards can be removed using del vcards", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "cards can be removed using del vcards", "final_sentence": "cards can be removed using del vcards"}
{"comment_sentence_id": 1484, "class": "StorageBackedLongs", "comment_sentence": "unpacklonglist storage sbl 1, 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unpacklonglist storage sbl 1 2", "final_sentence": "unpacklonglist storage sbl 1 2"}
{"comment_sentence_id": 4494, "class": "BCEWithLogitsLoss", "comment_sentence": "then pos weight for the class should be equal to math frac 300 100 3 .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "then pos weight for the class should be equal to math frac 300 100 3", "final_sentence": "then pos weight for the class should be equal to math frac 300 100 3"}
{"comment_sentence_id": 3042, "class": "Katakana", "comment_sentence": "unicode set for katakana unicode character range", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unicode set for katakana unicode character range", "final_sentence": "unicode set for katakana unicode character range"}
{"comment_sentence_id": 387, "class": "Individual", "comment_sentence": "it won t be registered with the admin, so the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "it won t be registered with the admin so the", "final_sentence": "it won t be registered with the admin so the"}
{"comment_sentence_id": 1058, "class": "GeoJSON", "comment_sentence": "geojson expects json able dict", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "geojson expects json able dict", "final_sentence": "geojson expects json able dict"}
{"comment_sentence_id": 555, "class": "MigrationLoader", "comment_sentence": "to disk, but this is probably fine.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "to disk but this is probably fine", "final_sentence": "to disk but this is probably fine"}
{"comment_sentence_id": 4112, "class": "TokenStreamIterator", "comment_sentence": "until the eof token is reached.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "until the eof token is reached", "final_sentence": "until the eof token is reached"}
{"comment_sentence_id": 1054, "class": "DummyMod", "comment_sentence": "a dummy module used for ipython s interactive module when", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a dummy module used for ipython s interactive module when", "final_sentence": "a dummy module used for ipython s interactive module when"}
{"comment_sentence_id": 4477, "class": "BCEWithLogitsLoss", "comment_sentence": "end cases", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "end cases", "final_sentence": "end cases"}
{"comment_sentence_id": 3074, "class": "Markup", "comment_sentence": "safe.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "safe", "final_sentence": "safe"}
{"comment_sentence_id": 5324, "class": "MultiLabelMarginLoss", "comment_sentence": "and output math y which is a 2d tensor of target class indices .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "and output math y which is a 2d tensor of target class indices", "final_sentence": "and output math y which is a 2d tensor of target class indices"}
{"comment_sentence_id": 434, "class": "ListMixin", "comment_sentence": "type or tuple allowed", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "type or tuple allowed", "final_sentence": "type or tuple allowed"}
{"comment_sentence_id": 4781, "class": "Conv3d", "comment_sentence": "weight tensor the learnable weights of the module of shape", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "weight tensor the learnable weights of the module of shape", "final_sentence": "weight tensor the learnable weights of the module of shape"}
{"comment_sentence_id": 723, "class": "ProxyModelInheritanceTests", "comment_sentence": "proxy model inheritance across apps can result in migrate not creating the table", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "proxy model inheritance across apps can result in migrate not creating the table", "final_sentence": "proxy model inheritance across apps can result in migrate not creating the table"}
{"comment_sentence_id": 547, "class": "MigrationLoader", "comment_sentence": "django^db.migrations^migration for what that looks like.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "django db migrations migration for what that looks like", "final_sentence": "django db migrations migration for what that looks like"}
{"comment_sentence_id": 1847, "class": "ExcelFile", "comment_sentence": "uses xlrd.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "uses xlrd", "final_sentence": "uses xlrd"}
{"comment_sentence_id": 292, "class": "ConsoleDirective", "comment_sentence": "a restructuredtext directive which renders a two tab code block in which", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a restructuredtext directive which renders a two tab code block in which", "final_sentence": "a restructuredtext directive which renders a two tab code block in which"}
{"comment_sentence_id": 5606, "class": "Task", "comment_sentence": "the mul will only execute once, after all the instances", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the mul will only execute once after all the instances", "final_sentence": "the mul will only execute once after all the instances"}
{"comment_sentence_id": 4690, "class": "ConstantPad3d", "comment_sentence": "m nn^constantpad3d 3, 3, 6, 6, 0, 1 , 35", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m nn constantpad3d 3 3 6 6 0 1 35", "final_sentence": "m nn constantpad3d 3 3 6 6 0 1 35"}
{"comment_sentence_id": 3982, "class": "SafeFileCache", "comment_sentence": "a file based cache which is safe to use even when the target directory may", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a file based cache which is safe to use even when the target directory may", "final_sentence": "a file based cache which is safe to use even when the target directory may"}
{"comment_sentence_id": 2452, "class": "CaseInsensitiveDict", "comment_sentence": "cid caseinsensitivedict", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "cid caseinsensitivedict", "final_sentence": "cid caseinsensitivedict"}
{"comment_sentence_id": 1909, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 5066, "class": "EmbeddingBag", "comment_sentence": "only supported mode is sum , which computes a weighted sum according to", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "only supported mode is sum which computes a weighted sum according to", "final_sentence": "only supported mode is sum which computes a weighted sum according to"}
{"comment_sentence_id": 4040, "class": "SkipTo", "comment_sentence": "integer days open", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer days open", "final_sentence": "integer days open"}
{"comment_sentence_id": 895, "class": "XFrameOptionsMiddleware", "comment_sentence": "by default, set the x frame options header to sameorigin , meaning the", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "by default set the x frame options header to sameorigin meaning the", "final_sentence": "by default set the x frame options header to sameorigin meaning the"}
{"comment_sentence_id": 1199, "class": "YouTubeVideo", "comment_sentence": "will be inserted in the document.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "will be inserted in the document", "final_sentence": "will be inserted in the document"}
{"comment_sentence_id": 3541, "class": "ParseResults", "comment_sentence": "year 1999", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "year 1999", "final_sentence": "year 1999"}
{"comment_sentence_id": 5585, "class": "Task", "comment_sentence": "a task is composed of an execution step and zero or more outputs.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a task is composed of an execution step and zero or more outputs", "final_sentence": "a task is composed of an execution step and zero or more outputs"}
{"comment_sentence_id": 1958, "class": "IntervalDtype", "comment_sentence": "an extensiondtype for interval data.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "an extensiondtype for interval data", "final_sentence": "an extensiondtype for interval data"}
{"comment_sentence_id": 101, "class": "BaseCommand", "comment_sentence": "the run from argv method calls create parser to get", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the run from argv method calls create parser to get", "final_sentence": "the run from argv method calls create parser to get"}
{"comment_sentence_id": 1226, "class": "_MockPOP3", "comment_sentence": "true, false", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "true false", "final_sentence": "true false"}
{"comment_sentence_id": 1166, "class": "TermColors", "comment_sentence": "this class should be used as a mixin for building color schemes.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class should be used as a mixin for building color schemes", "final_sentence": "this class should be used as a mixin for building color schemes"}
{"comment_sentence_id": 844, "class": "TestRouter", "comment_sentence": "routes to the other database if the model name starts with other .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "routes to the other database if the model name starts with other", "final_sentence": "routes to the other database if the model name starts with other"}
{"comment_sentence_id": 403, "class": "InvalidBasesError", "comment_sentence": "a model s base classes can t be resolved.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a model s base classes can t be resolved", "final_sentence": "a model s base classes can t be resolved"}
{"comment_sentence_id": 5697, "class": "Unfold", "comment_sentence": "of attr input math above , and math d is over all spatial", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "of attr input math above and math d is over all spatial", "final_sentence": "of attr input math above and math d is over all spatial"}
{"comment_sentence_id": 3800, "class": "ResourceManager", "comment_sentence": "manage resource extraction and packages", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "manage resource extraction and packages", "final_sentence": "manage resource extraction and packages"}
{"comment_sentence_id": 1116, "class": "Magics", "comment_sentence": "initialization.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "initialization", "final_sentence": "initialization"}
{"comment_sentence_id": 1579, "class": "BooleanArray", "comment_sentence": "see ref boolean^kleene for more.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see ref boolean kleene for more", "final_sentence": "see ref boolean kleene for more"}
{"comment_sentence_id": 1907, "class": "IntegerArray", "comment_sentence": "pd^array 1, none, 3 , dtype int32", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd array 1 none 3 dtype int32", "final_sentence": "pd array 1 none 3 dtype int32"}
{"comment_sentence_id": 1320, "class": "ConfigDict", "comment_sentence": "pot tags 0 c", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot tags 0 c", "final_sentence": "pot tags 0 c"}
{"comment_sentence_id": 4471, "class": "BCEWithLogitsLoss", "comment_sentence": "if attr reduction is not none", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if attr reduction is not none", "final_sentence": "if attr reduction is not none"}
{"comment_sentence_id": 766, "class": "SameAsLookup", "comment_sentence": "so if a and b are the same feature,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "so if a and b are the same feature", "final_sentence": "so if a and b are the same feature"}
{"comment_sentence_id": 3162, "class": "MemcachedBytecodeCache", "comment_sentence": "storing the information.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "storing the information", "final_sentence": "storing the information"}
{"comment_sentence_id": 1510, "class": "VCardStore", "comment_sentence": "vcards can be looked up directly by e mail.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "vcards can be looked up directly by e mail", "final_sentence": "vcards can be looked up directly by e mail"}
{"comment_sentence_id": 5222, "class": "FisherSnedecor", "comment_sentence": "m^sample # fisher snedecor distributed with df1 1 and df2 2", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2", "final_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2"}
{"comment_sentence_id": 5469, "class": "Poisson", "comment_sentence": "m poisson torch^tensor 4", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m poisson torch tensor 4", "final_sentence": "m poisson torch tensor 4"}
{"comment_sentence_id": 293, "class": "ConsoleDirective", "comment_sentence": "the second tab shows a windows command line equivalent of the usual", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the second tab shows a windows command line equivalent of the usual", "final_sentence": "the second tab shows a windows command line equivalent of the usual"}
{"comment_sentence_id": 1664, "class": "CategoricalDtype", "comment_sentence": "see ref categorical^categoricaldtype", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "see ref categorical categoricaldtype", "final_sentence": "see ref categorical categoricaldtype"}
{"comment_sentence_id": 896, "class": "XFrameOptionsMiddleware", "comment_sentence": "response can only be loaded on a frame within the same site.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "response can only be loaded on a frame within the same site", "final_sentence": "response can only be loaded on a frame within the same site"}
{"comment_sentence_id": 5590, "class": "Task", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3986, "class": "SchemaValidatorMixin", "comment_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus", "final_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus"}
{"comment_sentence_id": 2328, "class": "StringMethods", "comment_sentence": "s^str.split", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "s str split", "final_sentence": "s str split"}
{"comment_sentence_id": 5637, "class": "TestQuantizedLinear", "comment_sentence": "tests the correctness of the quantized linear and linear relu op.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests the correctness of the quantized linear and linear relu op", "final_sentence": "tests the correctness of the quantized linear and linear relu op"}
{"comment_sentence_id": 5304, "class": "Module", "comment_sentence": "parameters converted too when you call meth to , etc", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "parameters converted too when you call meth to etc", "final_sentence": "parameters converted too when you call meth to etc"}
{"comment_sentence_id": 1757, "class": "CategoricalIndex", "comment_sentence": "notes", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 2386, "class": "And", "comment_sentence": "suppress backtracking.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "suppress backtracking", "final_sentence": "suppress backtracking"}
{"comment_sentence_id": 386, "class": "Individual", "comment_sentence": "a model with a fk to itself.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a model with a fk to itself", "final_sentence": "a model with a fk to itself"}
{"comment_sentence_id": 1769, "class": "CategoricalIndex", "comment_sentence": "ci pd^categoricalindex a , b , c , a , b , c , ordered true,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "ci pd categoricalindex a b c a b c ordered true", "final_sentence": "ci pd categoricalindex a b c a b c ordered true"}
{"comment_sentence_id": 3520, "class": "ParseResults", "comment_sentence": "# parsestring returns a parseresults object", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "parsestring returns a parseresults object", "final_sentence": "parsestring returns a parseresults object"}
{"comment_sentence_id": 4709, "class": "Conv3d", "comment_sentence": "applies a 3d convolution over an input signal composed of several input", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "applies a 3d convolution over an input signal composed of several input", "final_sentence": "applies a 3d convolution over an input signal composed of several input"}
{"comment_sentence_id": 5767, "class": "Unfold", "comment_sentence": "output^size", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "output size", "final_sentence": "output size"}
{"comment_sentence_id": 4747, "class": "Conv3d", "comment_sentence": "in other words, for an input of size math n, c in , d in , h in , w in ,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "in other words for an input of size math n c in d in h in w in", "final_sentence": "in other words for an input of size math n c in d in h in w in"}
{"comment_sentence_id": 5646, "class": "TransformerEncoderLayer", "comment_sentence": "2017", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "2017", "final_sentence": "2017"}
{"comment_sentence_id": 3666, "class": "PoolManager", "comment_sentence": "necessary connection pools for you.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "necessary connection pools for you", "final_sentence": "necessary connection pools for you"}
{"comment_sentence_id": 545, "class": "MigrationLoader", "comment_sentence": "inherit from django^db.migrations^migration.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "inherit from django db migrations migration", "final_sentence": "inherit from django db migrations migration"}
{"comment_sentence_id": 3477, "class": "PacifyFlushWrapper", "comment_sentence": "other cleanup code, and the case where the underlying file is not a broken", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "other cleanup code and the case where the underlying file is not a broken", "final_sentence": "other cleanup code and the case where the underlying file is not a broken"}
{"comment_sentence_id": 4887, "class": "CyclicLR", "comment_sentence": "the paper cyclical learning rates for training neural networks .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "the paper cyclical learning rates for training neural networks", "final_sentence": "the paper cyclical learning rates for training neural networks"}
{"comment_sentence_id": 1764, "class": "CategoricalIndex", "comment_sentence": "categoricalindex can also be instantiated from a categorical", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "categoricalindex can also be instantiated from a categorical", "final_sentence": "categoricalindex can also be instantiated from a categorical"}
{"comment_sentence_id": 3781, "class": "RequirementUninstaller", "comment_sentence": "this uses uninstallpathset to control the workflow.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "this uses uninstallpathset to control the workflow", "final_sentence": "this uses uninstallpathset to control the workflow"}
{"comment_sentence_id": 543, "class": "MigrationLoader", "comment_sentence": "on initialization, this class will scan those directories, and open and", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "on initialization this class will scan those directories and open and", "final_sentence": "on initialization this class will scan those directories and open and"}
{"comment_sentence_id": 118, "class": "BaseCommand", "comment_sentence": "all of their logic in handle , or perform some additional", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "all of their logic in handle or perform some additional", "final_sentence": "all of their logic in handle or perform some additional"}
{"comment_sentence_id": 116, "class": "BaseCommand", "comment_sentence": "thus, the handle method is typically the starting point for", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "thus the handle method is typically the starting point for", "final_sentence": "thus the handle method is typically the starting point for"}
{"comment_sentence_id": 1766, "class": "CategoricalIndex", "comment_sentence": "pd^categoricalindex c", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "pd categoricalindex c", "final_sentence": "pd categoricalindex c"}
{"comment_sentence_id": 5243, "class": "LBFGS", "comment_sentence": "implements l bfgs algorithm, heavily inspired by minfunc", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements l bfgs algorithm heavily inspired by minfunc", "final_sentence": "implements l bfgs algorithm heavily inspired by minfunc"}
{"comment_sentence_id": 549, "class": "MigrationLoader", "comment_sentence": "these are loaded into a separate set of migrations away from the main ones.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "these are loaded into a separate set of migrations away from the main ones", "final_sentence": "these are loaded into a separate set of migrations away from the main ones"}
{"comment_sentence_id": 4642, "class": "BuildType", "comment_sentence": "if cmakecache^txt does not exist,", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "if cmakecache txt does not exist", "final_sentence": "if cmakecache txt does not exist"}
{"comment_sentence_id": 4147, "class": "_OpNamespace", "comment_sentence": "call this op, the user will write torch^ops.my namespace^my op .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "call this op the user will write torch ops my namespace my op", "final_sentence": "call this op the user will write torch ops my namespace my op"}
{"comment_sentence_id": 1324, "class": "ConfigDict", "comment_sentence": "valueerror invalid value for config tags 1 .", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "valueerror invalid value for config tags 1", "final_sentence": "valueerror invalid value for config tags 1"}
{"comment_sentence_id": 3699, "class": "PrefixLoader", "comment_sentence": "a loader that is passed a dict of loaders where each loader is bound", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "a loader that is passed a dict of loaders where each loader is bound", "final_sentence": "a loader that is passed a dict of loaders where each loader is bound"}
{"comment_sentence_id": 16, "class": "Atomic", "comment_sentence": "guarantee the atomic execution of a given block.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "guarantee the atomic execution of a given block", "final_sentence": "guarantee the atomic execution of a given block"}
{"comment_sentence_id": 2458, "class": "CaseInsensitiveDict", "comment_sentence": "of how the header name was originally stored.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "of how the header name was originally stored", "final_sentence": "of how the header name was originally stored"}
{"comment_sentence_id": 120, "class": "BaseCommand", "comment_sentence": "specialized methods as needed.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "specialized methods as needed", "final_sentence": "specialized methods as needed"}
{"comment_sentence_id": 4497, "class": "BCEWithLogitsLoss", "comment_sentence": "target torch^ones 10, 64 , dtype torch^float32 # 64 classes, batch size 10", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "target torch ones 10 64 dtype torch float32 64 classes batch size 10", "final_sentence": "target torch ones 10 64 dtype torch float32 64 classes batch size 10"}
{"comment_sentence_id": 363, "class": "FrenchTestCase", "comment_sentence": "tests using the french translations of the sampleproject.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests using the french translations of the sampleproject", "final_sentence": "tests using the french translations of the sampleproject"}
{"comment_sentence_id": 734, "class": "RawPostDataException", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 1467, "class": "MailpileVFS", "comment_sentence": "delegating calls to individual implementations.", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "delegating calls to individual implementations", "final_sentence": "delegating calls to individual implementations"}
{"comment_sentence_id": 1904, "class": "IntegerArray", "comment_sentence": "length 3, dtype int32", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "length 3 dtype int32", "final_sentence": "length 3 dtype int32"}
{"comment_sentence_id": 5744, "class": "Unfold", "comment_sentence": "unfold nn^unfold fold params", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "unfold nn unfold fold params", "final_sentence": "unfold nn unfold fold params"}
{"comment_sentence_id": 5447, "class": "OneHotCategorical", "comment_sentence": "m^sample # equal probability of 0, 1, 2, 3", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m sample equal probability of 0 1 2 3", "final_sentence": "m sample equal probability of 0 1 2 3"}
{"comment_sentence_id": 4052, "class": "SkipTo", "comment_sentence": "issue num 94", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "issue num 94", "final_sentence": "issue num 94"}
{"comment_sentence_id": 4309, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 5,7,9", "partition": 0, "instance_type": 0, "category": "Parameters", "pre_sentence": "m nn adaptivemaxpool3d 5 7 9", "final_sentence": "m nn adaptivemaxpool3d 5 7 9"}

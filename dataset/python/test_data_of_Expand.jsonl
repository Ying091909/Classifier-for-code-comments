{"comment_sentence_id": 4134, "class": "UnlockError", "comment_sentence": "raise unlockerror", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "raise unlockerror", "final_sentence": "raise unlockerror"}
{"comment_sentence_id": 552, "class": "MigrationLoader", "comment_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "final_sentence": "any dependency pointers to the replaced migrations are re pointed to the"}
{"comment_sentence_id": 1548, "class": "AbstractEngine", "comment_sentence": "object serving as a base class for all engines.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "object serving as a base class for all engines", "final_sentence": "object serving as a base class for all engines"}
{"comment_sentence_id": 5357, "class": "MultiLabelMarginLoss", "comment_sentence": "mean the sum of the output will be divided by the number of", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "mean the sum of the output will be divided by the number of", "final_sentence": "mean the sum of the output will be divided by the number of"}
{"comment_sentence_id": 3410, "class": "Option", "comment_sentence": "the default is", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the default is", "final_sentence": "the default is"}
{"comment_sentence_id": 2061, "class": "PlotAccessor", "comment_sentence": "table.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "table", "final_sentence": "table"}
{"comment_sentence_id": 2458, "class": "CaseInsensitiveDict", "comment_sentence": "of how the header name was originally stored.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "of how the header name was originally stored", "final_sentence": "of how the header name was originally stored"}
{"comment_sentence_id": 4659, "class": "Caffe2OperatorTestCase", "comment_sentence": "which includes input and operator, ^etc", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "which includes input and operator etc", "final_sentence": "which includes input and operator etc"}
{"comment_sentence_id": 4370, "class": "BatchNorm1d", "comment_sentence": "where math hat x is the estimated statistic and math x t is the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "where math hat x is the estimated statistic and math x t is the", "final_sentence": "where math hat x is the estimated statistic and math x t is the"}
{"comment_sentence_id": 3525, "class": "ParseResults", "comment_sentence": "test result 0", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test result 0", "final_sentence": "test result 0"}
{"comment_sentence_id": 3415, "class": "Option", "comment_sentence": "the option string contains a slash to mark two options.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the option string contains a slash to mark two options", "final_sentence": "the option string contains a slash to mark two options"}
{"comment_sentence_id": 1070, "class": "HistoryAccessor", "comment_sentence": "ipython shells use", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ipython shells use", "final_sentence": "ipython shells use"}
{"comment_sentence_id": 4220, "class": "Adadelta", "comment_sentence": "numerical stability default 1e 6", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "numerical stability default 1e 6", "final_sentence": "numerical stability default 1e 6"}
{"comment_sentence_id": 4378, "class": "BatchNorm1d", "comment_sentence": "default 1e 5", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default 1e 5", "final_sentence": "default 1e 5"}
{"comment_sentence_id": 5471, "class": "Poisson", "comment_sentence": "tensor 3.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tensor 3", "final_sentence": "tensor 3"}
{"comment_sentence_id": 1719, "class": "CategoricalIndex", "comment_sentence": "will be inferred from the data .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "will be inferred from the data", "final_sentence": "will be inferred from the data"}
{"comment_sentence_id": 4715, "class": "Conv3d", "comment_sentence": "sum k 0 ^ c in 1 weight c out j , k star input n i, k", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "sum k 0 c in 1 weight c out j k star input n i k", "final_sentence": "sum k 0 c in 1 weight c out j k star input n i k"}
{"comment_sentence_id": 3530, "class": "ParseResults", "comment_sentence": "test result^dump , str", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test result dump str", "final_sentence": "test result dump str"}
{"comment_sentence_id": 3418, "class": "Option", "comment_sentence": "this is similar to nargs", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this is similar to nargs", "final_sentence": "this is similar to nargs"}
{"comment_sentence_id": 4311, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 5369, "class": "MultiLabelMarginLoss", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4120, "class": "TreeBuilder", "comment_sentence": "doctypeclass the class to use for doctypes", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "doctypeclass the class to use for doctypes", "final_sentence": "doctypeclass the class to use for doctypes"}
{"comment_sentence_id": 23, "class": "Atomic", "comment_sentence": "and rolls back the transaction or to the savepoint on exceptions.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "and rolls back the transaction or to the savepoint on exceptions", "final_sentence": "and rolls back the transaction or to the savepoint on exceptions"}
{"comment_sentence_id": 3271, "class": "NotAny", "comment_sentence": "# integers that are followed by .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "integers that are followed by", "final_sentence": "integers that are followed by"}
{"comment_sentence_id": 1717, "class": "CategoricalIndex", "comment_sentence": "items need to be unique.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "items need to be unique", "final_sentence": "items need to be unique"}
{"comment_sentence_id": 1897, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 1673, "class": "CategoricalDtype", "comment_sentence": "dtype category", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "dtype category", "final_sentence": "dtype category"}
{"comment_sentence_id": 1048, "class": "DisplayHook", "comment_sentence": "the custom ipython displayhook to replace sys^displayhook.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the custom ipython displayhook to replace sys displayhook", "final_sentence": "the custom ipython displayhook to replace sys displayhook"}
{"comment_sentence_id": 90, "class": "BaseCommand", "comment_sentence": "use this class if you want access to all of the mechanisms which", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "use this class if you want access to all of the mechanisms which", "final_sentence": "use this class if you want access to all of the mechanisms which"}
{"comment_sentence_id": 5682, "class": "Unfold", "comment_sentence": "consider a batched attr input tensor of shape math n, c, ,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "consider a batched attr input tensor of shape math n c", "final_sentence": "consider a batched attr input tensor of shape math n c"}
{"comment_sentence_id": 5123, "class": "EmbeddingBag", "comment_sentence": "tensor 08861, 54350, 00523 ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tensor 08861 54350 00523", "final_sentence": "tensor 08861 54350 00523"}
{"comment_sentence_id": 3079, "class": "Markup", "comment_sentence": "markup hello, em world em !", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "markup hello em world em", "final_sentence": "markup hello em world em"}
{"comment_sentence_id": 5298, "class": "Module", "comment_sentence": "self^conv1 nn^conv2d 1, 20, 5", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "self conv1 nn conv2d 1 20 5", "final_sentence": "self conv1 nn conv2d 1 20 5"}
{"comment_sentence_id": 3246, "class": "Mul", "comment_sentence": "multiplies the left with the right node.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "multiplies the left with the right node", "final_sentence": "multiplies the left with the right node"}
{"comment_sentence_id": 5446, "class": "OneHotCategorical", "comment_sentence": "m onehotcategorical torch^tensor 025, 025, 025, 025", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "m onehotcategorical torch tensor 025 025 025 025", "final_sentence": "m onehotcategorical torch tensor 025 025 025 025"}
{"comment_sentence_id": 5265, "class": "LBFGS", "comment_sentence": "tolerance change float termination tolerance on function", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tolerance change float termination tolerance on function", "final_sentence": "tolerance change float termination tolerance on function"}
{"comment_sentence_id": 4662, "class": "Caffe2OperatorTestCase", "comment_sentence": "run backward method will be executed.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "run backward method will be executed", "final_sentence": "run backward method will be executed"}
{"comment_sentence_id": 126, "class": "BaseCommand", "comment_sentence": "a boolean indicating whether the command outputs sql", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a boolean indicating whether the command outputs sql", "final_sentence": "a boolean indicating whether the command outputs sql"}
{"comment_sentence_id": 1329, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 64, "class": "AutoFieldMeta", "comment_sentence": "create a non integer automatically generated field using column defaults", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "create a non integer automatically generated field using column defaults", "final_sentence": "create a non integer automatically generated field using column defaults"}
{"comment_sentence_id": 3539, "class": "ParseResults", "comment_sentence": "day 31", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "day 31", "final_sentence": "day 31"}
{"comment_sentence_id": 3426, "class": "Option", "comment_sentence": "param help the help string.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "param help the help string", "final_sentence": "param help the help string"}
{"comment_sentence_id": 3333, "class": "omdict", "comment_sentence": "interact with all items in the dictionary, including multiple items with", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "interact with all items in the dictionary including multiple items with", "final_sentence": "interact with all items in the dictionary including multiple items with"}
{"comment_sentence_id": 3097, "class": "Markup", "comment_sentence": "all methods escape their arguments and return a markup instance.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "all methods escape their arguments and return a markup instance", "final_sentence": "all methods escape their arguments and return a markup instance"}
{"comment_sentence_id": 1590, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array with the data.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a 1 d boolean dtype array with the data", "final_sentence": "a 1 d boolean dtype array with the data"}
{"comment_sentence_id": 1080, "class": "InteractiveShellApp", "comment_sentence": "of the subclass", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "of the subclass", "final_sentence": "of the subclass"}
{"comment_sentence_id": 1321, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 3529, "class": "ParseResults", "comment_sentence": "test minutes in result", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test minutes in result", "final_sentence": "test minutes in result"}
{"comment_sentence_id": 1323, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 5268, "class": "LBFGS", "comment_sentence": "line search fn str either strong wolfe or none default none .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "line search fn str either strong wolfe or none default none", "final_sentence": "line search fn str either strong wolfe or none default none"}
{"comment_sentence_id": 3422, "class": "Option", "comment_sentence": "param allow from autoenv if this is enabled then the value of this", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "param allow from autoenv if this is enabled then the value of this", "final_sentence": "param allow from autoenv if this is enabled then the value of this"}
{"comment_sentence_id": 1425, "class": "ConfigureMailboxes", "comment_sentence": "if not account is specified, the mailbox is only assigned an id for use", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if not account is specified the mailbox is only assigned an id for use", "final_sentence": "if not account is specified the mailbox is only assigned an id for use"}
{"comment_sentence_id": 2375, "class": "_MovedItems", "comment_sentence": "lazy loading of moved objects", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "lazy loading of moved objects", "final_sentence": "lazy loading of moved objects"}
{"comment_sentence_id": 4117, "class": "TreeBuilder", "comment_sentence": "documentclass the class to use for the bottommost node of a document", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "documentclass the class to use for the bottommost node of a document", "final_sentence": "documentclass the class to use for the bottommost node of a document"}
{"comment_sentence_id": 4356, "class": "BatchNorm1d", "comment_sentence": "also by default, during training this layer keeps running estimates of its", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "also by default during training this layer keeps running estimates of its", "final_sentence": "also by default during training this layer keeps running estimates of its"}
{"comment_sentence_id": 1893, "class": "IntegerArray", "comment_sentence": "none", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 1671, "class": "CategoricalDtype", "comment_sentence": "2:00 AM", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "2 00 AM", "final_sentence": "2 00 AM"}
{"comment_sentence_id": 132, "class": "BaseCommand", "comment_sentence": "a boolean if true , the command prints a warning if the set of", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a boolean if true the command prints a warning if the set of", "final_sentence": "a boolean if true the command prints a warning if the set of"}
{"comment_sentence_id": 3085, "class": "Markup", "comment_sentence": "this implements the html interface that some frameworks", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this implements the html interface that some frameworks", "final_sentence": "this implements the html interface that some frameworks"}
{"comment_sentence_id": 2371, "class": "_FileInFile", "comment_sentence": "object.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 2053, "class": "PlotAccessor", "comment_sentence": "specify relative alignments for bar plot layout.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "specify relative alignments for bar plot layout", "final_sentence": "specify relative alignments for bar plot layout"}
{"comment_sentence_id": 4152, "class": "_OpNamespace", "comment_sentence": "1", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 2049, "class": "PlotAccessor", "comment_sentence": "colorbar bool, optional", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "colorbar bool optional", "final_sentence": "colorbar bool optional"}
{"comment_sentence_id": 21, "class": "Atomic", "comment_sentence": "savepoint, depending on whether a transaction is already in progress, and", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "savepoint depending on whether a transaction is already in progress and", "final_sentence": "savepoint depending on whether a transaction is already in progress and"}
{"comment_sentence_id": 5696, "class": "Unfold", "comment_sentence": "where math text spatial size is formed by the spatial dimensions", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "where math text spatial size is formed by the spatial dimensions", "final_sentence": "where math text spatial size is formed by the spatial dimensions"}
{"comment_sentence_id": 3192, "class": "MemcachedBytecodeCache", "comment_sentence": "the cache system.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the cache system", "final_sentence": "the cache system"}
{"comment_sentence_id": 4160, "class": "_OpNamespace", "comment_sentence": "torch^get operation , a function bound from c , and then in a similar", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "torch get operation a function bound from c and then in a similar", "final_sentence": "torch get operation a function bound from c and then in a similar"}
{"comment_sentence_id": 3534, "class": "ParseResults", "comment_sentence": "result month 12", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "result month 12", "final_sentence": "result month 12"}
{"comment_sentence_id": 5372, "class": "MultiLabelMarginLoss", "comment_sentence": "# for target y, only consider labels 3 and 0, not after label 1", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "for target y only consider labels 3 and 0 not after label 1", "final_sentence": "for target y only consider labels 3 and 0 not after label 1"}
{"comment_sentence_id": 2088, "class": "PlotAccessor", "comment_sentence": "if kind bar or barh , you can specify relative alignments", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "if kind bar or barh you can specify relative alignments", "final_sentence": "if kind bar or barh you can specify relative alignments"}
{"comment_sentence_id": 4368, "class": "BatchNorm1d", "comment_sentence": "update rule for running statistics here is", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "update rule for running statistics here is", "final_sentence": "update rule for running statistics here is"}
{"comment_sentence_id": 1650, "class": "CategoricalDtype", "comment_sentence": "whether or not this categorical is treated as a ordered categorical.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "whether or not this categorical is treated as a ordered categorical", "final_sentence": "whether or not this categorical is treated as a ordered categorical"}
{"comment_sentence_id": 3101, "class": "Markup", "comment_sentence": "markup em hello em &lt foo&gt", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "markup em hello em lt foo gt", "final_sentence": "markup em hello em lt foo gt"}
{"comment_sentence_id": 5252, "class": "LBFGS", "comment_sentence": "note", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 1703, "class": "CategoricalIndex", "comment_sentence": "index based on an underlying class categorical .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "index based on an underlying class categorical", "final_sentence": "index based on an underlying class categorical"}
{"comment_sentence_id": 3254, "class": "NotAny", "comment_sentence": "lookahead to disallow matching with the given parse expression.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "lookahead to disallow matching with the given parse expression", "final_sentence": "lookahead to disallow matching with the given parse expression"}
{"comment_sentence_id": 3520, "class": "ParseResults", "comment_sentence": "# parsestring returns a parseresults object", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "parsestring returns a parseresults object", "final_sentence": "parsestring returns a parseresults object"}
{"comment_sentence_id": 5444, "class": "OneHotCategorical", "comment_sentence": "attr probs and attr logits .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "attr probs and attr logits", "final_sentence": "attr probs and attr logits"}
{"comment_sentence_id": 1427, "class": "ConfigureMailboxes", "comment_sentence": "if an account is specified, the mailbox will be assigned to that account", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if an account is specified the mailbox will be assigned to that account", "final_sentence": "if an account is specified the mailbox will be assigned to that account"}
{"comment_sentence_id": 5712, "class": "Unfold", "comment_sentence": "spatial dimensions.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "spatial dimensions", "final_sentence": "spatial dimensions"}
{"comment_sentence_id": 5359, "class": "MultiLabelMarginLoss", "comment_sentence": "note attr size average", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "note attr size average", "final_sentence": "note attr size average"}
{"comment_sentence_id": 3531, "class": "ParseResults", "comment_sentence": "prints", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 3099, "class": "Markup", "comment_sentence": "markup em foo &amp bar em", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "markup em foo amp bar em", "final_sentence": "markup em foo amp bar em"}
{"comment_sentence_id": 2440, "class": "CaseInsensitiveDict", "comment_sentence": "a case insensitive dict like object.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a case insensitive dict like object", "final_sentence": "a case insensitive dict like object"}
{"comment_sentence_id": 518, "class": "MigrationGraph", "comment_sentence": "replacing migration, and repoint any dependencies that pointed to the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "replacing migration and repoint any dependencies that pointed to the", "final_sentence": "replacing migration and repoint any dependencies that pointed to the"}
{"comment_sentence_id": 574, "class": "MigrationQuestioner", "comment_sentence": "give the autodetector responses to questions it might have.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "give the autodetector responses to questions it might have", "final_sentence": "give the autodetector responses to questions it might have"}
{"comment_sentence_id": 25, "class": "Atomic", "comment_sentence": "ensure that some code runs within a transaction without creating overhead.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ensure that some code runs within a transaction without creating overhead", "final_sentence": "ensure that some code runs within a transaction without creating overhead"}
{"comment_sentence_id": 2408, "class": "Argument", "comment_sentence": "arguments are positional parameters to a command.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "arguments are positional parameters to a command", "final_sentence": "arguments are positional parameters to a command"}
{"comment_sentence_id": 1288, "class": "ConfigDict", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4144, "class": "_OpNamespace", "comment_sentence": "an op namespace to dynamically bind operators into python.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "an op namespace to dynamically bind operators into python", "final_sentence": "an op namespace to dynamically bind operators into python"}
{"comment_sentence_id": 1561, "class": "Base", "comment_sentence": "input data", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "input data", "final_sentence": "input data"}
{"comment_sentence_id": 108, "class": "BaseCommand", "comment_sentence": "calling the handle method with the parsed arguments any", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "calling the handle method with the parsed arguments any", "final_sentence": "calling the handle method with the parsed arguments any"}
{"comment_sentence_id": 3526, "class": "ParseResults", "comment_sentence": "test result month", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test result month", "final_sentence": "test result month"}
{"comment_sentence_id": 3297, "class": "NotMyLock", "comment_sentence": "except unlockerror", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "except unlockerror", "final_sentence": "except unlockerror"}
{"comment_sentence_id": 917, "class": "Audio", "comment_sentence": "data numpy array, list, unicode, str or bytes", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "data numpy array list unicode str or bytes", "final_sentence": "data numpy array list unicode str or bytes"}
{"comment_sentence_id": 2062, "class": "PlotAccessor", "comment_sentence": "yerr dataframe, series, array like, dict and str", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "yerr dataframe series array like dict and str", "final_sentence": "yerr dataframe series array like dict and str"}
{"comment_sentence_id": 4309, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 5,7,9", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "m nn adaptivemaxpool3d 5 7 9", "final_sentence": "m nn adaptivemaxpool3d 5 7 9"}
{"comment_sentence_id": 3082, "class": "Markup", "comment_sentence": "markup 42", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 2070, "class": "PlotAccessor", "comment_sentence": "include bool bool, default is false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "include bool bool default is false", "final_sentence": "include bool bool default is false"}
{"comment_sentence_id": 4214, "class": "Adadelta", "comment_sentence": "arguments", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 5466, "class": "Poisson", "comment_sentence": "math", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 2442, "class": "CaseInsensitiveDict", "comment_sentence": "mutablemapping as well as dict s copy .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "mutablemapping as well as dict s copy", "final_sentence": "mutablemapping as well as dict s copy"}
{"comment_sentence_id": 633, "class": "MultiValueField", "comment_sentence": "aggregate the logic of multiple fields.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "aggregate the logic of multiple fields", "final_sentence": "aggregate the logic of multiple fields"}
{"comment_sentence_id": 1176, "class": "UserMagics", "comment_sentence": "use this class to isolate the magics defined dynamically by the user into", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "use this class to isolate the magics defined dynamically by the user into", "final_sentence": "use this class to isolate the magics defined dynamically by the user into"}
{"comment_sentence_id": 1337, "class": "ConfigDict", "comment_sentence": "pot^rules potatoes", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "pot rules potatoes", "final_sentence": "pot rules potatoes"}
{"comment_sentence_id": 2361, "class": "_BZ2Proxy", "comment_sentence": "class which unlike gzip^gzipfile has no support for", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "class which unlike gzip gzipfile has no support for", "final_sentence": "class which unlike gzip gzipfile has no support for"}
{"comment_sentence_id": 5220, "class": "FisherSnedecor", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3073, "class": "Markup", "comment_sentence": "document, either because it was escaped or because it was marked", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "document either because it was escaped or because it was marked", "final_sentence": "document either because it was escaped or because it was marked"}
{"comment_sentence_id": 53, "class": "AtomicTests", "comment_sentence": "since the decorator syntax is converted into a context manager see the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "since the decorator syntax is converted into a context manager see the", "final_sentence": "since the decorator syntax is converted into a context manager see the"}
{"comment_sentence_id": 519, "class": "MigrationGraph", "comment_sentence": "replaced migrations to point to the replacing one.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "replaced migrations to point to the replacing one", "final_sentence": "replaced migrations to point to the replacing one"}
{"comment_sentence_id": 3523, "class": "ParseResults", "comment_sentence": "print %s %s % s, fn eval s", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "print s s s fn eval s", "final_sentence": "print s s s fn eval s"}
{"comment_sentence_id": 1445, "class": "Event", "comment_sentence": "actual interpretation and", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "actual interpretation and", "final_sentence": "actual interpretation and"}
{"comment_sentence_id": 3088, "class": "Markup", "comment_sentence": "output of that method, marking it safe.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "output of that method marking it safe", "final_sentence": "output of that method marking it safe"}
{"comment_sentence_id": 4470, "class": "BCEWithLogitsLoss", "comment_sentence": "where math n is the batch size.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "where math n is the batch size", "final_sentence": "where math n is the batch size"}
{"comment_sentence_id": 4246, "class": "Adam", "comment_sentence": "numerical stability default 1e 8", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "numerical stability default 1e 8", "final_sentence": "numerical stability default 1e 8"}
{"comment_sentence_id": 2069, "class": "PlotAccessor", "comment_sentence": "labels with right in the legend.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "labels with right in the legend", "final_sentence": "labels with right in the legend"}
{"comment_sentence_id": 1607, "class": "BooleanArray", "comment_sentence": "length 3, dtype boolean", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "length 3 dtype boolean", "final_sentence": "length 3 dtype boolean"}
{"comment_sentence_id": 2460, "class": "CaseInsensitiveDict", "comment_sentence": "operations are given keys that have equal ^lower s, the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "operations are given keys that have equal lower s the", "final_sentence": "operations are given keys that have equal lower s the"}
{"comment_sentence_id": 4469, "class": "BCEWithLogitsLoss", "comment_sentence": "1 y n cdot log 1 sigma x n right ,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "1 y n cdot log 1 sigma x n right", "final_sentence": "1 y n cdot log 1 sigma x n right"}
{"comment_sentence_id": 1577, "class": "BooleanArray", "comment_sentence": "booleanarray implements kleene logic sometimes called three value", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "booleanarray implements kleene logic sometimes called three value", "final_sentence": "booleanarray implements kleene logic sometimes called three value"}
{"comment_sentence_id": 19, "class": "Atomic", "comment_sentence": "decorated function in the instance itself, used as a context manager.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "decorated function in the instance itself used as a context manager", "final_sentence": "decorated function in the instance itself used as a context manager"}
{"comment_sentence_id": 4146, "class": "_OpNamespace", "comment_sentence": "to", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "to", "final_sentence": "to"}
{"comment_sentence_id": 1300, "class": "ConfigDict", "comment_sentence": "sorted pot^keys , sorted pot^values", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "sorted pot keys sorted pot values", "final_sentence": "sorted pot keys sorted pot values"}
{"comment_sentence_id": 5300, "class": "Module", "comment_sentence": "def forward self, x", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "def forward self x", "final_sentence": "def forward self x"}
{"comment_sentence_id": 3273, "class": "NotAny", "comment_sentence": "integer word nums char .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "integer word nums char", "final_sentence": "integer word nums char"}
{"comment_sentence_id": 3186, "class": "MemcachedBytecodeCache", "comment_sentence": "method get key", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "method get key", "final_sentence": "method get key"}
{"comment_sentence_id": 1883, "class": "IntegerArray", "comment_sentence": "func pandas^array with one of the integer dtypes see examples .", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "func pandas array with one of the integer dtypes see examples", "final_sentence": "func pandas array with one of the integer dtypes see examples"}
{"comment_sentence_id": 4388, "class": "BatchNorm1d", "comment_sentence": "module tracks the running mean and variance, and when set to false ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "module tracks the running mean and variance and when set to false", "final_sentence": "module tracks the running mean and variance and when set to false"}
{"comment_sentence_id": 5689, "class": "Unfold", "comment_sentence": "math c times prod text kernel size is the total number of values", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math c times prod text kernel size is the total number of values", "final_sentence": "math c times prod text kernel size is the total number of values"}
{"comment_sentence_id": 1108, "class": "Magics", "comment_sentence": "vs. %cd .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "vs cd", "final_sentence": "vs cd"}
{"comment_sentence_id": 1312, "class": "ConfigDict", "comment_sentence": ", vodka", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "vodka", "final_sentence": "vodka"}
{"comment_sentence_id": 5426, "class": "NetModifier", "comment_sentence": "an abstraction class for supporting modifying a generated net.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "an abstraction class for supporting modifying a generated net", "final_sentence": "an abstraction class for supporting modifying a generated net"}
{"comment_sentence_id": 3476, "class": "PacifyFlushWrapper", "comment_sentence": "so as to have minimal impact on any", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "so as to have minimal impact on any", "final_sentence": "so as to have minimal impact on any"}
{"comment_sentence_id": 3178, "class": "MemcachedBytecodeCache", "comment_sentence": "method set key, value , timeout", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "method set key value timeout", "final_sentence": "method set key value timeout"}
{"comment_sentence_id": 4466, "class": "BCEWithLogitsLoss", "comment_sentence": "math", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 3472, "class": "PacifyFlushWrapper", "comment_sentence": "from ^flush being called on broken pipe during the shutdown final gc", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "from flush being called on broken pipe during the shutdown final gc", "final_sentence": "from flush being called on broken pipe during the shutdown final gc"}
{"comment_sentence_id": 134, "class": "BaseCommand", "comment_sentence": "requires system checks", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "requires system checks", "final_sentence": "requires system checks"}
{"comment_sentence_id": 1554, "class": "AccessorCallableDocumenter", "comment_sentence": "callable accessors like series^plot", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "callable accessors like series plot", "final_sentence": "callable accessors like series plot"}
{"comment_sentence_id": 1316, "class": "ConfigDict", "comment_sentence": "pot colors", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "pot colors", "final_sentence": "pot colors"}
{"comment_sentence_id": 1644, "class": "CategoricalDtype", "comment_sentence": "type for categorical data with the categories and orderedness.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "type for categorical data with the categories and orderedness", "final_sentence": "type for categorical data with the categories and orderedness"}
{"comment_sentence_id": 1106, "class": "Magics", "comment_sentence": "this can make some functions easier to type, eg%cd .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this can make some functions easier to type eg cd", "final_sentence": "this can make some functions easier to type eg cd"}
{"comment_sentence_id": 2572, "class": "Environment", "comment_sentence": "they are not shared and if no template was loaded so far.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "they are not shared and if no template was loaded so far", "final_sentence": "they are not shared and if no template was loaded so far"}
{"comment_sentence_id": 5209, "class": "ExceptionWrapper", "comment_sentence": "wraps an exception plus traceback to communicate across threads", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "wraps an exception plus traceback to communicate across threads", "final_sentence": "wraps an exception plus traceback to communicate across threads"}
{"comment_sentence_id": 5212, "class": "ExternalInitializer", "comment_sentence": "the initializer, but rather provided in the workspace when param init net is", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the initializer but rather provided in the workspace when param init net is", "final_sentence": "the initializer but rather provided in the workspace when param init net is"}
{"comment_sentence_id": 550, "class": "MigrationLoader", "comment_sentence": "if all the migrations they replace are either unapplied or missing from", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "if all the migrations they replace are either unapplied or missing from", "final_sentence": "if all the migrations they replace are either unapplied or missing from"}
{"comment_sentence_id": 3340, "class": "omdict", "comment_sentence": "iterallitems , iterallkeys , iterallvalues , iterlists ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "iterallitems iterallkeys iterallvalues iterlists", "final_sentence": "iterallitems iterallkeys iterallvalues iterlists"}
{"comment_sentence_id": 3397, "class": "Option", "comment_sentence": "normally, environment variables", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "normally environment variables", "final_sentence": "normally environment variables"}
{"comment_sentence_id": 1594, "class": "BooleanArray", "comment_sentence": "copy bool, default false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 520, "class": "MigrationGraph", "comment_sentence": "a node should be a tuple app path, migration name .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a node should be a tuple app path migration name", "final_sentence": "a node should be a tuple app path migration name"}
{"comment_sentence_id": 5254, "class": "LBFGS", "comment_sentence": "param bytes history size 1 bytes .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "param bytes history size 1 bytes", "final_sentence": "param bytes history size 1 bytes"}
{"comment_sentence_id": 4215, "class": "Adadelta", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 3325, "class": "omdict", "comment_sentence": "optional parameters have been added to some dict methods, but because the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "optional parameters have been added to some dict methods but because the", "final_sentence": "optional parameters have been added to some dict methods but because the"}
{"comment_sentence_id": 4254, "class": "Adam", "comment_sentence": "https openreview^net forum?id ryqu7f rz", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "https openreview net forum id ryqu7f rz", "final_sentence": "https openreview net forum id ryqu7f rz"}
{"comment_sentence_id": 4361, "class": "BatchNorm1d", "comment_sentence": "if attr track running stats is set to false , this layer then does not", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "if attr track running stats is set to false this layer then does not", "final_sentence": "if attr track running stats is set to false this layer then does not"}
{"comment_sentence_id": 2211, "class": "SelectNSeries", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 268, "class": "Client", "comment_sentence": "client objects are stateful they will retain cookie and", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "client objects are stateful they will retain cookie and", "final_sentence": "client objects are stateful they will retain cookie and"}
{"comment_sentence_id": 3078, "class": "Markup", "comment_sentence": "meth escape class method instead.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "meth escape class method instead", "final_sentence": "meth escape class method instead"}
{"comment_sentence_id": 1314, "class": "ConfigDict", "comment_sentence": "0", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 1302, "class": "ConfigDict", "comment_sentence": "pot potatoes pot liquids vodka 123", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "pot potatoes pot liquids vodka 123", "final_sentence": "pot potatoes pot liquids vodka 123"}
{"comment_sentence_id": 84, "class": "BadSignature", "comment_sentence": "signature does not match.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "signature does not match", "final_sentence": "signature does not match"}
{"comment_sentence_id": 67, "class": "AutoFieldMeta", "comment_sentence": "automatically generated field as a subclass of autofield.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "automatically generated field as a subclass of autofield", "final_sentence": "automatically generated field as a subclass of autofield"}
{"comment_sentence_id": 1711, "class": "CategoricalIndex", "comment_sentence": "data array like 1 dimensional", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "data array like 1 dimensional", "final_sentence": "data array like 1 dimensional"}
{"comment_sentence_id": 1292, "class": "ConfigDict", "comment_sentence": ", int, 99 ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "int 99", "final_sentence": "int 99"}
{"comment_sentence_id": 4163, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "torch ops my namespace my op", "final_sentence": "torch ops my namespace my op"}
{"comment_sentence_id": 4112, "class": "TokenStreamIterator", "comment_sentence": "until the eof token is reached.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "until the eof token is reached", "final_sentence": "until the eof token is reached"}
{"comment_sentence_id": 1310, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 5958, "class": "Response", "comment_sentence": "server s response to an http request.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "server s response to an http request", "final_sentence": "server s response to an http request"}
{"comment_sentence_id": 5428, "class": "NetModifier", "comment_sentence": "related operators are added to the net.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "related operators are added to the net", "final_sentence": "related operators are added to the net"}
{"comment_sentence_id": 1296, "class": "ConfigDict", "comment_sentence": ",", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 4222, "class": "Adadelta", "comment_sentence": "to the parameters default 10", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "to the parameters default 10", "final_sentence": "to the parameters default 10"}
{"comment_sentence_id": 104, "class": "BaseCommand", "comment_sentence": "pythonpath , and then calls the execute method,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "pythonpath and then calls the execute method", "final_sentence": "pythonpath and then calls the execute method"}
{"comment_sentence_id": 1646, "class": "CategoricalDtype", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 589, "class": "ModelSignal", "comment_sentence": "of the app label^modelname form.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "of the app label modelname form", "final_sentence": "of the app label modelname form"}
{"comment_sentence_id": 1284, "class": "ConfigDict", "comment_sentence": "configuration data can be nested by including a dictionary of further", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "configuration data can be nested by including a dictionary of further", "final_sentence": "configuration data can be nested by including a dictionary of further"}
{"comment_sentence_id": 3424, "class": "Option", "comment_sentence": "variable in case a prefix is defined on the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "variable in case a prefix is defined on the", "final_sentence": "variable in case a prefix is defined on the"}
{"comment_sentence_id": 2083, "class": "PlotAccessor", "comment_sentence": "class matplotlib^axes.axes or numpy^ndarray of them", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "class matplotlib axes axes or numpy ndarray of them", "final_sentence": "class matplotlib axes axes or numpy ndarray of them"}
{"comment_sentence_id": 3161, "class": "MemcachedBytecodeCache", "comment_sentence": "this class implements a bytecode cache that uses a memcache cache for", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this class implements a bytecode cache that uses a memcache cache for", "final_sentence": "this class implements a bytecode cache that uses a memcache cache for"}
{"comment_sentence_id": 2569, "class": "Environment", "comment_sentence": "important shared variables like configuration, filters, tests,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "important shared variables like configuration filters tests", "final_sentence": "important shared variables like configuration filters tests"}
{"comment_sentence_id": 609, "class": "MultiValueDict", "comment_sentence": "nonexistent", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "nonexistent", "final_sentence": "nonexistent"}
{"comment_sentence_id": 1649, "class": "CategoricalDtype", "comment_sentence": "ordered bool or none, default false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ordered bool or none default false", "final_sentence": "ordered bool or none default false"}
{"comment_sentence_id": 3323, "class": "omdict", "comment_sentence": "getitem , setitem , delitem , contains ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "getitem setitem delitem contains", "final_sentence": "getitem setitem delitem contains"}
{"comment_sentence_id": 4362, "class": "BatchNorm1d", "comment_sentence": "keep running estimates, and batch statistics are instead used during", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "keep running estimates and batch statistics are instead used during", "final_sentence": "keep running estimates and batch statistics are instead used during"}
{"comment_sentence_id": 3267, "class": "NotAny", "comment_sentence": "boolean term optional not ident", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "boolean term optional not ident", "final_sentence": "boolean term optional not ident"}
{"comment_sentence_id": 844, "class": "TestRouter", "comment_sentence": "routes to the other database if the model name starts with other .", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "routes to the other database if the model name starts with other", "final_sentence": "routes to the other database if the model name starts with other"}
{"comment_sentence_id": 1112, "class": "Magics", "comment_sentence": "use the method decorators @line magic and @cell magic to decorate", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "use the method decorators @line magic and @cell magic to decorate", "final_sentence": "use the method decorators @line magic and @cell magic to decorate"}
{"comment_sentence_id": 5376, "class": "MultiLabelMarginLoss", "comment_sentence": "tensor 08500", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tensor 08500", "final_sentence": "tensor 08500"}
{"comment_sentence_id": 3261, "class": "NotAny", "comment_sentence": "a null token list.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a null token list", "final_sentence": "a null token list"}
{"comment_sentence_id": 3475, "class": "PacifyFlushWrapper", "comment_sentence": "sys^stdout and sys^stderr .", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "sys stdout and sys stderr", "final_sentence": "sys stdout and sys stderr"}
{"comment_sentence_id": 4118, "class": "TreeBuilder", "comment_sentence": "elementclass the class to use for html elements", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "elementclass the class to use for html elements", "final_sentence": "elementclass the class to use for html elements"}
{"comment_sentence_id": 51, "class": "AtomicTests", "comment_sentence": "the tests make assertions on internal attributes because there isn t a", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "the tests make assertions on internal attributes because there isn t a", "final_sentence": "the tests make assertions on internal attributes because there isn t a"}
{"comment_sentence_id": 5299, "class": "Module", "comment_sentence": "self^conv2 nn^conv2d 20, 20, 5", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "self conv2 nn conv2d 20 20 5", "final_sentence": "self conv2 nn conv2d 20 20 5"}
{"comment_sentence_id": 5340, "class": "MultiLabelMarginLoss", "comment_sentence": "note that for", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "note that for", "final_sentence": "note that for"}
{"comment_sentence_id": 2435, "class": "CallBlock", "comment_sentence": "call is called with", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "call is called with", "final_sentence": "call is called with"}
{"comment_sentence_id": 1596, "class": "BooleanArray", "comment_sentence": "attributes", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 3416, "class": "Option", "comment_sentence": "param multiple if this is set to true then the argument is accepted", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "param multiple if this is set to true then the argument is accepted", "final_sentence": "param multiple if this is set to true then the argument is accepted"}
{"comment_sentence_id": 3250, "class": "Node", "comment_sentence": "represents an item in the tree", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "represents an item in the tree", "final_sentence": "represents an item in the tree"}
{"comment_sentence_id": 5464, "class": "Poisson", "comment_sentence": "creates a poisson distribution parameterized by attr rate , the rate parameter.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter", "final_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter"}
{"comment_sentence_id": 2418, "class": "BaseCommand_", "comment_sentence": "a cli command.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a cli command", "final_sentence": "a cli command"}
{"comment_sentence_id": 1116, "class": "Magics", "comment_sentence": "initialization.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "initialization", "final_sentence": "initialization"}
{"comment_sentence_id": 1578, "class": "BooleanArray", "comment_sentence": "logic for logical operations.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "logic for logical operations", "final_sentence": "logic for logical operations"}
{"comment_sentence_id": 1339, "class": "ConfigDict", "comment_sentence": ", type int , 0", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "type int 0", "final_sentence": "type int 0"}
{"comment_sentence_id": 5349, "class": "MultiLabelMarginLoss", "comment_sentence": "losses are averaged or summed over observations for each minibatch depending", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "losses are averaged or summed over observations for each minibatch depending", "final_sentence": "losses are averaged or summed over observations for each minibatch depending"}
{"comment_sentence_id": 5441, "class": "OneHotCategorical", "comment_sentence": "note attr probs must be non negative, finite and have a non zero sum,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "note attr probs must be non negative finite and have a non zero sum", "final_sentence": "note attr probs must be non negative finite and have a non zero sum"}
{"comment_sentence_id": 5337, "class": "MultiLabelMarginLoss", "comment_sentence": "size average bool, optional deprecated see attr reduction .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "size average bool optional deprecated see attr reduction", "final_sentence": "size average bool optional deprecated see attr reduction"}
{"comment_sentence_id": 2444, "class": "CaseInsensitiveDict", "comment_sentence": "provides lower items .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "provides lower items", "final_sentence": "provides lower items"}
{"comment_sentence_id": 593, "class": "MultiPartParser", "comment_sentence": "multivaluedict^parse reads the input stream in chunk size chunks", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "multivaluedict parse reads the input stream in chunk size chunks", "final_sentence": "multivaluedict parse reads the input stream in chunk size chunks"}
{"comment_sentence_id": 2568, "class": "Environment", "comment_sentence": "it contains", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "it contains", "final_sentence": "it contains"}
{"comment_sentence_id": 5374, "class": "MultiLabelMarginLoss", "comment_sentence": "loss x, y", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "loss x y", "final_sentence": "loss x y"}
{"comment_sentence_id": 782, "class": "SessionStore", "comment_sentence": "a database session store, that handles updating the account id column", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "a database session store that handles updating the account id column", "final_sentence": "a database session store that handles updating the account id column"}
{"comment_sentence_id": 544, "class": "MigrationLoader", "comment_sentence": "read the python files, looking for a class called migration, which should", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "read the python files looking for a class called migration which should", "final_sentence": "read the python files looking for a class called migration which should"}
{"comment_sentence_id": 1298, "class": "ConfigDict", "comment_sentence": "x x , str, , ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "x x str", "final_sentence": "x x str"}
{"comment_sentence_id": 3176, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface for the client passed to the constructor is this", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the minimal interface for the client passed to the constructor is this", "final_sentence": "the minimal interface for the client passed to the constructor is this"}
{"comment_sentence_id": 4374, "class": "BatchNorm1d", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 3226, "class": "MethodDispatcher", "comment_sentence": "dict with 2 special properties", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "dict with 2 special properties", "final_sentence": "dict with 2 special properties"}
{"comment_sentence_id": 5351, "class": "MultiLabelMarginLoss", "comment_sentence": "when attr reduce is false , returns a loss per", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "when attr reduce is false returns a loss per", "final_sentence": "when attr reduce is false returns a loss per"}
{"comment_sentence_id": 1101, "class": "Magics", "comment_sentence": "base class for implementing magic functions.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "base class for implementing magic functions", "final_sentence": "base class for implementing magic functions"}
{"comment_sentence_id": 4213, "class": "Adadelta", "comment_sentence": "it has been proposed in adadelta an adaptive learning rate method .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "it has been proposed in adadelta an adaptive learning rate method", "final_sentence": "it has been proposed in adadelta an adaptive learning rate method"}
{"comment_sentence_id": 4400, "class": "BatchNorm1d", "comment_sentence": "input torch^randn 20, 100", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "input torch randn 20 100", "final_sentence": "input torch randn 20 100"}
{"comment_sentence_id": 4150, "class": "_OpNamespace", "comment_sentence": "instead, the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "instead the", "final_sentence": "instead the"}
{"comment_sentence_id": 5297, "class": "Module", "comment_sentence": "init", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "init", "final_sentence": "init"}
{"comment_sentence_id": 2422, "class": "Bucket", "comment_sentence": "buckets are used to store the bytecode for one template.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "buckets are used to store the bytecode for one template", "final_sentence": "buckets are used to store the bytecode for one template"}
{"comment_sentence_id": 1114, "class": "Magics", "comment_sentence": "use the class decorator @magics class to ensure that the magic", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "use the class decorator @magics class to ensure that the magic", "final_sentence": "use the class decorator @magics class to ensure that the magic"}
{"comment_sentence_id": 1563, "class": "Base", "comment_sentence": "get kwargs from breaks to the expected format.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "get kwargs from breaks to the expected format", "final_sentence": "get kwargs from breaks to the expected format"}
{"comment_sentence_id": 611, "class": "MultiValueDict", "comment_sentence": "this class exists to solve the irritating problem raised by cgi^parse qs,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "this class exists to solve the irritating problem raised by cgi parse qs", "final_sentence": "this class exists to solve the irritating problem raised by cgi parse qs"}
{"comment_sentence_id": 5936, "class": "PreparedRequest", "comment_sentence": "usage", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 2830, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 3536, "class": "ParseResults", "comment_sentence": "month in result true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "month in result true", "final_sentence": "month in result true"}
{"comment_sentence_id": 4376, "class": "BatchNorm1d", "comment_sentence": "math n, c, l or math l from input of size math n, l", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math n c l or math l from input of size math n l", "final_sentence": "math n c l or math l from input of size math n l"}
{"comment_sentence_id": 120, "class": "BaseCommand", "comment_sentence": "specialized methods as needed.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "specialized methods as needed", "final_sentence": "specialized methods as needed"}
{"comment_sentence_id": 100, "class": "BaseCommand", "comment_sentence": "2", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 128, "class": "BaseCommand", "comment_sentence": "wrapped with begin and commit .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "wrapped with begin and commit", "final_sentence": "wrapped with begin and commit"}
{"comment_sentence_id": 1097, "class": "LazyEvaluate", "comment_sentence": "this is used for formatting strings with values that need to be updated", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this is used for formatting strings with values that need to be updated", "final_sentence": "this is used for formatting strings with values that need to be updated"}
{"comment_sentence_id": 583, "class": "MigrationWriter", "comment_sentence": "of the migration file from it.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "of the migration file from it", "final_sentence": "of the migration file from it"}
{"comment_sentence_id": 1598, "class": "BooleanArray", "comment_sentence": "methods", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 548, "class": "MigrationLoader", "comment_sentence": "some migrations will be marked as replacing another set of migrations.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "some migrations will be marked as replacing another set of migrations", "final_sentence": "some migrations will be marked as replacing another set of migrations"}
{"comment_sentence_id": 3517, "class": "ParseResults", "comment_sentence": "integer^setresultsname day", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "integer setresultsname day", "final_sentence": "integer setresultsname day"}
{"comment_sentence_id": 1723, "class": "CategoricalIndex", "comment_sentence": "if not given here or in dtype , the resulting", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if not given here or in dtype the resulting", "final_sentence": "if not given here or in dtype the resulting"}
{"comment_sentence_id": 349, "class": "FakePayload", "comment_sentence": "that wouldn t work in real life.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "that wouldn t work in real life", "final_sentence": "that wouldn t work in real life"}
{"comment_sentence_id": 1143, "class": "Struct", "comment_sentence": "this dict subclass has a a few extra features", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "this dict subclass has a a few extra features", "final_sentence": "this dict subclass has a a few extra features"}
{"comment_sentence_id": 92, "class": "BaseCommand", "comment_sentence": "response if you don t need to change any of that behavior,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "response if you don t need to change any of that behavior", "final_sentence": "response if you don t need to change any of that behavior"}
{"comment_sentence_id": 1592, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array indicating missing values true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a 1 d boolean dtype array indicating missing values true", "final_sentence": "a 1 d boolean dtype array indicating missing values true"}
{"comment_sentence_id": 4119, "class": "TreeBuilder", "comment_sentence": "commentclass the class to use for comments", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "commentclass the class to use for comments", "final_sentence": "commentclass the class to use for comments"}
{"comment_sentence_id": 1064, "class": "HelpEnd", "comment_sentence": "transformer for help syntax obj?", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "transformer for help syntax obj", "final_sentence": "transformer for help syntax obj"}
{"comment_sentence_id": 1588, "class": "BooleanArray", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 1308, "class": "ConfigDict", "comment_sentence": "99", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "99", "final_sentence": "99"}
{"comment_sentence_id": 5264, "class": "LBFGS", "comment_sentence": "default 1e 5 .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default 1e 5", "final_sentence": "default 1e 5"}
{"comment_sentence_id": 4358, "class": "BatchNorm1d", "comment_sentence": "evaluation.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "evaluation", "final_sentence": "evaluation"}
{"comment_sentence_id": 3528, "class": "ParseResults", "comment_sentence": "test month in result", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test month in result", "final_sentence": "test month in result"}
{"comment_sentence_id": 4394, "class": "BatchNorm1d", "comment_sentence": "output math n, c or math n, c, l same shape as input", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "output math n c or math n c l same shape as input", "final_sentence": "output math n c or math n c l same shape as input"}
{"comment_sentence_id": 2447, "class": "CaseInsensitiveDict", "comment_sentence": "case of the last key to be set, and iter instance ,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "case of the last key to be set and iter instance", "final_sentence": "case of the last key to be set and iter instance"}
{"comment_sentence_id": 4250, "class": "Adam", "comment_sentence": "default false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default false", "final_sentence": "default false"}
{"comment_sentence_id": 5301, "class": "Module", "comment_sentence": "x f^relu self^conv1 x", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "x f relu self conv1 x", "final_sentence": "x f relu self conv1 x"}
{"comment_sentence_id": 5258, "class": "LBFGS", "comment_sentence": "lr float learning rate default 1", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "lr float learning rate default 1", "final_sentence": "lr float learning rate default 1"}
{"comment_sentence_id": 1569, "class": "BaseInterfaceTests", "comment_sentence": "tests that the basic interface is satisfied.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tests that the basic interface is satisfied", "final_sentence": "tests that the basic interface is satisfied"}
{"comment_sentence_id": 18, "class": "Atomic", "comment_sentence": "when it s used as a decorator, call wraps the execution of the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "when it s used as a decorator call wraps the execution of the", "final_sentence": "when it s used as a decorator call wraps the execution of the"}
{"comment_sentence_id": 4386, "class": "BatchNorm1d", "comment_sentence": "default true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 1304, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 4248, "class": "Adam", "comment_sentence": "amsgrad boolean, optional whether to use the amsgrad variant of this", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "amsgrad boolean optional whether to use the amsgrad variant of this", "final_sentence": "amsgrad boolean optional whether to use the amsgrad variant of this"}
{"comment_sentence_id": 2424, "class": "Bucket", "comment_sentence": "and initialized by the bytecode cache and passed to the loading functions.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "and initialized by the bytecode cache and passed to the loading functions", "final_sentence": "and initialized by the bytecode cache and passed to the loading functions"}
{"comment_sentence_id": 5256, "class": "LBFGS", "comment_sentence": "try reducing the history size, or use a different algorithm.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "try reducing the history size or use a different algorithm", "final_sentence": "try reducing the history size or use a different algorithm"}
{"comment_sentence_id": 3190, "class": "MemcachedBytecodeCache", "comment_sentence": "the other arguments to the constructor are the prefix for all keys that", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the other arguments to the constructor are the prefix for all keys that", "final_sentence": "the other arguments to the constructor are the prefix for all keys that"}
{"comment_sentence_id": 610, "class": "MultiValueDict", "comment_sentence": "d^setlist lastname , holovaty , willison", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "d setlist lastname holovaty willison", "final_sentence": "d setlist lastname holovaty willison"}
{"comment_sentence_id": 3329, "class": "omdict", "comment_sentence": "items , values , iteritems , itervalues", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "items values iteritems itervalues", "final_sentence": "items values iteritems itervalues"}
{"comment_sentence_id": 3473, "class": "PacifyFlushWrapper", "comment_sentence": "of the python interpreter.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "of the python interpreter", "final_sentence": "of the python interpreter"}
{"comment_sentence_id": 112, "class": "BaseCommand", "comment_sentence": "4", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "4", "final_sentence": "4"}
{"comment_sentence_id": 1319, "class": "ConfigDict", "comment_sentence": "0", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 554, "class": "MigrationLoader", "comment_sentence": "this does mean that this class must also talk to the database as well as", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this does mean that this class must also talk to the database as well as", "final_sentence": "this does mean that this class must also talk to the database as well as"}
{"comment_sentence_id": 3188, "class": "MemcachedBytecodeCache", "comment_sentence": "if the item does not", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if the item does not", "final_sentence": "if the item does not"}
{"comment_sentence_id": 1078, "class": "InteractiveShellApp", "comment_sentence": "as part of configuring a shell environment.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "as part of configuring a shell environment", "final_sentence": "as part of configuring a shell environment"}
{"comment_sentence_id": 2357, "class": "_BZ2Proxy", "comment_sentence": "small proxy class that enables external file object", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "small proxy class that enables external file object", "final_sentence": "small proxy class that enables external file object"}
{"comment_sentence_id": 4382, "class": "BatchNorm1d", "comment_sentence": "ie simple average .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ie simple average", "final_sentence": "ie simple average"}
{"comment_sentence_id": 5473, "class": "Poisson", "comment_sentence": "rate number, tensor the rate parameter", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "rate number tensor the rate parameter", "final_sentence": "rate number tensor the rate parameter"}
{"comment_sentence_id": 3541, "class": "ParseResults", "comment_sentence": "year 1999", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "year 1999", "final_sentence": "year 1999"}
{"comment_sentence_id": 3222, "class": "MemoizedZipManifests", "comment_sentence": "memoized zipfile manifests.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "memoized zipfile manifests", "final_sentence": "memoized zipfile manifests"}
{"comment_sentence_id": 1562, "class": "Base", "comment_sentence": "to be supplied in breaks format, then converted by the subclass method", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "to be supplied in breaks format then converted by the subclass method", "final_sentence": "to be supplied in breaks format then converted by the subclass method"}
{"comment_sentence_id": 2213, "class": "SelectNSeries", "comment_sentence": "n int", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "n int", "final_sentence": "n int"}
{"comment_sentence_id": 4893, "class": "CyclicLR", "comment_sentence": "triangular a basic triangular cycle without amplitude scaling.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "triangular a basic triangular cycle without amplitude scaling", "final_sentence": "triangular a basic triangular cycle without amplitude scaling"}
{"comment_sentence_id": 4136, "class": "UnlockError", "comment_sentence": "pass", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 4468, "class": "BCEWithLogitsLoss", "comment_sentence": "l n w n left y n cdot log sigma x n", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "l n w n left y n cdot log sigma x n", "final_sentence": "l n w n left y n cdot log sigma x n"}
{"comment_sentence_id": 88, "class": "BaseCommand", "comment_sentence": "the base class from which all management commands ultimately", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the base class from which all management commands ultimately", "final_sentence": "the base class from which all management commands ultimately"}
{"comment_sentence_id": 3182, "class": "MemcachedBytecodeCache", "comment_sentence": "if timeout is not provided", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if timeout is not provided", "final_sentence": "if timeout is not provided"}
{"comment_sentence_id": 3076, "class": "Markup", "comment_sentence": "it to mark it safe without escaping.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "it to mark it safe without escaping", "final_sentence": "it to mark it safe without escaping"}
{"comment_sentence_id": 1133, "class": "MyFrame", "comment_sentence": "it just shows a few controls on a wxpanel,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "it just shows a few controls on a wxpanel", "final_sentence": "it just shows a few controls on a wxpanel"}
{"comment_sentence_id": 608, "class": "MultiValueDict", "comment_sentence": "d^get lastname , nonexistent", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "d get lastname nonexistent", "final_sentence": "d get lastname nonexistent"}
{"comment_sentence_id": 4132, "class": "UnlockError", "comment_sentence": "base class for errors arising from attempts to release the lock.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "base class for errors arising from attempts to release the lock", "final_sentence": "base class for errors arising from attempts to release the lock"}
{"comment_sentence_id": 4467, "class": "BCEWithLogitsLoss", "comment_sentence": "ell x, y l l 1, dots,l n ^ top, quad", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "ell x y l l 1 dots l n top quad", "final_sentence": "ell x y l l 1 dots l n top quad"}
{"comment_sentence_id": 3516, "class": "ParseResults", "comment_sentence": "integer^setresultsname month", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "integer setresultsname month", "final_sentence": "integer setresultsname month"}
{"comment_sentence_id": 1059, "class": "GeoJSON", "comment_sentence": "not an already serialized json string.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "not an already serialized json string", "final_sentence": "not an already serialized json string"}
{"comment_sentence_id": 1574, "class": "BooleanArray", "comment_sentence": "this is a pandas extension array for boolean data, under the hood", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "this is a pandas extension array for boolean data under the hood", "final_sentence": "this is a pandas extension array for boolean data under the hood"}
{"comment_sentence_id": 4713, "class": "Conv3d", "comment_sentence": "math", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 3490, "class": "PackageIndex", "comment_sentence": "represents a package index and provides easier access to endpoints", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "represents a package index and provides easier access to endpoints", "final_sentence": "represents a package index and provides easier access to endpoints"}
{"comment_sentence_id": 1068, "class": "HistoryAccessor", "comment_sentence": "access the history database without adding to it.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "access the history database without adding to it", "final_sentence": "access the history database without adding to it"}
{"comment_sentence_id": 3265, "class": "NotAny", "comment_sentence": "# take care not to mistake keywords for identifiers", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "take care not to mistake keywords for identifiers", "final_sentence": "take care not to mistake keywords for identifiers"}
{"comment_sentence_id": 2359, "class": "_BZ2Proxy", "comment_sentence": "this is actually", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this is actually", "final_sentence": "this is actually"}
{"comment_sentence_id": 1902, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 1158, "class": "TBTools", "comment_sentence": "basic tools used by all traceback printer classes.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "basic tools used by all traceback printer classes", "final_sentence": "basic tools used by all traceback printer classes"}
{"comment_sentence_id": 3510, "class": "ParseResults", "comment_sentence": "by list index results 0 , results 1 , etc", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "by list index results 0 results 1 etc", "final_sentence": "by list index results 0 results 1 etc"}
{"comment_sentence_id": 5267, "class": "LBFGS", "comment_sentence": "history size int update history size default 100 .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "history size int update history size default 100", "final_sentence": "history size int update history size default 100"}
{"comment_sentence_id": 258, "class": "ChunkIter", "comment_sentence": "constructor, yield chunks of read operations from that object.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "constructor yield chunks of read operations from that object", "final_sentence": "constructor yield chunks of read operations from that object"}
{"comment_sentence_id": 5261, "class": "LBFGS", "comment_sentence": "max eval int maximal number of function evaluations per optimization", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "max eval int maximal number of function evaluations per optimization", "final_sentence": "max eval int maximal number of function evaluations per optimization"}
{"comment_sentence_id": 3389, "class": "Option", "comment_sentence": "help page.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "help page", "final_sentence": "help page"}
{"comment_sentence_id": 1290, "class": "ConfigDict", "comment_sentence": ", int , 0 ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "int 0", "final_sentence": "int 0"}
{"comment_sentence_id": 5302, "class": "Module", "comment_sentence": "return f^relu self^conv2 x", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "return f relu self conv2 x", "final_sentence": "return f relu self conv2 x"}
{"comment_sentence_id": 4318, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 1573, "class": "BooleanArray", "comment_sentence": "array of boolean true false data with missing values.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "array of boolean true false data with missing values", "final_sentence": "array of boolean true false data with missing values"}
{"comment_sentence_id": 1161, "class": "TermColors", "comment_sentence": "this class defines the escape sequences for all the standard ansi?", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this class defines the escape sequences for all the standard ansi", "final_sentence": "this class defines the escape sequences for all the standard ansi"}
{"comment_sentence_id": 4219, "class": "Adadelta", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 5691, "class": "Unfold", "comment_sentence": "locations each containing a math c channeled vector , and math l is", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "locations each containing a math c channeled vector and math l is", "final_sentence": "locations each containing a math c channeled vector and math l is"}
{"comment_sentence_id": 1163, "class": "TermColors", "comment_sentence": "also defines a nocolor escape which is just the null", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "also defines a nocolor escape which is just the null", "final_sentence": "also defines a nocolor escape which is just the null"}
{"comment_sentence_id": 1110, "class": "Magics", "comment_sentence": "classes providing magic functions need to subclass this class, and they", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "classes providing magic functions need to subclass this class and they", "final_sentence": "classes providing magic functions need to subclass this class and they"}
{"comment_sentence_id": 5353, "class": "MultiLabelMarginLoss", "comment_sentence": "default true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 1600, "class": "BooleanArray", "comment_sentence": "returns", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 102, "class": "BaseCommand", "comment_sentence": "an argumentparser for the arguments, parses them, performs", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "an argumentparser for the arguments parses them performs", "final_sentence": "an argumentparser for the arguments parses them performs"}
{"comment_sentence_id": 3402, "class": "Option", "comment_sentence": "option name capitalized.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "option name capitalized", "final_sentence": "option name capitalized"}
{"comment_sentence_id": 3295, "class": "NotMyLock", "comment_sentence": "try", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "try", "final_sentence": "try"}
{"comment_sentence_id": 91, "class": "BaseCommand", "comment_sentence": "parse the command line arguments and work out what code to call in", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "parse the command line arguments and work out what code to call in", "final_sentence": "parse the command line arguments and work out what code to call in"}
{"comment_sentence_id": 4303, "class": "AdaptiveMaxPool3d", "comment_sentence": "be the same as that of the input.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "be the same as that of the input", "final_sentence": "be the same as that of the input"}
{"comment_sentence_id": 1341, "class": "ConfigDict", "comment_sentence": "TRUE", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 1895, "class": "IntegerArray", "comment_sentence": "none", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 1055, "class": "DummyMod", "comment_sentence": "a namespace must be assigned to the module s dict .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a namespace must be assigned to the module s dict", "final_sentence": "a namespace must be assigned to the module s dict"}
{"comment_sentence_id": 5430, "class": "NetModifier", "comment_sentence": "modifier somenetmodifier opts", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "modifier somenetmodifier opts", "final_sentence": "modifier somenetmodifier opts"}
{"comment_sentence_id": 2573, "class": "Environment", "comment_sentence": "modifications on environments after the first template was loaded", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "modifications on environments after the first template was loaded", "final_sentence": "modifications on environments after the first template was loaded"}
{"comment_sentence_id": 50, "class": "AtomicTests", "comment_sentence": "tests for the atomic decorator and context manager.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tests for the atomic decorator and context manager", "final_sentence": "tests for the atomic decorator and context manager"}
{"comment_sentence_id": 4395, "class": "BatchNorm1d", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4108, "class": "Token", "comment_sentence": "token class.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "token class", "final_sentence": "token class"}
{"comment_sentence_id": 4154, "class": "_OpNamespace", "comment_sentence": "on the torch^ops object, which will create a new opnamespace", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "on the torch ops object which will create a new opnamespace", "final_sentence": "on the torch ops object which will create a new opnamespace"}
{"comment_sentence_id": 5224, "class": "FisherSnedecor", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1326, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 4280, "class": "Adamax", "comment_sentence": "running averages of gradient and its square", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "running averages of gradient and its square", "final_sentence": "running averages of gradient and its square"}
{"comment_sentence_id": 4301, "class": "AdaptiveMaxPool3d", "comment_sentence": "can be a tuple d, h, w or a single d for a cube d x d x d.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "can be a tuple d h w or a single d for a cube d x d x d", "final_sentence": "can be a tuple d h w or a single d for a cube d x d x d"}
{"comment_sentence_id": 3512, "class": "ParseResults", "comment_sentence": "resultsname see class parserelement^setresultsname", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "resultsname see class parserelement setresultsname", "final_sentence": "resultsname see class parserelement setresultsname"}
{"comment_sentence_id": 2076, "class": "PlotAccessor", "comment_sentence": "alternatively, to", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "alternatively to", "final_sentence": "alternatively to"}
{"comment_sentence_id": 55, "class": "AtomicTests", "comment_sentence": "syntax and the bulk of the tests use the context manager syntax.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "syntax and the bulk of the tests use the context manager syntax", "final_sentence": "syntax and the bulk of the tests use the context manager syntax"}
{"comment_sentence_id": 2828, "class": "FileMetadata", "comment_sentence": "which is treated as existing, and will be the contents of the file at", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "which is treated as existing and will be the contents of the file at", "final_sentence": "which is treated as existing and will be the contents of the file at"}
{"comment_sentence_id": 1294, "class": "ConfigDict", "comment_sentence": "water liters , int, 0 ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "water liters int 0", "final_sentence": "water liters int 0"}
{"comment_sentence_id": 4392, "class": "BatchNorm1d", "comment_sentence": "shape", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "shape", "final_sentence": "shape"}
{"comment_sentence_id": 5226, "class": "FisherSnedecor", "comment_sentence": "df2 float or tensor degrees of freedom parameter 2", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "df2 float or tensor degrees of freedom parameter 2", "final_sentence": "df2 float or tensor degrees of freedom parameter 2"}
{"comment_sentence_id": 266, "class": "Client", "comment_sentence": "of the contexts and templates that were rendered during the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "of the contexts and templates that were rendered during the", "final_sentence": "of the contexts and templates that were rendered during the"}
{"comment_sentence_id": 3527, "class": "ParseResults", "comment_sentence": "test result^day", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test result day", "final_sentence": "test result day"}
{"comment_sentence_id": 4380, "class": "BatchNorm1d", "comment_sentence": "computation.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "computation", "final_sentence": "computation"}
{"comment_sentence_id": 3269, "class": "NotAny", "comment_sentence": "# operation hierarchy, use infixnotation", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "operation hierarchy use infixnotation", "final_sentence": "operation hierarchy use infixnotation"}
{"comment_sentence_id": 3411, "class": "Option", "comment_sentence": "auto detection.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "auto detection", "final_sentence": "auto detection"}
{"comment_sentence_id": 4319, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 118, "class": "BaseCommand", "comment_sentence": "all of their logic in handle , or perform some additional", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "all of their logic in handle or perform some additional", "final_sentence": "all of their logic in handle or perform some additional"}
{"comment_sentence_id": 4397, "class": "BatchNorm1d", "comment_sentence": "m nn^batchnorm1d 100", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "m nn batchnorm1d 100", "final_sentence": "m nn batchnorm1d 100"}
{"comment_sentence_id": 1731, "class": "CategoricalIndex", "comment_sentence": "name object, optional", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "name object optional", "final_sentence": "name object optional"}
{"comment_sentence_id": 3338, "class": "omdict", "comment_sentence": "poplist , popvalue , popvalues , popitem , poplistitem ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "poplist popvalue popvalues popitem poplistitem", "final_sentence": "poplist popvalue popvalues popitem poplistitem"}
{"comment_sentence_id": 5450, "class": "OneHotCategorical", "comment_sentence": "probs tensor event probabilities", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "probs tensor event probabilities", "final_sentence": "probs tensor event probabilities"}
{"comment_sentence_id": 2086, "class": "PlotAccessor", "comment_sentence": "notes", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 2353, "class": "UnsortedIndexError", "comment_sentence": "subclass of keyerror .", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "subclass of keyerror", "final_sentence": "subclass of keyerror"}
{"comment_sentence_id": 3180, "class": "MemcachedBytecodeCache", "comment_sentence": "value is a string and", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "value is a string and", "final_sentence": "value is a string and"}
{"comment_sentence_id": 3321, "class": "omdict", "comment_sentence": "get , setdefault , pop , popitem ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "get setdefault pop popitem", "final_sentence": "get setdefault pop popitem"}
{"comment_sentence_id": 1553, "class": "AccessorCallableDocumenter", "comment_sentence": "call from the method signature for", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "call from the method signature for", "final_sentence": "call from the method signature for"}
{"comment_sentence_id": 5196, "class": "EnforceUnique", "comment_sentence": "raises an error if a key is seen more than once.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "raises an error if a key is seen more than once", "final_sentence": "raises an error if a key is seen more than once"}
{"comment_sentence_id": 2410, "class": "Argument", "comment_sentence": "provide fewer features than options but can have infinite nargs", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "provide fewer features than options but can have infinite nargs", "final_sentence": "provide fewer features than options but can have infinite nargs"}
{"comment_sentence_id": 4212, "class": "Adadelta", "comment_sentence": "implements adadelta algorithm.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "implements adadelta algorithm", "final_sentence": "implements adadelta algorithm"}
{"comment_sentence_id": 264, "class": "Client", "comment_sentence": "obtain the response that the server gave to those requests.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "obtain the response that the server gave to those requests", "final_sentence": "obtain the response that the server gave to those requests"}
{"comment_sentence_id": 2456, "class": "CaseInsensitiveDict", "comment_sentence": "for example, headers content encoding will return the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "for example headers content encoding will return the", "final_sentence": "for example headers content encoding will return the"}
{"comment_sentence_id": 1579, "class": "BooleanArray", "comment_sentence": "see ref boolean^kleene for more.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "see ref boolean kleene for more", "final_sentence": "see ref boolean kleene for more"}
{"comment_sentence_id": 4895, "class": "CyclicLR", "comment_sentence": "exp range a cycle that scales initial amplitude by math text gamma ^ text cycle iterations", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations", "final_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations"}
{"comment_sentence_id": 2446, "class": "CaseInsensitiveDict", "comment_sentence": "the structure remembers the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "the structure remembers the", "final_sentence": "the structure remembers the"}
{"comment_sentence_id": 5339, "class": "MultiLabelMarginLoss", "comment_sentence": "the losses are averaged over each loss element in the batch.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the losses are averaged over each loss element in the batch", "final_sentence": "the losses are averaged over each loss element in the batch"}
{"comment_sentence_id": 5292, "class": "Module", "comment_sentence": "import torch^nn as nn", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "import torch nn as nn", "final_sentence": "import torch nn as nn"}
{"comment_sentence_id": 4282, "class": "Adamax", "comment_sentence": "numerical stability default 1e 8", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "numerical stability default 1e 8", "final_sentence": "numerical stability default 1e 8"}
{"comment_sentence_id": 3508, "class": "ParseResults", "comment_sentence": "the parsed data", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the parsed data", "final_sentence": "the parsed data"}
{"comment_sentence_id": 1726, "class": "CategoricalIndex", "comment_sentence": "if class categoricaldtype , cannot be used together with", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if class categoricaldtype cannot be used together with", "final_sentence": "if class categoricaldtype cannot be used together with"}
{"comment_sentence_id": 5687, "class": "Unfold", "comment_sentence": "of attr input into a column ie, last dimension of a 3 d attr output", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "of attr input into a column ie last dimension of a 3 d attr output", "final_sentence": "of attr input into a column ie last dimension of a 3 d attr output"}
{"comment_sentence_id": 3500, "class": "ParseFatalException", "comment_sentence": "is found stops all parsing immediately", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "is found stops all parsing immediately", "final_sentence": "is found stops all parsing immediately"}
{"comment_sentence_id": 2495, "class": "CONSOLE_SCREEN_BUFFER_INFO", "comment_sentence": "struct in wincon^h.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "struct in wincon h", "final_sentence": "struct in wincon h"}
{"comment_sentence_id": 5931, "class": "InvalidHeader", "comment_sentence": "the header value provided was somehow invalid.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the header value provided was somehow invalid", "final_sentence": "the header value provided was somehow invalid"}
{"comment_sentence_id": 1446, "class": "Event", "comment_sentence": "rendering of events should be handled by the respective source class.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "rendering of events should be handled by the respective source class", "final_sentence": "rendering of events should be handled by the respective source class"}
{"comment_sentence_id": 3538, "class": "ParseResults", "comment_sentence": "result^dump 1999 , , 12 , , 31", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "result dump 1999 12 31", "final_sentence": "result dump 1999 12 31"}
{"comment_sentence_id": 5296, "class": "Module", "comment_sentence": "super model, self .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "super model self", "final_sentence": "super model self"}
{"comment_sentence_id": 1570, "class": "BaseInterfaceTests", "comment_sentence": "interface", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "interface", "final_sentence": "interface"}
{"comment_sentence_id": 116, "class": "BaseCommand", "comment_sentence": "thus, the handle method is typically the starting point for", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "thus the handle method is typically the starting point for", "final_sentence": "thus the handle method is typically the starting point for"}
{"comment_sentence_id": 2055, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 1165, "class": "TermColors", "comment_sentence": "confused by color escapes.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "confused by color escapes", "final_sentence": "confused by color escapes"}
{"comment_sentence_id": 3535, "class": "ParseResults", "comment_sentence": "result^day 31", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "result day 31", "final_sentence": "result day 31"}
{"comment_sentence_id": 5355, "class": "MultiLabelMarginLoss", "comment_sentence": "none mean sum .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "none mean sum", "final_sentence": "none mean sum"}
{"comment_sentence_id": 3263, "class": "NotAny", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5346, "class": "MultiLabelMarginLoss", "comment_sentence": "default true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4711, "class": "Conv3d", "comment_sentence": "in the simplest case, the output value of the layer with input size math n, c in , d, h, w", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "in the simplest case the output value of the layer with input size math n c in d h w", "final_sentence": "in the simplest case the output value of the layer with input size math n c in d h w"}
{"comment_sentence_id": 3401, "class": "Option", "comment_sentence": "if set to true the prompt will be the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if set to true the prompt will be the", "final_sentence": "if set to true the prompt will be the"}
{"comment_sentence_id": 1669, "class": "CategoricalDtype", "comment_sentence": "12:00 AM", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "12 00 AM", "final_sentence": "12 00 AM"}
{"comment_sentence_id": 5344, "class": "MultiLabelMarginLoss", "comment_sentence": "ignored", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 5336, "class": "MultiLabelMarginLoss", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 114, "class": "BaseCommand", "comment_sentence": "commanderror , run from argv will instead print an error", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "commanderror run from argv will instead print an error", "final_sentence": "commanderror run from argv will instead print an error"}
{"comment_sentence_id": 3404, "class": "Option", "comment_sentence": "if it was prompted for.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if it was prompted for", "final_sentence": "if it was prompted for"}
{"comment_sentence_id": 5294, "class": "Module", "comment_sentence": "class model nn^module", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "class model nn module", "final_sentence": "class model nn module"}
{"comment_sentence_id": 1142, "class": "Struct", "comment_sentence": "a dict subclass with attribute style access.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "a dict subclass with attribute style access", "final_sentence": "a dict subclass with attribute style access"}
{"comment_sentence_id": 2453, "class": "CaseInsensitiveDict", "comment_sentence": "cid accept application json", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "cid accept application json", "final_sentence": "cid accept application json"}
{"comment_sentence_id": 586, "class": "ModelBase", "comment_sentence": "metaclass for all models.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "metaclass for all models", "final_sentence": "metaclass for all models"}
{"comment_sentence_id": 1174, "class": "UserMagics", "comment_sentence": "placeholder for user defined magics to be added at runtime.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "placeholder for user defined magics to be added at runtime", "final_sentence": "placeholder for user defined magics to be added at runtime"}
{"comment_sentence_id": 1602, "class": "BooleanArray", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4252, "class": "Adam", "comment_sentence": "https arxiv^org abs 14126980", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "https arxiv org abs 14126980", "final_sentence": "https arxiv org abs 14126980"}
{"comment_sentence_id": 1652, "class": "CategoricalDtype", "comment_sentence": "used in operations that combine categoricals, eg astype, and will resolve to", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "used in operations that combine categoricals eg astype and will resolve to", "final_sentence": "used in operations that combine categoricals eg astype and will resolve to"}
{"comment_sentence_id": 4296, "class": "AdaptiveMaxPool3d", "comment_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes", "final_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes"}
{"comment_sentence_id": 1666, "class": "CategoricalDtype", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1306, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 3331, "class": "omdict", "comment_sentence": "methods with list in their", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "methods with list in their", "final_sentence": "methods with list in their"}
{"comment_sentence_id": 3304, "class": "omdict", "comment_sentence": "ordered multivalue dictionary.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "ordered multivalue dictionary", "final_sentence": "ordered multivalue dictionary"}
{"comment_sentence_id": 5695, "class": "Unfold", "comment_sentence": "text dilation d times text kernel size d 1 1 text stride d 1 right rfloor,", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "text dilation d times text kernel size d 1 1 text stride d 1 right rfloor", "final_sentence": "text dilation d times text kernel size d 1 1 text stride d 1 right rfloor"}
{"comment_sentence_id": 1581, "class": "BooleanArray", "comment_sentence": "func pandas^array specifying dtype boolean see examples", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "func pandas array specifying dtype boolean see examples", "final_sentence": "func pandas array specifying dtype boolean see examples"}
{"comment_sentence_id": 1729, "class": "CategoricalIndex", "comment_sentence": "copy bool, default false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 2369, "class": "_FileInFile", "comment_sentence": "a thin wrapper around an existing file object that", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a thin wrapper around an existing file object that", "final_sentence": "a thin wrapper around an existing file object that"}
{"comment_sentence_id": 4305, "class": "AdaptiveMaxPool3d", "comment_sentence": "useful to pass to nn^maxunpool3d.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "useful to pass to nn maxunpool3d", "final_sentence": "useful to pass to nn maxunpool3d"}
{"comment_sentence_id": 538, "class": "MigrationLoader", "comment_sentence": "load migration files from disk and their status from the database.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "load migration files from disk and their status from the database", "final_sentence": "load migration files from disk and their status from the database"}
{"comment_sentence_id": 1605, "class": "BooleanArray", "comment_sentence": "booleanarray", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 1664, "class": "CategoricalDtype", "comment_sentence": "see ref categorical^categoricaldtype", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "see ref categorical categoricaldtype", "final_sentence": "see ref categorical categoricaldtype"}
{"comment_sentence_id": 3414, "class": "Option", "comment_sentence": "this is set to a boolean automatically if", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this is set to a boolean automatically if", "final_sentence": "this is set to a boolean automatically if"}
{"comment_sentence_id": 5121, "class": "EmbeddingBag", "comment_sentence": "offsets torch^longtensor 0,4", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "offsets torch longtensor 0 4", "final_sentence": "offsets torch longtensor 0 4"}
{"comment_sentence_id": 613, "class": "MultiValueDict", "comment_sentence": "single name value pairs.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "single name value pairs", "final_sentence": "single name value pairs"}
{"comment_sentence_id": 2451, "class": "CaseInsensitiveDict", "comment_sentence": "testing is case insensitive", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "testing is case insensitive", "final_sentence": "testing is case insensitive"}
{"comment_sentence_id": 3420, "class": "Option", "comment_sentence": "arguments.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 1332, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 2089, "class": "PlotAccessor", "comment_sentence": "for bar plot layout by position keyword.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "for bar plot layout by position keyword", "final_sentence": "for bar plot layout by position keyword"}
{"comment_sentence_id": 3242, "class": "Module_six_moves_urllib_request", "comment_sentence": "lazy loading of moved objects in six^moves.urllib request", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "lazy loading of moved objects in six moves urllib request", "final_sentence": "lazy loading of moved objects in six moves urllib request"}
{"comment_sentence_id": 4367, "class": "BatchNorm1d", "comment_sentence": "mathematically, the", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "mathematically the", "final_sentence": "mathematically the"}
{"comment_sentence_id": 1722, "class": "CategoricalIndex", "comment_sentence": "categorical.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "categorical", "final_sentence": "categorical"}
{"comment_sentence_id": 5362, "class": "MultiLabelMarginLoss", "comment_sentence": "default mean", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 2, "class": "AccessMixin", "comment_sentence": "functionality.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "functionality", "final_sentence": "functionality"}
{"comment_sentence_id": 69, "class": "AutoFieldMeta", "comment_sentence": "to be implemented on field to be used instead.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "to be implemented on field to be used instead", "final_sentence": "to be implemented on field to be used instead"}
{"comment_sentence_id": 2067, "class": "PlotAccessor", "comment_sentence": "mark right bool, default true", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "mark right bool default true", "final_sentence": "mark right bool default true"}
{"comment_sentence_id": 5371, "class": "MultiLabelMarginLoss", "comment_sentence": "x torch^floattensor 01, 02, 04, 08", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "x torch floattensor 01 02 04 08", "final_sentence": "x torch floattensor 01 02 04 08"}
{"comment_sentence_id": 4307, "class": "AdaptiveMaxPool3d", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 582, "class": "MigrationWriter", "comment_sentence": "take a migration instance and is able to produce the contents", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "take a migration instance and is able to produce the contents", "final_sentence": "take a migration instance and is able to produce the contents"}
{"comment_sentence_id": 89, "class": "BaseCommand", "comment_sentence": "derive.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "derive", "final_sentence": "derive"}
{"comment_sentence_id": 5266, "class": "LBFGS", "comment_sentence": "value parameter changes default 1e 9 .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "value parameter changes default 1e 9", "final_sentence": "value parameter changes default 1e 9"}
{"comment_sentence_id": 5263, "class": "LBFGS", "comment_sentence": "tolerance grad float termination tolerance on first order optimality", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tolerance grad float termination tolerance on first order optimality", "final_sentence": "tolerance grad float termination tolerance on first order optimality"}
{"comment_sentence_id": 5469, "class": "Poisson", "comment_sentence": "m poisson torch^tensor 4", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "m poisson torch tensor 4", "final_sentence": "m poisson torch tensor 4"}
{"comment_sentence_id": 612, "class": "MultiValueDict", "comment_sentence": "which returns a list for every key, even though most web forms submit", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "which returns a list for every key even though most web forms submit", "final_sentence": "which returns a list for every key even though most web forms submit"}
{"comment_sentence_id": 14, "class": "ArchiveIndexView", "comment_sentence": "top level archive of date based items.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "top level archive of date based items", "final_sentence": "top level archive of date based items"}
{"comment_sentence_id": 3086, "class": "Markup", "comment_sentence": "use.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "use", "final_sentence": "use"}
{"comment_sentence_id": 3081, "class": "Markup", "comment_sentence": "markup 42", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 1138, "class": "Obj", "comment_sentence": "namespace to hold arbitrary information.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "namespace to hold arbitrary information", "final_sentence": "namespace to hold arbitrary information"}
{"comment_sentence_id": 2491, "class": "CommandError", "comment_sentence": "raised when there is an error in command line arguments", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "raised when there is an error in command line arguments", "final_sentence": "raised when there is an error in command line arguments"}
{"comment_sentence_id": 3493, "class": "ParseError", "comment_sentence": "in the toml being parsed.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "in the toml being parsed", "final_sentence": "in the toml being parsed"}
{"comment_sentence_id": 5698, "class": "Unfold", "comment_sentence": "dimensions.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "dimensions", "final_sentence": "dimensions"}
{"comment_sentence_id": 5448, "class": "OneHotCategorical", "comment_sentence": "tensor 0., 0., 0., 1.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "tensor 0 0 0 1", "final_sentence": "tensor 0 0 0 1"}
{"comment_sentence_id": 123, "class": "BaseCommand", "comment_sentence": "a short description of the command, which will be printed in", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a short description of the command which will be printed in", "final_sentence": "a short description of the command which will be printed in"}
{"comment_sentence_id": 2362, "class": "_BZ2Proxy", "comment_sentence": "a file object argument.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a file object argument", "final_sentence": "a file object argument"}
{"comment_sentence_id": 5214, "class": "ExternalInitializer", "comment_sentence": "current version is not doing any real sanity checks to the parameter.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "current version is not doing any real sanity checks to the parameter", "final_sentence": "current version is not doing any real sanity checks to the parameter"}
{"comment_sentence_id": 3412, "class": "Option", "comment_sentence": "param flag value which value should be used for this flag if it s", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "param flag value which value should be used for this flag if it s", "final_sentence": "param flag value which value should be used for this flag if it s"}
{"comment_sentence_id": 106, "class": "BaseCommand", "comment_sentence": "3", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 4299, "class": "AdaptiveMaxPool3d", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1662, "class": "CategoricalDtype", "comment_sentence": "this class is useful for specifying the type of a categorical", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this class is useful for specifying the type of a categorical", "final_sentence": "this class is useful for specifying the type of a categorical"}
{"comment_sentence_id": 1640, "class": "BusinessMixin", "comment_sentence": "mixin to business types to provide related functions.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "mixin to business types to provide related functions", "final_sentence": "mixin to business types to provide related functions"}
{"comment_sentence_id": 2216, "class": "SelectNSeries", "comment_sentence": "nordered series", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "nordered series", "final_sentence": "nordered series"}
{"comment_sentence_id": 5260, "class": "LBFGS", "comment_sentence": "default 20", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "default 20", "final_sentence": "default 20"}
{"comment_sentence_id": 3524, "class": "ParseResults", "comment_sentence": "test list result", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "test list result", "final_sentence": "test list result"}
{"comment_sentence_id": 28, "class": "Atomic", "comment_sentence": "none denotes the absence of a savepoint.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "none denotes the absence of a savepoint", "final_sentence": "none denotes the absence of a savepoint"}
{"comment_sentence_id": 5, "class": "AmbiguityError", "comment_sentence": "more than one migration matches a name prefix.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "more than one migration matches a name prefix", "final_sentence": "more than one migration matches a name prefix"}
{"comment_sentence_id": 4217, "class": "Adadelta", "comment_sentence": "rho float, optional coefficient used for computing a running average", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "rho float optional coefficient used for computing a running average", "final_sentence": "rho float optional coefficient used for computing a running average"}
{"comment_sentence_id": 4128, "class": "UndefinedEnvironmentName", "comment_sentence": "a name was attempted to be used that does not exist inside of the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a name was attempted to be used that does not exist inside of the", "final_sentence": "a name was attempted to be used that does not exist inside of the"}
{"comment_sentence_id": 2224, "class": "SetopCheck", "comment_sentence": "this is called to decorate the set operations of intervalindex", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this is called to decorate the set operations of intervalindex", "final_sentence": "this is called to decorate the set operations of intervalindex"}
{"comment_sentence_id": 3307, "class": "omdict", "comment_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "final_sentence": "an ordered multivalue dictionary is a multivalue dictionary that"}
{"comment_sentence_id": 4165, "class": "_OpNamespace", "comment_sentence": "and subsequent accesses will incur no further lookup the namespace and", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "and subsequent accesses will incur no further lookup the namespace and", "final_sentence": "and subsequent accesses will incur no further lookup the namespace and"}
{"comment_sentence_id": 4148, "class": "_OpNamespace", "comment_sentence": ".", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 515, "class": "MigrationGraph", "comment_sentence": "for these instead, the code to load them in here should examine the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "for these instead the code to load them in here should examine the", "final_sentence": "for these instead the code to load them in here should examine the"}
{"comment_sentence_id": 2079, "class": "PlotAccessor", "comment_sentence": "versionadded 10.0", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "versionadded 10 0", "final_sentence": "versionadded 10 0"}
{"comment_sentence_id": 1044, "class": "CapturingDisplayPublisher", "comment_sentence": "a displaypublisher that store", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a displaypublisher that store", "final_sentence": "a displaypublisher that store"}
{"comment_sentence_id": 3513, "class": "ParseResults", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1603, "class": "BooleanArray", "comment_sentence": "create an booleanarray with func pandas^array", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "create an booleanarray with func pandas array", "final_sentence": "create an booleanarray with func pandas array"}
{"comment_sentence_id": 3184, "class": "MemcachedBytecodeCache", "comment_sentence": "provided it s an integer with the number of seconds the cache", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "provided it s an integer with the number of seconds the cache", "final_sentence": "provided it s an integer with the number of seconds the cache"}
{"comment_sentence_id": 3408, "class": "Option", "comment_sentence": "input.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "input", "final_sentence": "input"}
{"comment_sentence_id": 1880, "class": "IntegerArray", "comment_sentence": "data contains a numpy integer array of the appropriate dtype", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "data contains a numpy integer array of the appropriate dtype", "final_sentence": "data contains a numpy integer array of the appropriate dtype"}
{"comment_sentence_id": 3532, "class": "ParseResults", "comment_sentence": "list result 1999 , , 12 , , 31", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "list result 1999 12 31", "final_sentence": "list result 1999 12 31"}
{"comment_sentence_id": 4365, "class": "BatchNorm1d", "comment_sentence": "this attr momentum argument is different from one used in optimizer", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this attr momentum argument is different from one used in optimizer", "final_sentence": "this attr momentum argument is different from one used in optimizer"}
{"comment_sentence_id": 5438, "class": "OneHotCategorical", "comment_sentence": "creates a one hot categorical distribution parameterized by attr probs or", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "creates a one hot categorical distribution parameterized by attr probs or", "final_sentence": "creates a one hot categorical distribution parameterized by attr probs or"}
{"comment_sentence_id": 4158, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op will then invoke getattr on", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "torch ops my namespace my op will then invoke getattr on", "final_sentence": "torch ops my namespace my op will then invoke getattr on"}
{"comment_sentence_id": 95, "class": "BaseCommand", "comment_sentence": "the command parsing and execution behavior, the normal flow works", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "the command parsing and execution behavior the normal flow works", "final_sentence": "the command parsing and execution behavior the normal flow works"}
{"comment_sentence_id": 3505, "class": "ParseResultBytes", "comment_sentence": "compatibility shim for the urlparse^parseresultbytes object.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "compatibility shim for the urlparse parseresultbytes object", "final_sentence": "compatibility shim for the urlparse parseresultbytes object"}
{"comment_sentence_id": 3413, "class": "Option", "comment_sentence": "enabled.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "enabled", "final_sentence": "enabled"}
{"comment_sentence_id": 3537, "class": "ParseResults", "comment_sentence": "minutes in result false", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "minutes in result false", "final_sentence": "minutes in result false"}
{"comment_sentence_id": 1335, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 3090, "class": "Markup", "comment_sentence": "def html self", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "def html self", "final_sentence": "def html self"}
{"comment_sentence_id": 5934, "class": "PreparedRequest", "comment_sentence": "containing the exact bytes that will be sent to the server.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "containing the exact bytes that will be sent to the server", "final_sentence": "containing the exact bytes that will be sent to the server"}
{"comment_sentence_id": 3474, "class": "PacifyFlushWrapper", "comment_sentence": "notably ^flush is always called on", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "notably flush is always called on", "final_sentence": "notably flush is always called on"}
{"comment_sentence_id": 4116, "class": "TreeBuilder", "comment_sentence": "base treebuilder implementation", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "base treebuilder implementation", "final_sentence": "base treebuilder implementation"}
{"comment_sentence_id": 5338, "class": "MultiLabelMarginLoss", "comment_sentence": "by default,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "by default", "final_sentence": "by default"}
{"comment_sentence_id": 3406, "class": "Option", "comment_sentence": "hidden from the user.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "hidden from the user", "final_sentence": "hidden from the user"}
{"comment_sentence_id": 1560, "class": "Base", "comment_sentence": "common tests for all variations of intervalindex construction.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "common tests for all variations of intervalindex construction", "final_sentence": "common tests for all variations of intervalindex construction"}
{"comment_sentence_id": 556, "class": "MigrationLoader", "comment_sentence": "we re already not just operating", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "we re already not just operating", "final_sentence": "we re already not just operating"}
{"comment_sentence_id": 3327, "class": "omdict", "comment_sentence": "an optional", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "an optional", "final_sentence": "an optional"}
{"comment_sentence_id": 4871, "class": "ConvReLU3d", "comment_sentence": "we adopt the same interface as class torch^nn.quantized^conv3d .", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "we adopt the same interface as class torch nn quantized conv3d", "final_sentence": "we adopt the same interface as class torch nn quantized conv3d"}
{"comment_sentence_id": 912, "class": "Audio", "comment_sentence": "create an audio object.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "create an audio object", "final_sentence": "create an audio object"}
{"comment_sentence_id": 3400, "class": "Option", "comment_sentence": "prompted for input.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "prompted for input", "final_sentence": "prompted for input"}
{"comment_sentence_id": 3391, "class": "Option", "comment_sentence": "if this", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if this", "final_sentence": "if this"}
{"comment_sentence_id": 52, "class": "AtomicTests", "comment_sentence": "robust way to ask the database for its current transaction state.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "robust way to ask the database for its current transaction state", "final_sentence": "robust way to ask the database for its current transaction state"}
{"comment_sentence_id": 4156, "class": "_OpNamespace", "comment_sentence": "object.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 3521, "class": "ParseResults", "comment_sentence": "result date str^parsestring 1999 12 31", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "result date str parsestring 1999 12 31", "final_sentence": "result date str parsestring 1999 12 31"}
{"comment_sentence_id": 1281, "class": "ConfigDict", "comment_sentence": "to be dictionaries or lists of items that match the rules defined.", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "to be dictionaries or lists of items that match the rules defined", "final_sentence": "to be dictionaries or lists of items that match the rules defined"}
{"comment_sentence_id": 546, "class": "MigrationLoader", "comment_sentence": "see", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 2051, "class": "PlotAccessor", "comment_sentence": "plots .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "plots", "final_sentence": "plots"}
{"comment_sentence_id": 1, "class": "AccessMixin", "comment_sentence": "abstract cbv mixin that gives access mixins the same customizable", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "abstract cbv mixin that gives access mixins the same customizable", "final_sentence": "abstract cbv mixin that gives access mixins the same customizable"}
{"comment_sentence_id": 914, "class": "Audio", "comment_sentence": "display function, it will result in audio controls being displayed", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "display function it will result in audio controls being displayed", "final_sentence": "display function it will result in audio controls being displayed"}
{"comment_sentence_id": 4372, "class": "BatchNorm1d", "comment_sentence": "because the batch normalization is done over the c dimension, computing statistics", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "because the batch normalization is done over the c dimension computing statistics", "final_sentence": "because the batch normalization is done over the c dimension computing statistics"}
{"comment_sentence_id": 2370, "class": "_FileInFile", "comment_sentence": "provides a part of its data as an individual file", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "provides a part of its data as an individual file", "final_sentence": "provides a part of its data as an individual file"}
{"comment_sentence_id": 598, "class": "MultiValueDict", "comment_sentence": "a subclass of dictionary customized to handle multiple values for the", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "a subclass of dictionary customized to handle multiple values for the", "final_sentence": "a subclass of dictionary customized to handle multiple values for the"}
{"comment_sentence_id": 605, "class": "MultiValueDict", "comment_sentence": "d^getlist doesnotexist", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "d getlist doesnotexist", "final_sentence": "d getlist doesnotexist"}
{"comment_sentence_id": 5370, "class": "MultiLabelMarginLoss", "comment_sentence": "loss nn^multilabelmarginloss", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "loss nn multilabelmarginloss", "final_sentence": "loss nn multilabelmarginloss"}
{"comment_sentence_id": 3533, "class": "ParseResults", "comment_sentence": "result 0 1999", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "result 0 1999", "final_sentence": "result 0 1999"}
{"comment_sentence_id": 3387, "class": "Option", "comment_sentence": "all other parameters are passed onwards to the parameter constructor.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "all other parameters are passed onwards to the parameter constructor", "final_sentence": "all other parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 4661, "class": "Caffe2OperatorTestCase", "comment_sentence": "when run backward is false, the run forward method will be executed, otherwise", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "when run backward is false the run forward method will be executed otherwise", "final_sentence": "when run backward is false the run forward method will be executed otherwise"}
{"comment_sentence_id": 110, "class": "BaseCommand", "comment_sentence": "output and, if the command is intended to produce a block of", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "output and if the command is intended to produce a block of", "final_sentence": "output and if the command is intended to produce a block of"}
{"comment_sentence_id": 2571, "class": "Environment", "comment_sentence": "instances of this class may be modified if", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "instances of this class may be modified if", "final_sentence": "instances of this class may be modified if"}
{"comment_sentence_id": 5222, "class": "FisherSnedecor", "comment_sentence": "m^sample # fisher snedecor distributed with df1 1 and df2 2", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2", "final_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2"}
{"comment_sentence_id": 1552, "class": "AccessorCallableDocumenter", "comment_sentence": "this documenter lets us removes .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "this documenter lets us removes", "final_sentence": "this documenter lets us removes"}
{"comment_sentence_id": 576, "class": "MigrationQuestioner", "comment_sentence": "interactive subclass is what the command line arguments will use.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "interactive subclass is what the command line arguments will use", "final_sentence": "interactive subclass is what the command line arguments will use"}
{"comment_sentence_id": 5262, "class": "LBFGS", "comment_sentence": "step default max iter 125 .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "step default max iter 125", "final_sentence": "step default max iter 125"}
{"comment_sentence_id": 3336, "class": "omdict", "comment_sentence": "load , size , reverse ,", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "load size reverse", "final_sentence": "load size reverse"}
{"comment_sentence_id": 5693, "class": "Unfold", "comment_sentence": "math", "partition": 1, "instance_type": 1, "category": "Expand", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 4384, "class": "BatchNorm1d", "comment_sentence": "affine a boolean value that when set to true , this module has", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "affine a boolean value that when set to true this module has", "final_sentence": "affine a boolean value that when set to true this module has"}
{"comment_sentence_id": 130, "class": "BaseCommand", "comment_sentence": "false .", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "false", "final_sentence": "false"}
{"comment_sentence_id": 4390, "class": "BatchNorm1d", "comment_sentence": "statistics in both training and eval modes.", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "statistics in both training and eval modes", "final_sentence": "statistics in both training and eval modes"}
{"comment_sentence_id": 2058, "class": "PlotAccessor", "comment_sentence": "if true, draw a table using the data in the dataframe and the data", "partition": 1, "instance_type": 0, "category": "Expand", "pre_sentence": "if true draw a table using the data in the dataframe and the data", "final_sentence": "if true draw a table using the data in the dataframe and the data"}

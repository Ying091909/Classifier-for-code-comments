{"comment_sentence_id": 24, "class": "Atomic", "comment_sentence": "it s possible to disable the creation of savepoints if the goal is to", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it s possible to disable the creation of savepoints if the goal is to", "final_sentence": "it s possible to disable the creation of savepoints if the goal is to"}
{"comment_sentence_id": 3527, "class": "ParseResults", "comment_sentence": "test result^day", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test result day", "final_sentence": "test result day"}
{"comment_sentence_id": 5465, "class": "Poisson", "comment_sentence": "samples are nonnegative integers, with a pmf given by", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "samples are nonnegative integers with a pmf given by", "final_sentence": "samples are nonnegative integers with a pmf given by"}
{"comment_sentence_id": 512, "class": "MigrationGraph", "comment_sentence": "migrations files can be marked as replacing another set of migrations", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "migrations files can be marked as replacing another set of migrations", "final_sentence": "migrations files can be marked as replacing another set of migrations"}
{"comment_sentence_id": 699, "class": "Permission", "comment_sentence": "the view permission limits the ability to view an object.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the view permission limits the ability to view an object", "final_sentence": "the view permission limits the ability to view an object"}
{"comment_sentence_id": 5522, "class": "SGD", "comment_sentence": "optimizer^step", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "optimizer step", "final_sentence": "optimizer step"}
{"comment_sentence_id": 5661, "class": "TransformerEncoderLayer", "comment_sentence": "out encoder layer src", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "out encoder layer src", "final_sentence": "out encoder layer src"}
{"comment_sentence_id": 5604, "class": "Task", "comment_sentence": "each instance will copy local to globl 100 times, then add local", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "each instance will copy local to globl 100 times then add local", "final_sentence": "each instance will copy local to globl 100 times then add local"}
{"comment_sentence_id": 4798, "class": "Conv3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 1189, "class": "YouTubeVideo", "comment_sentence": "display vid", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "display vid", "final_sentence": "display vid"}
{"comment_sentence_id": 4055, "class": "SkipTo", "comment_sentence": "days open 47", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "days open 47", "final_sentence": "days open 47"}
{"comment_sentence_id": 2854, "class": "FileSystemLoader", "comment_sentence": "loader filesystemloader path to templates", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loader filesystemloader path to templates", "final_sentence": "loader filesystemloader path to templates"}
{"comment_sentence_id": 288, "class": "Combinable", "comment_sentence": "for example f foo f bar .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for example f foo f bar", "final_sentence": "for example f foo f bar"}
{"comment_sentence_id": 1221, "class": "_MockPOP3", "comment_sentence": "pm^stat", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm stat", "final_sentence": "pm stat"}
{"comment_sentence_id": 5943, "class": "PreparedRequest", "comment_sentence": "s^send r", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s send r", "final_sentence": "s send r"}
{"comment_sentence_id": 3522, "class": "ParseResults", "comment_sentence": "def test s, fn repr", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "def test s fn repr", "final_sentence": "def test s fn repr"}
{"comment_sentence_id": 5762, "class": "Unfold", "comment_sentence": "unfold nn^unfold kernel size 2, 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "unfold nn unfold kernel size 2 3", "final_sentence": "unfold nn unfold kernel size 2 3"}
{"comment_sentence_id": 95, "class": "BaseCommand", "comment_sentence": "the command parsing and execution behavior, the normal flow works", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the command parsing and execution behavior the normal flow works", "final_sentence": "the command parsing and execution behavior the normal flow works"}
{"comment_sentence_id": 557, "class": "MigrationLoader", "comment_sentence": "in memory.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "in memory", "final_sentence": "in memory"}
{"comment_sentence_id": 4028, "class": "SkipTo", "comment_sentence": "94 cosmetic spelling error on login log n 14", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "94 cosmetic spelling error on login log n 14", "final_sentence": "94 cosmetic spelling error on login log n 14"}
{"comment_sentence_id": 4040, "class": "SkipTo", "comment_sentence": "integer days open", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer days open", "final_sentence": "integer days open"}
{"comment_sentence_id": 1190, "class": "YouTubeVideo", "comment_sentence": "to start from 30 seconds", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to start from 30 seconds", "final_sentence": "to start from 30 seconds"}
{"comment_sentence_id": 5375, "class": "MultiLabelMarginLoss", "comment_sentence": "# 025 1 01 02 1 01 04 1 08 02 1 08 04", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "025 1 01 02 1 01 04 1 08 02 1 08 04", "final_sentence": "025 1 01 02 1 01 04 1 08 02 1 08 04"}
{"comment_sentence_id": 5120, "class": "EmbeddingBag", "comment_sentence": "input torch^longtensor 1,2,4,5,4,3,2,9", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch longtensor 1 2 4 5 4 3 2 9", "final_sentence": "input torch longtensor 1 2 4 5 4 3 2 9"}
{"comment_sentence_id": 970, "class": "Audio", "comment_sentence": "audio filename path to sound^ogg", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "audio filename path to sound ogg", "final_sentence": "audio filename path to sound ogg"}
{"comment_sentence_id": 2856, "class": "FileSystemLoader", "comment_sentence": "per default the template encoding is utf 8 which can be changed", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "per default the template encoding is utf 8 which can be changed", "final_sentence": "per default the template encoding is utf 8 which can be changed"}
{"comment_sentence_id": 3993, "class": "Session", "comment_sentence": "import requests", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "import requests", "final_sentence": "import requests"}
{"comment_sentence_id": 4057, "class": "SkipTo", "comment_sentence": "issue num 79", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "issue num 79", "final_sentence": "issue num 79"}
{"comment_sentence_id": 2282, "class": "StringArray", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1484, "class": "StorageBackedLongs", "comment_sentence": "unpacklonglist storage sbl 1, 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "unpacklonglist storage sbl 1 2", "final_sentence": "unpacklonglist storage sbl 1 2"}
{"comment_sentence_id": 1233, "class": "_MockPOP3", "comment_sentence": "n", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "n", "final_sentence": "n"}
{"comment_sentence_id": 958, "class": "Audio", "comment_sentence": "import numpy as np", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "import numpy as np", "final_sentence": "import numpy as np"}
{"comment_sentence_id": 3085, "class": "Markup", "comment_sentence": "this implements the html interface that some frameworks", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this implements the html interface that some frameworks", "final_sentence": "this implements the html interface that some frameworks"}
{"comment_sentence_id": 5603, "class": "Task", "comment_sentence": "the task above will create 2 instances that will run in parallel.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the task above will create 2 instances that will run in parallel", "final_sentence": "the task above will create 2 instances that will run in parallel"}
{"comment_sentence_id": 2888, "class": "FollowedBy", "comment_sentence": "data word word alphas", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "data word word alphas", "final_sentence": "data word word alphas"}
{"comment_sentence_id": 4401, "class": "BatchNorm1d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 4970, "class": "CyclicLR", "comment_sentence": "train batch .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "train batch", "final_sentence": "train batch"}
{"comment_sentence_id": 4000, "class": "Session", "comment_sentence": "response 200", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 4030, "class": "SkipTo", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 5518, "class": "SGD", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1314, "class": "ConfigDict", "comment_sentence": "0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 605, "class": "MultiValueDict", "comment_sentence": "d^getlist doesnotexist", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "d getlist doesnotexist", "final_sentence": "d getlist doesnotexist"}
{"comment_sentence_id": 69, "class": "AutoFieldMeta", "comment_sentence": "to be implemented on field to be used instead.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to be implemented on field to be used instead", "final_sentence": "to be implemented on field to be used instead"}
{"comment_sentence_id": 3265, "class": "NotAny", "comment_sentence": "# take care not to mistake keywords for identifiers", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "take care not to mistake keywords for identifiers", "final_sentence": "take care not to mistake keywords for identifiers"}
{"comment_sentence_id": 2410, "class": "Argument", "comment_sentence": "provide fewer features than options but can have infinite nargs", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "provide fewer features than options but can have infinite nargs", "final_sentence": "provide fewer features than options but can have infinite nargs"}
{"comment_sentence_id": 1968, "class": "IntervalDtype", "comment_sentence": "pd^intervaldtype subtype int64", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd intervaldtype subtype int64", "final_sentence": "pd intervaldtype subtype int64"}
{"comment_sentence_id": 2928, "class": "Getattr", "comment_sentence": "bytestring and prefer the attribute.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "bytestring and prefer the attribute", "final_sentence": "bytestring and prefer the attribute"}
{"comment_sentence_id": 4895, "class": "CyclicLR", "comment_sentence": "exp range a cycle that scales initial amplitude by math text gamma ^ text cycle iterations", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations", "final_sentence": "exp range a cycle that scales initial amplitude by math text gamma text cycle iterations"}
{"comment_sentence_id": 2458, "class": "CaseInsensitiveDict", "comment_sentence": "of how the header name was originally stored.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "of how the header name was originally stored", "final_sentence": "of how the header name was originally stored"}
{"comment_sentence_id": 2819, "class": "fdspawn", "comment_sentence": "for patterns, or to control a modem or serial device.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for patterns or to control a modem or serial device", "final_sentence": "for patterns or to control a modem or serial device"}
{"comment_sentence_id": 5591, "class": "Task", "comment_sentence": "from net builder import ops", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "from net builder import ops", "final_sentence": "from net builder import ops"}
{"comment_sentence_id": 514, "class": "MigrationGraph", "comment_sentence": "the graph handler isn t responsible", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the graph handler isn t responsible", "final_sentence": "the graph handler isn t responsible"}
{"comment_sentence_id": 113, "class": "BaseCommand", "comment_sentence": "if handle or execute raised any exception eg", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if handle or execute raised any exception eg", "final_sentence": "if handle or execute raised any exception eg"}
{"comment_sentence_id": 692, "class": "Permission", "comment_sentence": "useful in your own code.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "useful in your own code", "final_sentence": "useful in your own code"}
{"comment_sentence_id": 3186, "class": "MemcachedBytecodeCache", "comment_sentence": "method get key", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "method get key", "final_sentence": "method get key"}
{"comment_sentence_id": 516, "class": "MigrationGraph", "comment_sentence": "migration files and if the replaced migrations are all either unapplied", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "migration files and if the replaced migrations are all either unapplied", "final_sentence": "migration files and if the replaced migrations are all either unapplied"}
{"comment_sentence_id": 111, "class": "BaseCommand", "comment_sentence": "sql statements, will be wrapped in begin and commit .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sql statements will be wrapped in begin and commit", "final_sentence": "sql statements will be wrapped in begin and commit"}
{"comment_sentence_id": 5568, "class": "StackTransform", "comment_sentence": "t stacktransform exptransform , identity transform , dim 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "t stacktransform exptransform identity transform dim 1", "final_sentence": "t stacktransform exptransform identity transform dim 1"}
{"comment_sentence_id": 4046, "class": "SkipTo", "comment_sentence": "desc intermittent system crash", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "desc intermittent system crash", "final_sentence": "desc intermittent system crash"}
{"comment_sentence_id": 4397, "class": "BatchNorm1d", "comment_sentence": "m nn^batchnorm1d 100", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn batchnorm1d 100", "final_sentence": "m nn batchnorm1d 100"}
{"comment_sentence_id": 2559, "class": "Distribution", "comment_sentence": "for construction.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for construction", "final_sentence": "for construction"}
{"comment_sentence_id": 1897, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 2389, "class": "And", "comment_sentence": "name expr oneormore word alphas", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "name expr oneormore word alphas", "final_sentence": "name expr oneormore word alphas"}
{"comment_sentence_id": 4688, "class": "ConstantPad3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 2893, "class": "FollowedBy", "comment_sentence": "shape , square , color , black , posn , upper left", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "shape square color black posn upper left", "final_sentence": "shape square color black posn upper left"}
{"comment_sentence_id": 220, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "must first install the bcrypt library.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "must first install the bcrypt library", "final_sentence": "must first install the bcrypt library"}
{"comment_sentence_id": 5766, "class": "Unfold", "comment_sentence": "# 4 blocks 2x3 kernels in total in the 3x4 input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "4 blocks 2x3 kernels in total in the 3x4 input", "final_sentence": "4 blocks 2x3 kernels in total in the 3x4 input"}
{"comment_sentence_id": 5447, "class": "OneHotCategorical", "comment_sentence": "m^sample # equal probability of 0, 1, 2, 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m sample equal probability of 0 1 2 3", "final_sentence": "m sample equal probability of 0 1 2 3"}
{"comment_sentence_id": 5699, "class": "Unfold", "comment_sentence": "therefore, indexing attr output at the last dimension column dimension", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "therefore indexing attr output at the last dimension column dimension", "final_sentence": "therefore indexing attr output at the last dimension column dimension"}
{"comment_sentence_id": 5446, "class": "OneHotCategorical", "comment_sentence": "m onehotcategorical torch^tensor 025, 025, 025, 025", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m onehotcategorical torch tensor 025 025 025 025", "final_sentence": "m onehotcategorical torch tensor 025 025 025 025"}
{"comment_sentence_id": 4315, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 5327, "class": "MultiLabelMarginLoss", "comment_sentence": "text loss x, y sum ij frac max 0, 1 x y j x i text x^size 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0", "final_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0"}
{"comment_sentence_id": 4156, "class": "_OpNamespace", "comment_sentence": "object.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 964, "class": "Audio", "comment_sentence": "dataleft np^sin 2 np^pi 220 t", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "dataleft np sin 2 np pi 220 t", "final_sentence": "dataleft np sin 2 np pi 220 t"}
{"comment_sentence_id": 5600, "class": "Task", "comment_sentence": "ops^add globl, local , globl", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ops add globl local globl", "final_sentence": "ops add globl local globl"}
{"comment_sentence_id": 2388, "class": "And", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 102, "class": "BaseCommand", "comment_sentence": "an argumentparser for the arguments, parses them, performs", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "an argumentparser for the arguments parses them performs", "final_sentence": "an argumentparser for the arguments parses them performs"}
{"comment_sentence_id": 1672, "class": "CategoricalDtype", "comment_sentence": "3 nan", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "3 nan", "final_sentence": "3 nan"}
{"comment_sentence_id": 4691, "class": "ConstantPad3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 67, "class": "AutoFieldMeta", "comment_sentence": "automatically generated field as a subclass of autofield.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "automatically generated field as a subclass of autofield", "final_sentence": "automatically generated field as a subclass of autofield"}
{"comment_sentence_id": 5938, "class": "PreparedRequest", "comment_sentence": "req requests^request get , https httpbin^org get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "req requests request get https httpbin org get", "final_sentence": "req requests request get https httpbin org get"}
{"comment_sentence_id": 1763, "class": "CategoricalIndex", "comment_sentence": "categoricalindex a , b , c , a , b , c , categories a , b , c , ordered false, dtype category # noqa", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa", "final_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa"}
{"comment_sentence_id": 4117, "class": "TreeBuilder", "comment_sentence": "documentclass the class to use for the bottommost node of a document", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "documentclass the class to use for the bottommost node of a document", "final_sentence": "documentclass the class to use for the bottommost node of a document"}
{"comment_sentence_id": 1509, "class": "VCardStore", "comment_sentence": "mailpilevcard vcardline fn guy", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "mailpilevcard vcardline fn guy", "final_sentence": "mailpilevcard vcardline fn guy"}
{"comment_sentence_id": 5372, "class": "MultiLabelMarginLoss", "comment_sentence": "# for target y, only consider labels 3 and 0, not after label 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for target y only consider labels 3 and 0 not after label 1", "final_sentence": "for target y only consider labels 3 and 0 not after label 1"}
{"comment_sentence_id": 3815, "class": "Retry", "comment_sentence": "retries can be disabled by passing false", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "retries can be disabled by passing false", "final_sentence": "retries can be disabled by passing false"}
{"comment_sentence_id": 3014, "class": "InstalledDistribution", "comment_sentence": "dry run mode is being used .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "dry run mode is being used", "final_sentence": "dry run mode is being used"}
{"comment_sentence_id": 1900, "class": "IntegerArray", "comment_sentence": "int array pd^array 1, none, 3 , dtype pd^int32dtype", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "int array pd array 1 none 3 dtype pd int32dtype", "final_sentence": "int array pd array 1 none 3 dtype pd int32dtype"}
{"comment_sentence_id": 5295, "class": "Module", "comment_sentence": "def init self", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "def init self", "final_sentence": "def init self"}
{"comment_sentence_id": 1194, "class": "YouTubeVideo", "comment_sentence": "class datetime^timedelta", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "class datetime timedelta", "final_sentence": "class datetime timedelta"}
{"comment_sentence_id": 4542, "class": "BCEWithLogitsLoss", "comment_sentence": "loss nn^bcewithlogitsloss", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loss nn bcewithlogitsloss", "final_sentence": "loss nn bcewithlogitsloss"}
{"comment_sentence_id": 4319, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 5774, "class": "Unfold", "comment_sentence": "out torch^nn.functional^fold out unf, 7, 8 , 1, 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "out torch nn functional fold out unf 7 8 1 1", "final_sentence": "out torch nn functional fold out unf 7 8 1 1"}
{"comment_sentence_id": 5520, "class": "SGD", "comment_sentence": "optimizer^zero grad", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "optimizer zero grad", "final_sentence": "optimizer zero grad"}
{"comment_sentence_id": 4545, "class": "BCEWithLogitsLoss", "comment_sentence": "output loss input, target", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output loss input target", "final_sentence": "output loss input target"}
{"comment_sentence_id": 3538, "class": "ParseResults", "comment_sentence": "result^dump 1999 , , 12 , , 31", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "result dump 1999 12 31", "final_sentence": "result dump 1999 12 31"}
{"comment_sentence_id": 3232, "class": "MethodDispatcher", "comment_sentence": "a default value which can be set through the default attribute.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "a default value which can be set through the default attribute", "final_sentence": "a default value which can be set through the default attribute"}
{"comment_sentence_id": 754, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "class post model", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "class post model", "final_sentence": "class post model"}
{"comment_sentence_id": 1898, "class": "IntegerArray", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 3519, "class": "ParseResults", "comment_sentence": "# date str integer year integer month integer day", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "date str integer year integer month integer day", "final_sentence": "date str integer year integer month integer day"}
{"comment_sentence_id": 956, "class": "Audio", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 576, "class": "MigrationQuestioner", "comment_sentence": "interactive subclass is what the command line arguments will use.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "interactive subclass is what the command line arguments will use", "final_sentence": "interactive subclass is what the command line arguments will use"}
{"comment_sentence_id": 4120, "class": "TreeBuilder", "comment_sentence": "doctypeclass the class to use for doctypes", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "doctypeclass the class to use for doctypes", "final_sentence": "doctypeclass the class to use for doctypes"}
{"comment_sentence_id": 1910, "class": "IntegerArray", "comment_sentence": "length 3, dtype int32", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "length 3 dtype int32", "final_sentence": "length 3 dtype int32"}
{"comment_sentence_id": 3513, "class": "ParseResults", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5936, "class": "PreparedRequest", "comment_sentence": "usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 2818, "class": "fdspawn", "comment_sentence": "for example, you could use it to read through a file looking", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for example you could use it to read through a file looking", "final_sentence": "for example you could use it to read through a file looking"}
{"comment_sentence_id": 1521, "class": "VCardStore", "comment_sentence": "TRUE", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 2509, "class": "Context_", "comment_sentence": "and are allowed to access the context read only.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "and are allowed to access the context read only", "final_sentence": "and are allowed to access the context read only"}
{"comment_sentence_id": 5596, "class": "Task", "comment_sentence": "local ops^const 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "local ops const 0", "final_sentence": "local ops const 0"}
{"comment_sentence_id": 5298, "class": "Module", "comment_sentence": "self^conv1 nn^conv2d 1, 20, 5", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "self conv1 nn conv2d 1 20 5", "final_sentence": "self conv1 nn conv2d 1 20 5"}
{"comment_sentence_id": 2451, "class": "CaseInsensitiveDict", "comment_sentence": "testing is case insensitive", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "testing is case insensitive", "final_sentence": "testing is case insensitive"}
{"comment_sentence_id": 104, "class": "BaseCommand", "comment_sentence": "pythonpath , and then calls the execute method,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pythonpath and then calls the execute method", "final_sentence": "pythonpath and then calls the execute method"}
{"comment_sentence_id": 1511, "class": "VCardStore", "comment_sentence": "vcs^get vcard d@evil^com ^fn", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs get vcard d@evil com fn", "final_sentence": "vcs get vcard d@evil com fn"}
{"comment_sentence_id": 4023, "class": "SkipTo", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1188, "class": "YouTubeVideo", "comment_sentence": "vid youtubevideo foo", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vid youtubevideo foo", "final_sentence": "vid youtubevideo foo"}
{"comment_sentence_id": 485, "class": "Migration", "comment_sentence": "operations a list of operation instances, probably from django^db.migrations^operations", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "operations a list of operation instances probably from django db migrations operations", "final_sentence": "operations a list of operation instances probably from django db migrations operations"}
{"comment_sentence_id": 2880, "class": "FollowedBy", "comment_sentence": "expression matches at the current position.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "expression matches at the current position", "final_sentence": "expression matches at the current position"}
{"comment_sentence_id": 1969, "class": "IntervalDtype", "comment_sentence": "interval int64", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "interval int64", "final_sentence": "interval int64"}
{"comment_sentence_id": 4134, "class": "UnlockError", "comment_sentence": "raise unlockerror", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "raise unlockerror", "final_sentence": "raise unlockerror"}
{"comment_sentence_id": 3087, "class": "Markup", "comment_sentence": "passing an object that implements html will wrap the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "passing an object that implements html will wrap the", "final_sentence": "passing an object that implements html will wrap the"}
{"comment_sentence_id": 3526, "class": "ParseResults", "comment_sentence": "test result month", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test result month", "final_sentence": "test result month"}
{"comment_sentence_id": 4144, "class": "_OpNamespace", "comment_sentence": "an op namespace to dynamically bind operators into python.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "an op namespace to dynamically bind operators into python", "final_sentence": "an op namespace to dynamically bind operators into python"}
{"comment_sentence_id": 5445, "class": "OneHotCategorical", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1482, "class": "StorageBackedLongs", "comment_sentence": "sbl^append 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sbl append 2", "final_sentence": "sbl append 2"}
{"comment_sentence_id": 2951, "class": "HebrewProber", "comment_sentence": "built.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "built", "final_sentence": "built"}
{"comment_sentence_id": 5521, "class": "SGD", "comment_sentence": "loss fn model input , target ^backward", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loss fn model input target backward", "final_sentence": "loss fn model input target backward"}
{"comment_sentence_id": 5119, "class": "EmbeddingBag", "comment_sentence": "# a batch of 2 samples of 4 indices each", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "a batch of 2 samples of 4 indices each", "final_sentence": "a batch of 2 samples of 4 indices each"}
{"comment_sentence_id": 555, "class": "MigrationLoader", "comment_sentence": "to disk, but this is probably fine.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to disk but this is probably fine", "final_sentence": "to disk but this is probably fine"}
{"comment_sentence_id": 1985, "class": "PlotAccessor", "comment_sentence": "uses the backend specified by the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "uses the backend specified by the", "final_sentence": "uses the backend specified by the"}
{"comment_sentence_id": 1335, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1111, "class": "Magics", "comment_sentence": "must", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "must", "final_sentence": "must"}
{"comment_sentence_id": 4797, "class": "Conv3d", "comment_sentence": "input torch^randn 20, 16, 10, 50, 100", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 20 16 10 50 100", "final_sentence": "input torch randn 20 16 10 50 100"}
{"comment_sentence_id": 3178, "class": "MemcachedBytecodeCache", "comment_sentence": "method set key, value , timeout", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "method set key value timeout", "final_sentence": "method set key value timeout"}
{"comment_sentence_id": 5903, "class": "UseOptimizer", "comment_sentence": "with useoptimizer optim2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with useoptimizer optim2", "final_sentence": "with useoptimizer optim2"}
{"comment_sentence_id": 5776, "class": "Unfold", "comment_sentence": "# out out unf^view 1, 2, 7, 8", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "out out unf view 1 2 7 8", "final_sentence": "out out unf view 1 2 7 8"}
{"comment_sentence_id": 4968, "class": "CyclicLR", "comment_sentence": "for epoch in range 10", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for epoch in range 10", "final_sentence": "for epoch in range 10"}
{"comment_sentence_id": 3996, "class": "Session", "comment_sentence": "response 200", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 3012, "class": "InstalledDistribution", "comment_sentence": "it reads the metadata contained in pydist^json when it is", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it reads the metadata contained in pydist json when it is", "final_sentence": "it reads the metadata contained in pydist json when it is"}
{"comment_sentence_id": 5898, "class": "UseOptimizer", "comment_sentence": "with useoptimizer default optim, bias bias optim,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with useoptimizer default optim bias bias optim", "final_sentence": "with useoptimizer default optim bias bias optim"}
{"comment_sentence_id": 5897, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 1911, "class": "IntegerArray", "comment_sentence": "pd^array 1, none, 3 , dtype uint16", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd array 1 none 3 dtype uint16", "final_sentence": "pd array 1 none 3 dtype uint16"}
{"comment_sentence_id": 5374, "class": "MultiLabelMarginLoss", "comment_sentence": "loss x, y", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loss x y", "final_sentence": "loss x y"}
{"comment_sentence_id": 3056, "class": "LockFailed", "comment_sentence": "pass", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 3537, "class": "ParseResults", "comment_sentence": "minutes in result false", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "minutes in result false", "final_sentence": "minutes in result false"}
{"comment_sentence_id": 4493, "class": "BCEWithLogitsLoss", "comment_sentence": "for example, if a dataset contains 100 positive and 300 negative examples of a single class,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for example if a dataset contains 100 positive and 300 negative examples of a single class", "final_sentence": "for example if a dataset contains 100 positive and 300 negative examples of a single class"}
{"comment_sentence_id": 3081, "class": "Markup", "comment_sentence": "markup 42", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 4119, "class": "TreeBuilder", "comment_sentence": "commentclass the class to use for comments", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "commentclass the class to use for comments", "final_sentence": "commentclass the class to use for comments"}
{"comment_sentence_id": 1908, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 2280, "class": "StringArray", "comment_sentence": "values.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "values", "final_sentence": "values"}
{"comment_sentence_id": 4796, "class": "Conv3d", "comment_sentence": "m nn^conv3d 16, 33, 3, 5, 2 , stride 2, 1, 1 , padding 4, 2, 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn conv3d 16 33 3 5 2 stride 2 1 1 padding 4 2 0", "final_sentence": "m nn conv3d 16 33 3 5 2 stride 2 1 1 padding 4 2 0"}
{"comment_sentence_id": 2879, "class": "FollowedBy", "comment_sentence": "the input string, it only verifies that the specified parse", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the input string it only verifies that the specified parse", "final_sentence": "the input string it only verifies that the specified parse"}
{"comment_sentence_id": 5942, "class": "PreparedRequest", "comment_sentence": "s requests^session", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s requests session", "final_sentence": "s requests session"}
{"comment_sentence_id": 2275, "class": "StringArray", "comment_sentence": ", dtype string", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "dtype string", "final_sentence": "dtype string"}
{"comment_sentence_id": 1196, "class": "YouTubeVideo", "comment_sentence": "other parameters can be provided as documented at", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "other parameters can be provided as documented at", "final_sentence": "other parameters can be provided as documented at"}
{"comment_sentence_id": 4048, "class": "SkipTo", "comment_sentence": "sev critical", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sev critical", "final_sentence": "sev critical"}
{"comment_sentence_id": 4151, "class": "_OpNamespace", "comment_sentence": "following sequence of magic tricks will occur", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "following sequence of magic tricks will occur", "final_sentence": "following sequence of magic tricks will occur"}
{"comment_sentence_id": 3540, "class": "ParseResults", "comment_sentence": "month 12", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "month 12", "final_sentence": "month 12"}
{"comment_sentence_id": 2507, "class": "Context_", "comment_sentence": "template filters and global functions marked as", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "template filters and global functions marked as", "final_sentence": "template filters and global functions marked as"}
{"comment_sentence_id": 1296, "class": "ConfigDict", "comment_sentence": ",", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 4497, "class": "BCEWithLogitsLoss", "comment_sentence": "target torch^ones 10, 64 , dtype torch^float32 # 64 classes, batch size 10", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "target torch ones 10 64 dtype torch float32 64 classes batch size 10", "final_sentence": "target torch ones 10 64 dtype torch float32 64 classes batch size 10"}
{"comment_sentence_id": 3534, "class": "ParseResults", "comment_sentence": "result month 12", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "result month 12", "final_sentence": "result month 12"}
{"comment_sentence_id": 3341, "class": "omdict", "comment_sentence": "iterlistitems", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "iterlistitems", "final_sentence": "iterlistitems"}
{"comment_sentence_id": 4686, "class": "ConstantPad3d", "comment_sentence": "m nn^constantpad3d 3, 35", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn constantpad3d 3 35", "final_sentence": "m nn constantpad3d 3 35"}
{"comment_sentence_id": 960, "class": "Audio", "comment_sentence": "t np^linspace 0,5,framerate 5", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "t np linspace 0 5 framerate 5", "final_sentence": "t np linspace 0 5 framerate 5"}
{"comment_sentence_id": 1517, "class": "VCardStore", "comment_sentence": "u guy", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "u guy", "final_sentence": "u guy"}
{"comment_sentence_id": 5448, "class": "OneHotCategorical", "comment_sentence": "tensor 0., 0., 0., 1.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 0 0 0 1", "final_sentence": "tensor 0 0 0 1"}
{"comment_sentence_id": 2859, "class": "FileSystemLoader", "comment_sentence": "loader filesystemloader path to templates , followlinks true", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loader filesystemloader path to templates followlinks true", "final_sentence": "loader filesystemloader path to templates followlinks true"}
{"comment_sentence_id": 2505, "class": "Context_", "comment_sentence": "happen and modifications on attr vars are allowed from generated", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "happen and modifications on attr vars are allowed from generated", "final_sentence": "happen and modifications on attr vars are allowed from generated"}
{"comment_sentence_id": 4118, "class": "TreeBuilder", "comment_sentence": "elementclass the class to use for html elements", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "elementclass the class to use for html elements", "final_sentence": "elementclass the class to use for html elements"}
{"comment_sentence_id": 4162, "class": "_OpNamespace", "comment_sentence": "3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 5683, "class": "Unfold", "comment_sentence": "where math n is the batch dimension, math c is the channel dimension,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "where math n is the batch dimension math c is the channel dimension", "final_sentence": "where math n is the batch dimension math c is the channel dimension"}
{"comment_sentence_id": 4032, "class": "SkipTo", "comment_sentence": "# use skipto to simply match everything up until the next sep", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "use skipto to simply match everything up until the next sep", "final_sentence": "use skipto to simply match everything up until the next sep"}
{"comment_sentence_id": 4034, "class": "SkipTo", "comment_sentence": "# parse action will call token^strip for each matched token, ie, the description body", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "parse action will call token strip for each matched token ie the description body", "final_sentence": "parse action will call token strip for each matched token ie the description body"}
{"comment_sentence_id": 4495, "class": "BCEWithLogitsLoss", "comment_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples", "final_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples"}
{"comment_sentence_id": 487, "class": "Migration", "comment_sentence": "run before a list of tuples of app path, migration name", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "run before a list of tuples of app path migration name", "final_sentence": "run before a list of tuples of app path migration name"}
{"comment_sentence_id": 1298, "class": "ConfigDict", "comment_sentence": "x x , str, , ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "x x str", "final_sentence": "x x str"}
{"comment_sentence_id": 4027, "class": "SkipTo", "comment_sentence": "101 critical intermittent system crash 6", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "101 critical intermittent system crash 6", "final_sentence": "101 critical intermittent system crash 6"}
{"comment_sentence_id": 3702, "class": "PrefixLoader", "comment_sentence": "default, which can be changed by setting the delimiter argument to", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "default which can be changed by setting the delimiter argument to", "final_sentence": "default which can be changed by setting the delimiter argument to"}
{"comment_sentence_id": 1770, "class": "CategoricalIndex", "comment_sentence": "categories c , b , a", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "categories c b a", "final_sentence": "categories c b a"}
{"comment_sentence_id": 3333, "class": "omdict", "comment_sentence": "interact with all items in the dictionary, including multiple items with", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "interact with all items in the dictionary including multiple items with", "final_sentence": "interact with all items in the dictionary including multiple items with"}
{"comment_sentence_id": 4500, "class": "BCEWithLogitsLoss", "comment_sentence": "criterion torch^nn.bcewithlogitsloss pos weight pos weight", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "criterion torch nn bcewithlogitsloss pos weight pos weight", "final_sentence": "criterion torch nn bcewithlogitsloss pos weight pos weight"}
{"comment_sentence_id": 1224, "class": "_MockPOP3", "comment_sentence": "evil , good", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "evil good", "final_sentence": "evil good"}
{"comment_sentence_id": 3091, "class": "Markup", "comment_sentence": "return a href foo foo a", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "return a href foo foo a", "final_sentence": "return a href foo foo a"}
{"comment_sentence_id": 4036, "class": "SkipTo", "comment_sentence": "string data^setparseaction tokenmap str^strip", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "string data setparseaction tokenmap str strip", "final_sentence": "string data setparseaction tokenmap str strip"}
{"comment_sentence_id": 1581, "class": "BooleanArray", "comment_sentence": "func pandas^array specifying dtype boolean see examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "func pandas array specifying dtype boolean see examples", "final_sentence": "func pandas array specifying dtype boolean see examples"}
{"comment_sentence_id": 1518, "class": "VCardStore", "comment_sentence": "cards can be removed using del vcards", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "cards can be removed using del vcards", "final_sentence": "cards can be removed using del vcards"}
{"comment_sentence_id": 387, "class": "Individual", "comment_sentence": "it won t be registered with the admin, so the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it won t be registered with the admin so the", "final_sentence": "it won t be registered with the admin so the"}
{"comment_sentence_id": 2273, "class": "StringArray", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1312, "class": "ConfigDict", "comment_sentence": ", vodka", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vodka", "final_sentence": "vodka"}
{"comment_sentence_id": 2450, "class": "CaseInsensitiveDict", "comment_sentence": "however, querying and contains", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "however querying and contains", "final_sentence": "however querying and contains"}
{"comment_sentence_id": 22, "class": "Atomic", "comment_sentence": "exit commits the transaction or releases the savepoint on normal exit,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "exit commits the transaction or releases the savepoint on normal exit", "final_sentence": "exit commits the transaction or releases the savepoint on normal exit"}
{"comment_sentence_id": 2460, "class": "CaseInsensitiveDict", "comment_sentence": "operations are given keys that have equal ^lower s, the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "operations are given keys that have equal lower s the", "final_sentence": "operations are given keys that have equal lower s the"}
{"comment_sentence_id": 2277, "class": "StringArray", "comment_sentence": "this is , some text , na, data.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this is some text na data", "final_sentence": "this is some text na data"}
{"comment_sentence_id": 3515, "class": "ParseResults", "comment_sentence": "date str integer^setresultsname year", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "date str integer setresultsname year", "final_sentence": "date str integer setresultsname year"}
{"comment_sentence_id": 968, "class": "Audio", "comment_sentence": "audio url http www^w3schools^com html horse^ogg", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "audio url http www w3schools com html horse ogg", "final_sentence": "audio url http www w3schools com html horse ogg"}
{"comment_sentence_id": 972, "class": "Audio", "comment_sentence": ".", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 5297, "class": "Module", "comment_sentence": "init", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "init", "final_sentence": "init"}
{"comment_sentence_id": 4496, "class": "BCEWithLogitsLoss", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 5058, "class": "EmbeddingBag", "comment_sentence": "with mode max is equivalent to class torch^nn.embedding followed by torch^max dim 0 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "with mode max is equivalent to class torch nn embedding followed by torch max dim 0", "final_sentence": "with mode max is equivalent to class torch nn embedding followed by torch max dim 0"}
{"comment_sentence_id": 3733, "class": "Request", "comment_sentence": "param url url to send.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param url url to send", "final_sentence": "param url url to send"}
{"comment_sentence_id": 1849, "class": "ExcelFile", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 1652, "class": "CategoricalDtype", "comment_sentence": "used in operations that combine categoricals, eg astype, and will resolve to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "used in operations that combine categoricals eg astype and will resolve to", "final_sentence": "used in operations that combine categoricals eg astype and will resolve to"}
{"comment_sentence_id": 3317, "class": "omdict", "comment_sentence": "this means that omdict retains method parity with dict, and a dict", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this means that omdict retains method parity with dict and a dict", "final_sentence": "this means that omdict retains method parity with dict and a dict"}
{"comment_sentence_id": 1133, "class": "MyFrame", "comment_sentence": "it just shows a few controls on a wxpanel,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it just shows a few controls on a wxpanel", "final_sentence": "it just shows a few controls on a wxpanel"}
{"comment_sentence_id": 5061, "class": "EmbeddingBag", "comment_sentence": "embeddingbag also supports per sample weights as an argument to the forward", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "embeddingbag also supports per sample weights as an argument to the forward", "final_sentence": "embeddingbag also supports per sample weights as an argument to the forward"}
{"comment_sentence_id": 2646, "class": "Environment", "comment_sentence": "as of jinja 24 this can also", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as of jinja 24 this can also", "final_sentence": "as of jinja 24 this can also"}
{"comment_sentence_id": 4520, "class": "BCEWithLogitsLoss", "comment_sentence": "on attr size average .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on attr size average", "final_sentence": "on attr size average"}
{"comment_sentence_id": 4517, "class": "BCEWithLogitsLoss", "comment_sentence": "reduce bool, optional deprecated see attr reduction .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "reduce bool optional deprecated see attr reduction", "final_sentence": "reduce bool optional deprecated see attr reduction"}
{"comment_sentence_id": 4527, "class": "BCEWithLogitsLoss", "comment_sentence": "mean the sum of the output will be divided by the number of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mean the sum of the output will be divided by the number of", "final_sentence": "mean the sum of the output will be divided by the number of"}
{"comment_sentence_id": 949, "class": "Audio", "comment_sentence": "whether audio should be normalized rescaled to the maximum possible", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether audio should be normalized rescaled to the maximum possible", "final_sentence": "whether audio should be normalized rescaled to the maximum possible"}
{"comment_sentence_id": 1894, "class": "IntegerArray", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 1993, "class": "PlotAccessor", "comment_sentence": "y label, position or list of label, positions, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "y label position or list of label positions default none", "final_sentence": "y label position or list of label positions default none"}
{"comment_sentence_id": 1848, "class": "ExcelFile", "comment_sentence": "see read excel for more documentation", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see read excel for more documentation", "final_sentence": "see read excel for more documentation"}
{"comment_sentence_id": 3828, "class": "Retry", "comment_sentence": "param int connect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param int connect", "final_sentence": "param int connect"}
{"comment_sentence_id": 2616, "class": "Environment", "comment_sentence": "the default is n which is a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the default is n which is a", "final_sentence": "the default is n which is a"}
{"comment_sentence_id": 1456, "class": "ListTags", "comment_sentence": "list tags", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list tags", "final_sentence": "list tags"}
{"comment_sentence_id": 4461, "class": "BCEWithLogitsLoss", "comment_sentence": "class.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class", "final_sentence": "class"}
{"comment_sentence_id": 270, "class": "Client", "comment_sentence": "this is not intended as a replacement for twill selenium or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is not intended as a replacement for twill selenium or", "final_sentence": "this is not intended as a replacement for twill selenium or"}
{"comment_sentence_id": 1646, "class": "CategoricalDtype", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 5585, "class": "Task", "comment_sentence": "a task is composed of an execution step and zero or more outputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a task is composed of an execution step and zero or more outputs", "final_sentence": "a task is composed of an execution step and zero or more outputs"}
{"comment_sentence_id": 2609, "class": "Environment", "comment_sentence": "if this is set to true leading spaces and tabs are stripped", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if this is set to true leading spaces and tabs are stripped", "final_sentence": "if this is set to true leading spaces and tabs are stripped"}
{"comment_sentence_id": 2673, "class": "Environment", "comment_sentence": "bytecode cache", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "bytecode cache", "final_sentence": "bytecode cache"}
{"comment_sentence_id": 504, "class": "MigrationGraph", "comment_sentence": "represent the digraph of all migrations in a project.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represent the digraph of all migrations in a project", "final_sentence": "represent the digraph of all migrations in a project"}
{"comment_sentence_id": 2338, "class": "TermValue", "comment_sentence": "hold a term value the we use to construct a condition filter", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "hold a term value the we use to construct a condition filter", "final_sentence": "hold a term value the we use to construct a condition filter"}
{"comment_sentence_id": 1266, "class": "AutoTlsConnBroker", "comment_sentence": "least do the ssl handshake here so we can record info about it.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "least do the ssl handshake here so we can record info about it", "final_sentence": "least do the ssl handshake here so we can record info about it"}
{"comment_sentence_id": 2269, "class": "StringArray", "comment_sentence": "the string methods are available on series backed by", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string methods are available on series backed by", "final_sentence": "the string methods are available on series backed by"}
{"comment_sentence_id": 378, "class": "ImageFileDescriptor", "comment_sentence": "assigning the width height to the width field height field, if appropriate.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "assigning the width height to the width field height field if appropriate", "final_sentence": "assigning the width height to the width field height field if appropriate"}
{"comment_sentence_id": 2436, "class": "CallBlock", "comment_sentence": "the unnamed macro as caller argument this node holds.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the unnamed macro as caller argument this node holds", "final_sentence": "the unnamed macro as caller argument this node holds"}
{"comment_sentence_id": 4467, "class": "BCEWithLogitsLoss", "comment_sentence": "ell x, y l l 1, dots,l n ^ top, quad", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ell x y l l 1 dots l n top quad", "final_sentence": "ell x y l l 1 dots l n top quad"}
{"comment_sentence_id": 5017, "class": "DiagonalTensor", "comment_sentence": "with the pytorch dispatch system happens via the torch function", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "with the pytorch dispatch system happens via the torch function", "final_sentence": "with the pytorch dispatch system happens via the torch function"}
{"comment_sentence_id": 4774, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 819, "class": "TemplateDoesNotExist", "comment_sentence": "reason the template wasn t found.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "reason the template wasn t found", "final_sentence": "reason the template wasn t found"}
{"comment_sentence_id": 1165, "class": "TermColors", "comment_sentence": "confused by color escapes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "confused by color escapes", "final_sentence": "confused by color escapes"}
{"comment_sentence_id": 3883, "class": "Retry", "comment_sentence": "param tuple history the history of the request encountered during", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param tuple history the history of the request encountered during", "final_sentence": "param tuple history the history of the request encountered during"}
{"comment_sentence_id": 4771, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 5071, "class": "EmbeddingBag", "comment_sentence": "max norm float, optional if given, each embedding vector with norm larger than attr max norm", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "max norm float optional if given each embedding vector with norm larger than attr max norm", "final_sentence": "max norm float optional if given each embedding vector with norm larger than attr max norm"}
{"comment_sentence_id": 4017, "class": "SkipTo", "comment_sentence": "the skipped text and target expression are returned as a 2 element list .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the skipped text and target expression are returned as a 2 element list", "final_sentence": "the skipped text and target expression are returned as a 2 element list"}
{"comment_sentence_id": 2670, "class": "Environment", "comment_sentence": "will reload the template.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "will reload the template", "final_sentence": "will reload the template"}
{"comment_sentence_id": 1552, "class": "AccessorCallableDocumenter", "comment_sentence": "this documenter lets us removes .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this documenter lets us removes", "final_sentence": "this documenter lets us removes"}
{"comment_sentence_id": 1163, "class": "TermColors", "comment_sentence": "also defines a nocolor escape which is just the null", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "also defines a nocolor escape which is just the null", "final_sentence": "also defines a nocolor escape which is just the null"}
{"comment_sentence_id": 2584, "class": "Environment", "comment_sentence": "defaults to .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "defaults to", "final_sentence": "defaults to"}
{"comment_sentence_id": 789, "class": "SpatialRefSysMixin", "comment_sentence": "the spatialrefsysmixin is a class used by the database dependent", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the spatialrefsysmixin is a class used by the database dependent", "final_sentence": "the spatialrefsysmixin is a class used by the database dependent"}
{"comment_sentence_id": 2877, "class": "FollowedBy", "comment_sentence": "lookahead matching of the given parse expression.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lookahead matching of the given parse expression", "final_sentence": "lookahead matching of the given parse expression"}
{"comment_sentence_id": 5059, "class": "EmbeddingBag", "comment_sentence": "however, class torch^nn.embeddingbag is much more time and memory efficient than using a chain of these", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "however class torch nn embeddingbag is much more time and memory efficient than using a chain of these", "final_sentence": "however class torch nn embeddingbag is much more time and memory efficient than using a chain of these"}
{"comment_sentence_id": 808, "class": "SuccessMessageMixin", "comment_sentence": "add a success message on successful form submission.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "add a success message on successful form submission", "final_sentence": "add a success message on successful form submission"}
{"comment_sentence_id": 3615, "class": "Path", "comment_sentence": "param dir okay controls if a directory is a possible value.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param dir okay controls if a directory is a possible value", "final_sentence": "param dir okay controls if a directory is a possible value"}
{"comment_sentence_id": 1428, "class": "ConfigureMailboxes", "comment_sentence": "and configured for automatic indexing.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and configured for automatic indexing", "final_sentence": "and configured for automatic indexing"}
{"comment_sentence_id": 3021, "class": "InternalName", "comment_sentence": "yourself but the parser provides a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "yourself but the parser provides a", "final_sentence": "yourself but the parser provides a"}
{"comment_sentence_id": 3833, "class": "Retry", "comment_sentence": "param int read", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param int read", "final_sentence": "param int read"}
{"comment_sentence_id": 1723, "class": "CategoricalIndex", "comment_sentence": "if not given here or in dtype , the resulting", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if not given here or in dtype the resulting", "final_sentence": "if not given here or in dtype the resulting"}
{"comment_sentence_id": 1158, "class": "TBTools", "comment_sentence": "basic tools used by all traceback printer classes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "basic tools used by all traceback printer classes", "final_sentence": "basic tools used by all traceback printer classes"}
{"comment_sentence_id": 3742, "class": "Request", "comment_sentence": "if a dictionary or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a dictionary or", "final_sentence": "if a dictionary or"}
{"comment_sentence_id": 3819, "class": "Retry", "comment_sentence": "param int total", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param int total", "final_sentence": "param int total"}
{"comment_sentence_id": 553, "class": "MigrationLoader", "comment_sentence": "new migration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "new migration", "final_sentence": "new migration"}
{"comment_sentence_id": 1102, "class": "Magics", "comment_sentence": "shell functions which can be reached as %function name.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "shell functions which can be reached as function name", "final_sentence": "shell functions which can be reached as function name"}
{"comment_sentence_id": 314, "class": "CustomHeaderRemoteUserTest", "comment_sentence": "tests a custom remoteusermiddleware subclass with custom http auth user", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests a custom remoteusermiddleware subclass with custom http auth user", "final_sentence": "tests a custom remoteusermiddleware subclass with custom http auth user"}
{"comment_sentence_id": 5095, "class": "EmbeddingBag", "comment_sentence": "attr per index weights tensor, optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr per index weights tensor optional", "final_sentence": "attr per index weights tensor optional"}
{"comment_sentence_id": 5090, "class": "EmbeddingBag", "comment_sentence": "supported when mode max .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "supported when mode max", "final_sentence": "supported when mode max"}
{"comment_sentence_id": 3731, "class": "Request", "comment_sentence": "used to prepare a class preparedrequest preparedrequest , which is sent to the server.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "used to prepare a class preparedrequest preparedrequest which is sent to the server", "final_sentence": "used to prepare a class preparedrequest preparedrequest which is sent to the server"}
{"comment_sentence_id": 1745, "class": "CategoricalIndex", "comment_sentence": "as unordered", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as unordered", "final_sentence": "as unordered"}
{"comment_sentence_id": 5235, "class": "LastNWindowCollector", "comment_sentence": "collect last n samples from input record.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "collect last n samples from input record", "final_sentence": "collect last n samples from input record"}
{"comment_sentence_id": 1709, "class": "CategoricalIndex", "comment_sentence": "are not possible.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "are not possible", "final_sentence": "are not possible"}
{"comment_sentence_id": 2026, "class": "PlotAccessor", "comment_sentence": "use log scaling or symlog scaling on x axis.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use log scaling or symlog scaling on x axis", "final_sentence": "use log scaling or symlog scaling on x axis"}
{"comment_sentence_id": 1472, "class": "OldPostingList", "comment_sentence": "a posting list is a map of search terms to message ids.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a posting list is a map of search terms to message ids", "final_sentence": "a posting list is a map of search terms to message ids"}
{"comment_sentence_id": 1896, "class": "IntegerArray", "comment_sentence": "returns", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 914, "class": "Audio", "comment_sentence": "display function, it will result in audio controls being displayed", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "display function it will result in audio controls being displayed", "final_sentence": "display function it will result in audio controls being displayed"}
{"comment_sentence_id": 2543, "class": "CookieConflictError", "comment_sentence": "use ^get and ^set and include domain and path args in order to be more specific.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use get and set and include domain and path args in order to be more specific", "final_sentence": "use get and set and include domain and path args in order to be more specific"}
{"comment_sentence_id": 3627, "class": "Path", "comment_sentence": "param path type optionally a string type that should be used to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param path type optionally a string type that should be used to", "final_sentence": "param path type optionally a string type that should be used to"}
{"comment_sentence_id": 1888, "class": "IntegerArray", "comment_sentence": "mask numpy^ndarray", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mask numpy ndarray", "final_sentence": "mask numpy ndarray"}
{"comment_sentence_id": 5077, "class": "EmbeddingBag", "comment_sentence": "default false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default false", "final_sentence": "default false"}
{"comment_sentence_id": 1215, "class": "_MockPOP3", "comment_sentence": "base mock that pretends to be a poplib pop3 connection.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base mock that pretends to be a poplib pop3 connection", "final_sentence": "base mock that pretends to be a poplib pop3 connection"}
{"comment_sentence_id": 1725, "class": "CategoricalIndex", "comment_sentence": "dtype categoricaldtype or category , optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dtype categoricaldtype or category optional", "final_sentence": "dtype categoricaldtype or category optional"}
{"comment_sentence_id": 1962, "class": "IntervalDtype", "comment_sentence": "the dtype of the interval bounds.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the dtype of the interval bounds", "final_sentence": "the dtype of the interval bounds"}
{"comment_sentence_id": 4487, "class": "BCEWithLogitsLoss", "comment_sentence": "1 y n,c cdot log 1 sigma x n,c right ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "1 y n c cdot log 1 sigma x n c right", "final_sentence": "1 y n c cdot log 1 sigma x n c right"}
{"comment_sentence_id": 4373, "class": "BatchNorm1d", "comment_sentence": "on n, l slices, it s common terminology to call this temporal batch normalization.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on n l slices it s common terminology to call this temporal batch normalization", "final_sentence": "on n l slices it s common terminology to call this temporal batch normalization"}
{"comment_sentence_id": 426, "class": "ListMixin", "comment_sentence": "if left undefined, all mutations will result in rebuilding", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if left undefined all mutations will result in rebuilding", "final_sentence": "if left undefined all mutations will result in rebuilding"}
{"comment_sentence_id": 2615, "class": "Environment", "comment_sentence": "n or r n .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "n or r n", "final_sentence": "n or r n"}
{"comment_sentence_id": 1142, "class": "Struct", "comment_sentence": "a dict subclass with attribute style access.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a dict subclass with attribute style access", "final_sentence": "a dict subclass with attribute style access"}
{"comment_sentence_id": 3873, "class": "Retry", "comment_sentence": "it will never be longer", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it will never be longer", "final_sentence": "it will never be longer"}
{"comment_sentence_id": 1274, "class": "ConfigDict", "comment_sentence": "1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 371, "class": "GZipMiddleware", "comment_sentence": "on the accept encoding header.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on the accept encoding header", "final_sentence": "on the accept encoding header"}
{"comment_sentence_id": 2606, "class": "Environment", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 1844, "class": "DataIndexableCol", "comment_sentence": "represent a data column that can be indexed", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represent a data column that can be indexed", "final_sentence": "represent a data column that can be indexed"}
{"comment_sentence_id": 4754, "class": "Conv3d", "comment_sentence": "out channels int number of channels produced by the convolution", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "out channels int number of channels produced by the convolution", "final_sentence": "out channels int number of channels produced by the convolution"}
{"comment_sentence_id": 3990, "class": "Session", "comment_sentence": "a requests session.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a requests session", "final_sentence": "a requests session"}
{"comment_sentence_id": 418, "class": "ListMixin", "comment_sentence": "function set list self, length, items", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "function set list self length items", "final_sentence": "function set list self length items"}
{"comment_sentence_id": 1272, "class": "ConfigDict", "comment_sentence": "and what their defaults are and what they are for.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and what their defaults are and what they are for", "final_sentence": "and what their defaults are and what they are for"}
{"comment_sentence_id": 5702, "class": "Unfold", "comment_sentence": "how the sliding blocks are retrieved.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "how the sliding blocks are retrieved", "final_sentence": "how the sliding blocks are retrieved"}
{"comment_sentence_id": 2588, "class": "Environment", "comment_sentence": "comment start string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "comment start string", "final_sentence": "comment start string"}
{"comment_sentence_id": 3836, "class": "Retry", "comment_sentence": "request may have side effects.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "request may have side effects", "final_sentence": "request may have side effects"}
{"comment_sentence_id": 3856, "class": "Retry", "comment_sentence": "see attr retry^default method whitelist .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see attr retry default method whitelist", "final_sentence": "see attr retry default method whitelist"}
{"comment_sentence_id": 70, "class": "AutoFieldMeta", "comment_sentence": "when these issues have been addressed, this metaclass could be used to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when these issues have been addressed this metaclass could be used to", "final_sentence": "when these issues have been addressed this metaclass could be used to"}
{"comment_sentence_id": 2445, "class": "CaseInsensitiveDict", "comment_sentence": "all keys are expected to be strings.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "all keys are expected to be strings", "final_sentence": "all keys are expected to be strings"}
{"comment_sentence_id": 2342, "class": "TestFromArrays", "comment_sentence": "tests specific to intervalindex^from arrays", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests specific to intervalindex from arrays", "final_sentence": "tests specific to intervalindex from arrays"}
{"comment_sentence_id": 4304, "class": "AdaptiveMaxPool3d", "comment_sentence": "return indices if true , will return the indices along with the outputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "return indices if true will return the indices along with the outputs", "final_sentence": "return indices if true will return the indices along with the outputs"}
{"comment_sentence_id": 4514, "class": "BCEWithLogitsLoss", "comment_sentence": "ignored", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 1999, "class": "PlotAccessor", "comment_sentence": "line line plot default", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "line line plot default", "final_sentence": "line line plot default"}
{"comment_sentence_id": 2512, "class": "Context_", "comment_sentence": "getitem , contains .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "getitem contains", "final_sentence": "getitem contains"}
{"comment_sentence_id": 3667, "class": "PoolManager", "comment_sentence": "param num pools", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param num pools", "final_sentence": "param num pools"}
{"comment_sentence_id": 2627, "class": "Environment", "comment_sentence": "as strings or extension classes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as strings or extension classes", "final_sentence": "as strings or extension classes"}
{"comment_sentence_id": 5728, "class": "Unfold", "comment_sentence": "large tensor by summing all values from all containing blocks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "large tensor by summing all values from all containing blocks", "final_sentence": "large tensor by summing all values from all containing blocks"}
{"comment_sentence_id": 2578, "class": "Environment", "comment_sentence": "defaults to % .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "defaults to", "final_sentence": "defaults to"}
{"comment_sentence_id": 3860, "class": "Retry", "comment_sentence": "a retry is initiated if the request method is in method whitelist", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a retry is initiated if the request method is in method whitelist", "final_sentence": "a retry is initiated if the request method is in method whitelist"}
{"comment_sentence_id": 3870, "class": "Retry", "comment_sentence": "if the backoff factor is 01, then func ^sleep will sleep", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the backoff factor is 01 then func sleep will sleep", "final_sentence": "if the backoff factor is 01 then func sleep will sleep"}
{"comment_sentence_id": 3832, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 1470, "class": "MoveFilter", "comment_sentence": "move an auto tagging rule", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "move an auto tagging rule", "final_sentence": "move an auto tagging rule"}
{"comment_sentence_id": 5106, "class": "EmbeddingBag", "comment_sentence": "having b bags.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "having b bags", "final_sentence": "having b bags"}
{"comment_sentence_id": 2250, "class": "StringArray", "comment_sentence": "parts of the api may change without warning.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parts of the api may change without warning", "final_sentence": "parts of the api may change without warning"}
{"comment_sentence_id": 4387, "class": "BatchNorm1d", "comment_sentence": "track running stats a boolean value that when set to true , this", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "track running stats a boolean value that when set to true this", "final_sentence": "track running stats a boolean value that when set to true this"}
{"comment_sentence_id": 5733, "class": "Unfold", "comment_sentence": "in general, folding and unfolding operations are related as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in general folding and unfolding operations are related as", "final_sentence": "in general folding and unfolding operations are related as"}
{"comment_sentence_id": 1174, "class": "UserMagics", "comment_sentence": "placeholder for user defined magics to be added at runtime.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "placeholder for user defined magics to be added at runtime", "final_sentence": "placeholder for user defined magics to be added at runtime"}
{"comment_sentence_id": 2638, "class": "Environment", "comment_sentence": "expression before it is output.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "expression before it is output", "final_sentence": "expression before it is output"}
{"comment_sentence_id": 818, "class": "TemplateDoesNotExist", "comment_sentence": "origin is an origin object or duck type and status is a string with the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "origin is an origin object or duck type and status is a string with the", "final_sentence": "origin is an origin object or duck type and status is a string with the"}
{"comment_sentence_id": 3852, "class": "Retry", "comment_sentence": "set of uppercased http method verbs that we should retry on.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set of uppercased http method verbs that we should retry on", "final_sentence": "set of uppercased http method verbs that we should retry on"}
{"comment_sentence_id": 725, "class": "ProxyModelInheritanceTests", "comment_sentence": "this test creates two dummy", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this test creates two dummy", "final_sentence": "this test creates two dummy"}
{"comment_sentence_id": 4494, "class": "BCEWithLogitsLoss", "comment_sentence": "then pos weight for the class should be equal to math frac 300 100 3 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "then pos weight for the class should be equal to math frac 300 100 3", "final_sentence": "then pos weight for the class should be equal to math frac 300 100 3"}
{"comment_sentence_id": 4367, "class": "BatchNorm1d", "comment_sentence": "mathematically, the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mathematically the", "final_sentence": "mathematically the"}
{"comment_sentence_id": 4018, "class": "SkipTo", "comment_sentence": "ignore default none used to define grammars typically quoted strings and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ignore default none used to define grammars typically quoted strings and", "final_sentence": "ignore default none used to define grammars typically quoted strings and"}
{"comment_sentence_id": 2041, "class": "PlotAccessor", "comment_sentence": "rotation for ticks xticks for vertical, yticks for horizontal", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rotation for ticks xticks for vertical yticks for horizontal", "final_sentence": "rotation for ticks xticks for vertical yticks for horizontal"}
{"comment_sentence_id": 943, "class": "Audio", "comment_sentence": "the sampling rate of the raw data.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the sampling rate of the raw data", "final_sentence": "the sampling rate of the raw data"}
{"comment_sentence_id": 2571, "class": "Environment", "comment_sentence": "instances of this class may be modified if", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "instances of this class may be modified if", "final_sentence": "instances of this class may be modified if"}
{"comment_sentence_id": 2263, "class": "StringArray", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 4660, "class": "Caffe2OperatorTestCase", "comment_sentence": "test config a namedtuple includes test name, input shape, tag, run backward.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "test config a namedtuple includes test name input shape tag run backward", "final_sentence": "test config a namedtuple includes test name input shape tag run backward"}
{"comment_sentence_id": 3064, "class": "LRUCache", "comment_sentence": "scale.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "scale", "final_sentence": "scale"}
{"comment_sentence_id": 3846, "class": "Retry", "comment_sentence": "param int status", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param int status", "final_sentence": "param int status"}
{"comment_sentence_id": 2042, "class": "PlotAccessor", "comment_sentence": "plots .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "plots", "final_sentence": "plots"}
{"comment_sentence_id": 2272, "class": "StringArray", "comment_sentence": "stringarray returns a booleanarray for comparison methods.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "stringarray returns a booleanarray for comparison methods", "final_sentence": "stringarray returns a booleanarray for comparison methods"}
{"comment_sentence_id": 5563, "class": "StackTransform", "comment_sentence": "transform functor that applies a sequence of transforms tseq", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "transform functor that applies a sequence of transforms tseq", "final_sentence": "transform functor that applies a sequence of transforms tseq"}
{"comment_sentence_id": 920, "class": "Audio", "comment_sentence": "numpy 2d array containing waveforms for each channel.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "numpy 2d array containing waveforms for each channel", "final_sentence": "numpy 2d array containing waveforms for each channel"}
{"comment_sentence_id": 5092, "class": "EmbeddingBag", "comment_sentence": "weight tensor the learnable weights of the module of shape num embeddings, embedding dim", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim", "final_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim"}
{"comment_sentence_id": 5081, "class": "EmbeddingBag", "comment_sentence": "sum computes the weighted sum, taking attr per sample weights", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sum computes the weighted sum taking attr per sample weights", "final_sentence": "sum computes the weighted sum taking attr per sample weights"}
{"comment_sentence_id": 5111, "class": "EmbeddingBag", "comment_sentence": "if specified, attr per sample weights", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if specified attr per sample weights", "final_sentence": "if specified attr per sample weights"}
{"comment_sentence_id": 1998, "class": "PlotAccessor", "comment_sentence": "the kind of plot to produce", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the kind of plot to produce", "final_sentence": "the kind of plot to produce"}
{"comment_sentence_id": 2036, "class": "PlotAccessor", "comment_sentence": "yticks sequence", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "yticks sequence", "final_sentence": "yticks sequence"}
{"comment_sentence_id": 4661, "class": "Caffe2OperatorTestCase", "comment_sentence": "when run backward is false, the run forward method will be executed, otherwise", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when run backward is false the run forward method will be executed otherwise", "final_sentence": "when run backward is false the run forward method will be executed otherwise"}
{"comment_sentence_id": 2443, "class": "CaseInsensitiveDict", "comment_sentence": "also", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "also", "final_sentence": "also"}
{"comment_sentence_id": 4515, "class": "BCEWithLogitsLoss", "comment_sentence": "when reduce is false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when reduce is false", "final_sentence": "when reduce is false"}
{"comment_sentence_id": 3046, "class": "KeyType", "comment_sentence": "quotes following the same escaping rules as single line stringtype.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "quotes following the same escaping rules as single line stringtype", "final_sentence": "quotes following the same escaping rules as single line stringtype"}
{"comment_sentence_id": 3778, "class": "RequirementsFileParseError", "comment_sentence": "raised when a general error occurs parsing a requirements file line.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "raised when a general error occurs parsing a requirements file line", "final_sentence": "raised when a general error occurs parsing a requirements file line"}
{"comment_sentence_id": 3798, "class": "ResourceFinder", "comment_sentence": "resource finder for file system resources.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "resource finder for file system resources", "final_sentence": "resource finder for file system resources"}
{"comment_sentence_id": 2048, "class": "PlotAccessor", "comment_sentence": "name from matplotlib.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "name from matplotlib", "final_sentence": "name from matplotlib"}
{"comment_sentence_id": 2033, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 300, "class": "CryptPasswordHasher", "comment_sentence": "password hashing using unix crypt not recommended", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "password hashing using unix crypt not recommended", "final_sentence": "password hashing using unix crypt not recommended"}
{"comment_sentence_id": 5934, "class": "PreparedRequest", "comment_sentence": "containing the exact bytes that will be sent to the server.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "containing the exact bytes that will be sent to the server", "final_sentence": "containing the exact bytes that will be sent to the server"}
{"comment_sentence_id": 3622, "class": "Path", "comment_sentence": "it", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it", "final_sentence": "it"}
{"comment_sentence_id": 2555, "class": "DirectedGraph", "comment_sentence": "a graph structure with directed edges.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a graph structure with directed edges", "final_sentence": "a graph structure with directed edges"}
{"comment_sentence_id": 5113, "class": "EmbeddingBag", "comment_sentence": "attr offsets , if those are not none .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr offsets if those are not none", "final_sentence": "attr offsets if those are not none"}
{"comment_sentence_id": 2644, "class": "Environment", "comment_sentence": "for more details about autoescaping see", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for more details about autoescaping see", "final_sentence": "for more details about autoescaping see"}
{"comment_sentence_id": 3620, "class": "Path", "comment_sentence": "this means", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this means", "final_sentence": "this means"}
{"comment_sentence_id": 1729, "class": "CategoricalIndex", "comment_sentence": "copy bool, default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 733, "class": "RawPostDataException", "comment_sentence": "files, etc.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "files etc", "final_sentence": "files etc"}
{"comment_sentence_id": 4788, "class": "Conv3d", "comment_sentence": "if attr bias is true ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr bias is true", "final_sentence": "if attr bias is true"}
{"comment_sentence_id": 3417, "class": "Option", "comment_sentence": "multiple times and recorded.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "multiple times and recorded", "final_sentence": "multiple times and recorded"}
{"comment_sentence_id": 2603, "class": "Environment", "comment_sentence": "trim blocks", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "trim blocks", "final_sentence": "trim blocks"}
{"comment_sentence_id": 2020, "class": "PlotAccessor", "comment_sentence": "axis grid lines.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "axis grid lines", "final_sentence": "axis grid lines"}
{"comment_sentence_id": 2423, "class": "Bucket", "comment_sentence": "it s created", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it s created", "final_sentence": "it s created"}
{"comment_sentence_id": 2829, "class": "FileMetadata", "comment_sentence": "the provided location.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the provided location", "final_sentence": "the provided location"}
{"comment_sentence_id": 3628, "class": "Path", "comment_sentence": "represent the path.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represent the path", "final_sentence": "represent the path"}
{"comment_sentence_id": 5323, "class": "MultiLabelMarginLoss", "comment_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor", "final_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor"}
{"comment_sentence_id": 2613, "class": "Environment", "comment_sentence": "the sequence that starts a newline.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the sequence that starts a newline", "final_sentence": "the sequence that starts a newline"}
{"comment_sentence_id": 1275, "class": "ConfigDict", "comment_sentence": "a human readable description of what the variable is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a human readable description of what the variable is", "final_sentence": "a human readable description of what the variable is"}
{"comment_sentence_id": 3866, "class": "Retry", "comment_sentence": "delay .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "delay", "final_sentence": "delay"}
{"comment_sentence_id": 3003, "class": "HTTPError", "comment_sentence": "an http error occurred.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an http error occurred", "final_sentence": "an http error occurred"}
{"comment_sentence_id": 2017, "class": "PlotAccessor", "comment_sentence": "if a list is passed and subplots is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a list is passed and subplots is", "final_sentence": "if a list is passed and subplots is"}
{"comment_sentence_id": 4349, "class": "BatchNorm1d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 2579, "class": "Environment", "comment_sentence": "block end string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "block end string", "final_sentence": "block end string"}
{"comment_sentence_id": 782, "class": "SessionStore", "comment_sentence": "a database session store, that handles updating the account id column", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a database session store that handles updating the account id column", "final_sentence": "a database session store that handles updating the account id column"}
{"comment_sentence_id": 5064, "class": "EmbeddingBag", "comment_sentence": "reduction as specified by mode .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "reduction as specified by mode", "final_sentence": "reduction as specified by mode"}
{"comment_sentence_id": 3392, "class": "Option", "comment_sentence": "value is a string, it shows the string instead of the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "value is a string it shows the string instead of the", "final_sentence": "value is a string it shows the string instead of the"}
{"comment_sentence_id": 3739, "class": "Request", "comment_sentence": "take place.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "take place", "final_sentence": "take place"}
{"comment_sentence_id": 3672, "class": "PoolManager", "comment_sentence": "explicitly.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "explicitly", "final_sentence": "explicitly"}
{"comment_sentence_id": 752, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "by genericrelation.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by genericrelation", "final_sentence": "by genericrelation"}
{"comment_sentence_id": 4724, "class": "Conv3d", "comment_sentence": "attr groups .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr groups", "final_sentence": "attr groups"}
{"comment_sentence_id": 3427, "class": "Option", "comment_sentence": "param hidden hide this option from help outputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param hidden hide this option from help outputs", "final_sentence": "param hidden hide this option from help outputs"}
{"comment_sentence_id": 5068, "class": "EmbeddingBag", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 951, "class": "Audio", "comment_sentence": "default is true .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default is true", "final_sentence": "default is true"}
{"comment_sentence_id": 936, "class": "Audio", "comment_sentence": "should the audio data be embedded using a data uri true or should", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "should the audio data be embedded using a data uri true or should", "final_sentence": "should the audio data be embedded using a data uri true or should"}
{"comment_sentence_id": 790, "class": "SpatialRefSysMixin", "comment_sentence": "spatialrefsys objects to reduce redundant code.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "spatialrefsys objects to reduce redundant code", "final_sentence": "spatialrefsys objects to reduce redundant code"}
{"comment_sentence_id": 915, "class": "Audio", "comment_sentence": "in the frontend only works in the notebook .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in the frontend only works in the notebook", "final_sentence": "in the frontend only works in the notebook"}
{"comment_sentence_id": 690, "class": "Permission", "comment_sentence": "users and groups of users.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "users and groups of users", "final_sentence": "users and groups of users"}
{"comment_sentence_id": 4889, "class": "CyclicLR", "comment_sentence": "or per cycle basis.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "or per cycle basis", "final_sentence": "or per cycle basis"}
{"comment_sentence_id": 2827, "class": "FileMetadata", "comment_sentence": "this provider rejects all data and metadata requests except for pkg info,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this provider rejects all data and metadata requests except for pkg info", "final_sentence": "this provider rejects all data and metadata requests except for pkg info"}
{"comment_sentence_id": 860, "class": "UniqueAnchor", "comment_sentence": "something for other models to point at", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "something for other models to point at", "final_sentence": "something for other models to point at"}
{"comment_sentence_id": 3825, "class": "Retry", "comment_sentence": "account for unexpected edge cases and avoid infinite retry loops.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "account for unexpected edge cases and avoid infinite retry loops", "final_sentence": "account for unexpected edge cases and avoid infinite retry loops"}
{"comment_sentence_id": 4727, "class": "Conv3d", "comment_sentence": "at groups 2, the operation becomes equivalent to having two conv", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at groups 2 the operation becomes equivalent to having two conv", "final_sentence": "at groups 2 the operation becomes equivalent to having two conv"}
{"comment_sentence_id": 5748, "class": "Unfold", "comment_sentence": "where divisor is a tensor that depends only on the shape", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "where divisor is a tensor that depends only on the shape", "final_sentence": "where divisor is a tensor that depends only on the shape"}
{"comment_sentence_id": 1284, "class": "ConfigDict", "comment_sentence": "configuration data can be nested by including a dictionary of further", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "configuration data can be nested by including a dictionary of further", "final_sentence": "configuration data can be nested by including a dictionary of further"}
{"comment_sentence_id": 5005, "class": "DeQuantStub", "comment_sentence": "dequantize stub module, before calibration, this is same as identity,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dequantize stub module before calibration this is same as identity", "final_sentence": "dequantize stub module before calibration this is same as identity"}
{"comment_sentence_id": 331, "class": "EarliestOrLatestTests", "comment_sentence": "tests for the earliest and latest objects methods", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for the earliest and latest objects methods", "final_sentence": "tests for the earliest and latest objects methods"}
{"comment_sentence_id": 5096, "class": "EmbeddingBag", "comment_sentence": "if attr input is 2d of shape b, n ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr input is 2d of shape b n", "final_sentence": "if attr input is 2d of shape b n"}
{"comment_sentence_id": 635, "class": "MultiValueField", "comment_sentence": "cleaned into a single value according to self^fields.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cleaned into a single value according to self fields", "final_sentence": "cleaned into a single value according to self fields"}
{"comment_sentence_id": 3855, "class": "Retry", "comment_sentence": "same state .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "same state", "final_sentence": "same state"}
{"comment_sentence_id": 5426, "class": "NetModifier", "comment_sentence": "an abstraction class for supporting modifying a generated net.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an abstraction class for supporting modifying a generated net", "final_sentence": "an abstraction class for supporting modifying a generated net"}
{"comment_sentence_id": 1282, "class": "ConfigDict", "comment_sentence": "this", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this", "final_sentence": "this"}
{"comment_sentence_id": 8, "class": "AppConfigStub", "comment_sentence": "only provides a label and a dict of models.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only provides a label and a dict of models", "final_sentence": "only provides a label and a dict of models"}
{"comment_sentence_id": 1724, "class": "CategoricalIndex", "comment_sentence": "categorical will be unordered.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categorical will be unordered", "final_sentence": "categorical will be unordered"}
{"comment_sentence_id": 5338, "class": "MultiLabelMarginLoss", "comment_sentence": "by default,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by default", "final_sentence": "by default"}
{"comment_sentence_id": 1989, "class": "PlotAccessor", "comment_sentence": "data series or dataframe", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "data series or dataframe", "final_sentence": "data series or dataframe"}
{"comment_sentence_id": 588, "class": "ModelSignal", "comment_sentence": "signal subclass that allows the sender to be lazily specified as a string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "signal subclass that allows the sender to be lazily specified as a string", "final_sentence": "signal subclass that allows the sender to be lazily specified as a string"}
{"comment_sentence_id": 55, "class": "AtomicTests", "comment_sentence": "syntax and the bulk of the tests use the context manager syntax.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "syntax and the bulk of the tests use the context manager syntax", "final_sentence": "syntax and the bulk of the tests use the context manager syntax"}
{"comment_sentence_id": 3611, "class": "Path", "comment_sentence": "if this is not required and a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if this is not required and a", "final_sentence": "if this is not required and a"}
{"comment_sentence_id": 1990, "class": "PlotAccessor", "comment_sentence": "the object for which the method is called.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the object for which the method is called", "final_sentence": "the object for which the method is called"}
{"comment_sentence_id": 3499, "class": "ParseFatalException", "comment_sentence": "user throwable exception thrown when inconsistent parse content", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "user throwable exception thrown when inconsistent parse content", "final_sentence": "user throwable exception thrown when inconsistent parse content"}
{"comment_sentence_id": 3822, "class": "Retry", "comment_sentence": "set to none to remove this constraint and fall back on other", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to none to remove this constraint and fall back on other", "final_sentence": "set to none to remove this constraint and fall back on other"}
{"comment_sentence_id": 5097, "class": "EmbeddingBag", "comment_sentence": "it will be treated as b bags sequences each of fixed length n , and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it will be treated as b bags sequences each of fixed length n and", "final_sentence": "it will be treated as b bags sequences each of fixed length n and"}
{"comment_sentence_id": 3229, "class": "MethodDispatcher", "comment_sentence": "list like object returns the matching value", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list like object returns the matching value", "final_sentence": "list like object returns the matching value"}
{"comment_sentence_id": 2210, "class": "SelectNSeries", "comment_sentence": "implement n largest smallest for series", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implement n largest smallest for series", "final_sentence": "implement n largest smallest for series"}
{"comment_sentence_id": 4280, "class": "Adamax", "comment_sentence": "running averages of gradient and its square", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "running averages of gradient and its square", "final_sentence": "running averages of gradient and its square"}
{"comment_sentence_id": 218, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "secure password hashing using the bcrypt algorithm recommended", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "secure password hashing using the bcrypt algorithm recommended", "final_sentence": "secure password hashing using the bcrypt algorithm recommended"}
{"comment_sentence_id": 2623, "class": "Environment", "comment_sentence": "versionadded 27", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionadded 27", "final_sentence": "versionadded 27"}
{"comment_sentence_id": 2385, "class": "And", "comment_sentence": "may also be constructed using the operator, which will", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "may also be constructed using the operator which will", "final_sentence": "may also be constructed using the operator which will"}
{"comment_sentence_id": 2502, "class": "Context_", "comment_sentence": "be created by hand.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "be created by hand", "final_sentence": "be created by hand"}
{"comment_sentence_id": 5510, "class": "SGD", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 2050, "class": "PlotAccessor", "comment_sentence": "if true, plot colorbar only relevant for scatter and hexbin", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if true plot colorbar only relevant for scatter and hexbin", "final_sentence": "if true plot colorbar only relevant for scatter and hexbin"}
{"comment_sentence_id": 2047, "class": "PlotAccessor", "comment_sentence": "if string, load colormap with that", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if string load colormap with that", "final_sentence": "if string load colormap with that"}
{"comment_sentence_id": 2961, "class": "HebrewProber", "comment_sentence": "alone are meaningless.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "alone are meaningless", "final_sentence": "alone are meaningless"}
{"comment_sentence_id": 5742, "class": "Unfold", "comment_sentence": "fold nn^fold output size .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fold nn fold output size", "final_sentence": "fold nn fold output size"}
{"comment_sentence_id": 294, "class": "ConsoleDirective", "comment_sentence": "unix oriented examples.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unix oriented examples", "final_sentence": "unix oriented examples"}
{"comment_sentence_id": 2420, "class": "BrokenStdoutLoggingError", "comment_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging", "final_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging"}
{"comment_sentence_id": 1276, "class": "ConfigDict", "comment_sentence": "2", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 2265, "class": "StringArray", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 2630, "class": "Environment", "comment_sentence": "optimized", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "optimized", "final_sentence": "optimized"}
{"comment_sentence_id": 4787, "class": "Conv3d", "comment_sentence": "bias tensor the learnable bias of the module of shape out channels .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "bias tensor the learnable bias of the module of shape out channels", "final_sentence": "bias tensor the learnable bias of the module of shape out channels"}
{"comment_sentence_id": 1880, "class": "IntegerArray", "comment_sentence": "data contains a numpy integer array of the appropriate dtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "data contains a numpy integer array of the appropriate dtype", "final_sentence": "data contains a numpy integer array of the appropriate dtype"}
{"comment_sentence_id": 5745, "class": "Unfold", "comment_sentence": "then for any supported input tensor the following", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "then for any supported input tensor the following", "final_sentence": "then for any supported input tensor the following"}
{"comment_sentence_id": 2596, "class": "Environment", "comment_sentence": "statements.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "statements", "final_sentence": "statements"}
{"comment_sentence_id": 1730, "class": "CategoricalIndex", "comment_sentence": "make a copy of input ndarray.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "make a copy of input ndarray", "final_sentence": "make a copy of input ndarray"}
{"comment_sentence_id": 543, "class": "MigrationLoader", "comment_sentence": "on initialization, this class will scan those directories, and open and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on initialization this class will scan those directories and open and", "final_sentence": "on initialization this class will scan those directories and open and"}
{"comment_sentence_id": 1749, "class": "CategoricalIndex", "comment_sentence": "if the categories do not validate.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the categories do not validate", "final_sentence": "if the categories do not validate"}
{"comment_sentence_id": 5933, "class": "PreparedRequest", "comment_sentence": "the fully mutable class preparedrequest preparedrequest object,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the fully mutable class preparedrequest preparedrequest object", "final_sentence": "the fully mutable class preparedrequest preparedrequest object"}
{"comment_sentence_id": 478, "class": "MemoryFileUploadHandler", "comment_sentence": "file upload handler to stream uploads into memory used for small files .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "file upload handler to stream uploads into memory used for small files", "final_sentence": "file upload handler to stream uploads into memory used for small files"}
{"comment_sentence_id": 428, "class": "ListMixin", "comment_sentence": "function len self", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "function len self", "final_sentence": "function len self"}
{"comment_sentence_id": 2018, "class": "PlotAccessor", "comment_sentence": "true, print each item in the list above the corresponding subplot.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "true print each item in the list above the corresponding subplot", "final_sentence": "true print each item in the list above the corresponding subplot"}
{"comment_sentence_id": 5704, "class": "Unfold", "comment_sentence": "attr padding controls the amount of implicit zero paddings on both", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr padding controls the amount of implicit zero paddings on both", "final_sentence": "attr padding controls the amount of implicit zero paddings on both"}
{"comment_sentence_id": 2643, "class": "Environment", "comment_sentence": "default.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default", "final_sentence": "default"}
{"comment_sentence_id": 5513, "class": "SGD", "comment_sentence": "lr float learning rate", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lr float learning rate", "final_sentence": "lr float learning rate"}
{"comment_sentence_id": 2889, "class": "FollowedBy", "comment_sentence": "label data word followedby", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "label data word followedby", "final_sentence": "label data word followedby"}
{"comment_sentence_id": 763, "class": "SameAsLookup", "comment_sentence": "the operator is the same as operator.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the operator is the same as operator", "final_sentence": "the operator is the same as operator"}
{"comment_sentence_id": 634, "class": "MultiValueField", "comment_sentence": "its clean method takes a decompressed list of values, which are then", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "its clean method takes a decompressed list of values which are then", "final_sentence": "its clean method takes a decompressed list of values which are then"}
{"comment_sentence_id": 3319, "class": "omdict", "comment_sentence": "behave identically.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "behave identically", "final_sentence": "behave identically"}
{"comment_sentence_id": 2595, "class": "Environment", "comment_sentence": "if given and a string, this will be used as prefix for line based", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if given and a string this will be used as prefix for line based", "final_sentence": "if given and a string this will be used as prefix for line based"}
{"comment_sentence_id": 268, "class": "Client", "comment_sentence": "client objects are stateful they will retain cookie and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "client objects are stateful they will retain cookie and", "final_sentence": "client objects are stateful they will retain cookie and"}
{"comment_sentence_id": 1889, "class": "IntegerArray", "comment_sentence": "a 1 d boolean dtype array indicating missing values.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a 1 d boolean dtype array indicating missing values", "final_sentence": "a 1 d boolean dtype array indicating missing values"}
{"comment_sentence_id": 203, "class": "BaseDatabaseSchemaEditor", "comment_sentence": "renaming, index fiddling, and so on.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "renaming index fiddling and so on", "final_sentence": "renaming index fiddling and so on"}
{"comment_sentence_id": 5508, "class": "SGD", "comment_sentence": "nesterov momentum is based on the formula from", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "nesterov momentum is based on the formula from", "final_sentence": "nesterov momentum is based on the formula from"}
{"comment_sentence_id": 1476, "class": "StorageBackedLongs", "comment_sentence": "this combines storagebackeddata with pack unpacklonglist to pack", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this combines storagebackeddata with pack unpacklonglist to pack", "final_sentence": "this combines storagebackeddata with pack unpacklonglist to pack"}
{"comment_sentence_id": 1847, "class": "ExcelFile", "comment_sentence": "uses xlrd.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "uses xlrd", "final_sentence": "uses xlrd"}
{"comment_sentence_id": 253, "class": "Choices", "comment_sentence": "class for creating enumerated choices.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class for creating enumerated choices", "final_sentence": "class for creating enumerated choices"}
{"comment_sentence_id": 386, "class": "Individual", "comment_sentence": "a model with a fk to itself.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a model with a fk to itself", "final_sentence": "a model with a fk to itself"}
{"comment_sentence_id": 2816, "class": "fdspawn", "comment_sentence": "this is like pexpect^spawn but allows you to supply your own open file", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is like pexpect spawn but allows you to supply your own open file", "final_sentence": "this is like pexpect spawn but allows you to supply your own open file"}
{"comment_sentence_id": 3894, "class": "Retry", "comment_sentence": "request.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "request", "final_sentence": "request"}
{"comment_sentence_id": 2633, "class": "Environment", "comment_sentence": "undefined", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "undefined", "final_sentence": "undefined"}
{"comment_sentence_id": 3623, "class": "Path", "comment_sentence": "will not expand a tilde prefix, as this is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "will not expand a tilde prefix as this is", "final_sentence": "will not expand a tilde prefix as this is"}
{"comment_sentence_id": 1563, "class": "Base", "comment_sentence": "get kwargs from breaks to the expected format.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "get kwargs from breaks to the expected format", "final_sentence": "get kwargs from breaks to the expected format"}
{"comment_sentence_id": 4644, "class": "BuildType", "comment_sentence": "arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 823, "class": "TemplateDoesNotExist", "comment_sentence": "encapsulate multiple exceptions when loading templates from multiple", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "encapsulate multiple exceptions when loading templates from multiple", "final_sentence": "encapsulate multiple exceptions when loading templates from multiple"}
{"comment_sentence_id": 2605, "class": "Environment", "comment_sentence": "removed block, not variable tag!", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "removed block not variable tag", "final_sentence": "removed block not variable tag"}
{"comment_sentence_id": 4764, "class": "Conv3d", "comment_sentence": "groups int, optional number of blocked connections from input channels to output channels.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "groups int optional number of blocked connections from input channels to output channels", "final_sentence": "groups int optional number of blocked connections from input channels to output channels"}
{"comment_sentence_id": 116, "class": "BaseCommand", "comment_sentence": "thus, the handle method is typically the starting point for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "thus the handle method is typically the starting point for", "final_sentence": "thus the handle method is typically the starting point for"}
{"comment_sentence_id": 3875, "class": "Retry", "comment_sentence": "by default, backoff is disabled set to 0 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by default backoff is disabled set to 0", "final_sentence": "by default backoff is disabled set to 0"}
{"comment_sentence_id": 355, "class": "FallbackStorage", "comment_sentence": "try to store all messages in the first backend.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "try to store all messages in the first backend", "final_sentence": "try to store all messages in the first backend"}
{"comment_sentence_id": 3892, "class": "Retry", "comment_sentence": "sequence of headers to remove from the request when a response", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sequence of headers to remove from the request when a response", "final_sentence": "sequence of headers to remove from the request when a response"}
{"comment_sentence_id": 812, "class": "TemplateDoesNotExist", "comment_sentence": "backend", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "backend", "final_sentence": "backend"}
{"comment_sentence_id": 3390, "class": "Option", "comment_sentence": "normally, defaults are not shown.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "normally defaults are not shown", "final_sentence": "normally defaults are not shown"}
{"comment_sentence_id": 508, "class": "MigrationGraph", "comment_sentence": "merely a convention to aid file listing.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "merely a convention to aid file listing", "final_sentence": "merely a convention to aid file listing"}
{"comment_sentence_id": 306, "class": "CustomCacheKeyValidationTests", "comment_sentence": "tests for the ability to mixin a custom validate key method to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for the ability to mixin a custom validate key method to", "final_sentence": "tests for the ability to mixin a custom validate key method to"}
{"comment_sentence_id": 2582, "class": "Environment", "comment_sentence": "variable start string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "variable start string", "final_sentence": "variable start string"}
{"comment_sentence_id": 5750, "class": "Unfold", "comment_sentence": "input ones torch^ones input^shape, dtype input^dtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input ones torch ones input shape dtype input dtype", "final_sentence": "input ones torch ones input shape dtype input dtype"}
{"comment_sentence_id": 5720, "class": "Unfold", "comment_sentence": "default 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 3838, "class": "Retry", "comment_sentence": "param int redirect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param int redirect", "final_sentence": "param int redirect"}
{"comment_sentence_id": 4481, "class": "BCEWithLogitsLoss", "comment_sentence": "between 0 and 1.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "between 0 and 1", "final_sentence": "between 0 and 1"}
{"comment_sentence_id": 5754, "class": "Unfold", "comment_sentence": "other up to constant divisor .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "other up to constant divisor", "final_sentence": "other up to constant divisor"}
{"comment_sentence_id": 4722, "class": "Conv3d", "comment_sentence": "attr groups controls the connections between inputs and outputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr groups controls the connections between inputs and outputs", "final_sentence": "attr groups controls the connections between inputs and outputs"}
{"comment_sentence_id": 668, "class": "Operation", "comment_sentence": "it s responsible for both mutating the in memory model state", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it s responsible for both mutating the in memory model state", "final_sentence": "it s responsible for both mutating the in memory model state"}
{"comment_sentence_id": 400, "class": "IntFromGeom", "comment_sentence": "argument is a geometry, return type is an integer.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "argument is a geometry return type is an integer", "final_sentence": "argument is a geometry return type is an integer"}
{"comment_sentence_id": 3415, "class": "Option", "comment_sentence": "the option string contains a slash to mark two options.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the option string contains a slash to mark two options", "final_sentence": "the option string contains a slash to mark two options"}
{"comment_sentence_id": 1893, "class": "IntegerArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 5085, "class": "EmbeddingBag", "comment_sentence": "default mean", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 4466, "class": "BCEWithLogitsLoss", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 337, "class": "ErrorDict", "comment_sentence": "a collection of errors that knows how to display itself in various formats.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a collection of errors that knows how to display itself in various formats", "final_sentence": "a collection of errors that knows how to display itself in various formats"}
{"comment_sentence_id": 5741, "class": "Unfold", "comment_sentence": ", stride .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "stride", "final_sentence": "stride"}
{"comment_sentence_id": 3256, "class": "NotAny", "comment_sentence": "input string, it only verifies that the specified parse expression", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input string it only verifies that the specified parse expression", "final_sentence": "input string it only verifies that the specified parse expression"}
{"comment_sentence_id": 1575, "class": "BooleanArray", "comment_sentence": "represented by 2 numpy arrays a boolean array with the data and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represented by 2 numpy arrays a boolean array with the data and", "final_sentence": "represented by 2 numpy arrays a boolean array with the data and"}
{"comment_sentence_id": 2245, "class": "StringArray", "comment_sentence": "extension array for string data.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "extension array for string data", "final_sentence": "extension array for string data"}
{"comment_sentence_id": 1882, "class": "IntegerArray", "comment_sentence": "to construct an integerarray from generic array like input, use", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to construct an integerarray from generic array like input use", "final_sentence": "to construct an integerarray from generic array like input use"}
{"comment_sentence_id": 2656, "class": "Environment", "comment_sentence": "per default this is 400 which means", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "per default this is 400 which means", "final_sentence": "per default this is 400 which means"}
{"comment_sentence_id": 5346, "class": "MultiLabelMarginLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4393, "class": "BatchNorm1d", "comment_sentence": "input math n, c or math n, c, l", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input math n c or math n c l", "final_sentence": "input math n c or math n c l"}
{"comment_sentence_id": 3631, "class": "Path", "comment_sentence": "unicode depending on what makes most sense given the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unicode depending on what makes most sense given the", "final_sentence": "unicode depending on what makes most sense given the"}
{"comment_sentence_id": 3879, "class": "Retry", "comment_sentence": "param bool raise on status similar meaning to raise on redirect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param bool raise on status similar meaning to raise on redirect", "final_sentence": "param bool raise on status similar meaning to raise on redirect"}
{"comment_sentence_id": 3848, "class": "Retry", "comment_sentence": "these are retries made on responses, where status code matches", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "these are retries made on responses where status code matches", "final_sentence": "these are retries made on responses where status code matches"}
{"comment_sentence_id": 2271, "class": "StringArray", "comment_sentence": "notes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 419, "class": "ListMixin", "comment_sentence": "recreate the entire object.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "recreate the entire object", "final_sentence": "recreate the entire object"}
{"comment_sentence_id": 927, "class": "Audio", "comment_sentence": "url pointing to a file on the web.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "url pointing to a file on the web", "final_sentence": "url pointing to a file on the web"}
{"comment_sentence_id": 2006, "class": "PlotAccessor", "comment_sentence": "area area plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "area area plot", "final_sentence": "area area plot"}
{"comment_sentence_id": 2642, "class": "Environment", "comment_sentence": "if set to true the xml html autoescaping feature is enabled by", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if set to true the xml html autoescaping feature is enabled by", "final_sentence": "if set to true the xml html autoescaping feature is enabled by"}
{"comment_sentence_id": 3792, "class": "Resource", "comment_sentence": "not normally instantiated by user code, but rather by a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "not normally instantiated by user code but rather by a", "final_sentence": "not normally instantiated by user code but rather by a"}
{"comment_sentence_id": 93, "class": "BaseCommand", "comment_sentence": "consider using one of the subclasses defined in this file.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "consider using one of the subclasses defined in this file", "final_sentence": "consider using one of the subclasses defined in this file"}
{"comment_sentence_id": 2325, "class": "StringMethods", "comment_sentence": "patterned after python s string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "patterned after python s string", "final_sentence": "patterned after python s string"}
{"comment_sentence_id": 4016, "class": "SkipTo", "comment_sentence": "include default false if true, the target expression is also parsed", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "include default false if true the target expression is also parsed", "final_sentence": "include default false if true the target expression is also parsed"}
{"comment_sentence_id": 5722, "class": "Unfold", "comment_sentence": "attr stride is an int or a tuple of length 1, their values will be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr stride is an int or a tuple of length 1 their values will be", "final_sentence": "attr stride is an int or a tuple of length 1 their values will be"}
{"comment_sentence_id": 4659, "class": "Caffe2OperatorTestCase", "comment_sentence": "which includes input and operator, ^etc", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "which includes input and operator etc", "final_sentence": "which includes input and operator etc"}
{"comment_sentence_id": 4381, "class": "BatchNorm1d", "comment_sentence": "can be set to none for cumulative moving average", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "can be set to none for cumulative moving average", "final_sentence": "can be set to none for cumulative moving average"}
{"comment_sentence_id": 5743, "class": "Unfold", "comment_sentence": ", fold params", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fold params", "final_sentence": "fold params"}
{"comment_sentence_id": 921, "class": "Audio", "comment_sentence": "shape nchan, nsamples .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "shape nchan nsamples", "final_sentence": "shape nchan nsamples"}
{"comment_sentence_id": 229, "class": "BoundWidget", "comment_sentence": "widgets that have choices.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "widgets that have choices", "final_sentence": "widgets that have choices"}
{"comment_sentence_id": 467, "class": "MakeListTests", "comment_sentence": "the make list filter can destroy existing escaping, so the results are", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the make list filter can destroy existing escaping so the results are", "final_sentence": "the make list filter can destroy existing escaping so the results are"}
{"comment_sentence_id": 318, "class": "DatabaseReceiver", "comment_sentence": "used in the tests for the database argument in signals #13552", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "used in the tests for the database argument in signals 13552", "final_sentence": "used in the tests for the database argument in signals 13552"}
{"comment_sentence_id": 4524, "class": "BCEWithLogitsLoss", "comment_sentence": "reduction string, optional specifies the reduction to apply to the output", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "reduction string optional specifies the reduction to apply to the output", "final_sentence": "reduction string optional specifies the reduction to apply to the output"}
{"comment_sentence_id": 4671, "class": "ConstantPad3d", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 726, "class": "ProxyModelInheritanceTests", "comment_sentence": "apps and calls migrate, then verifies that the table has been created.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "apps and calls migrate then verifies that the table has been created", "final_sentence": "apps and calls migrate then verifies that the table has been created"}
{"comment_sentence_id": 408, "class": "ListMixin", "comment_sentence": "derived classes must call listmixin s init function", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "derived classes must call listmixin s init function", "final_sentence": "derived classes must call listmixin s init function"}
{"comment_sentence_id": 4791, "class": "Conv3d", "comment_sentence": "math k frac 1 c text in prod i 0 ^ 2 text kernel size i", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i", "final_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i"}
{"comment_sentence_id": 5075, "class": "EmbeddingBag", "comment_sentence": "scale grad by freq boolean, optional if given, this will scale gradients by the inverse of frequency of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "scale grad by freq boolean optional if given this will scale gradients by the inverse of frequency of", "final_sentence": "scale grad by freq boolean optional if given this will scale gradients by the inverse of frequency of"}
{"comment_sentence_id": 429, "class": "ListMixin", "comment_sentence": "return the length", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "return the length", "final_sentence": "return the length"}
{"comment_sentence_id": 3736, "class": "Request", "comment_sentence": "param data the body to attach to the request.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param data the body to attach to the request", "final_sentence": "param data the body to attach to the request"}
{"comment_sentence_id": 2960, "class": "HebrewProber", "comment_sentence": "disjointed from the model probers, the results of the hebrewprober", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "disjointed from the model probers the results of the hebrewprober", "final_sentence": "disjointed from the model probers the results of the hebrewprober"}
{"comment_sentence_id": 4766, "class": "Conv3d", "comment_sentence": "bias bool, optional if true , adds a learnable bias to the output.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "bias bool optional if true adds a learnable bias to the output", "final_sentence": "bias bool optional if true adds a learnable bias to the output"}
{"comment_sentence_id": 3610, "class": "Path", "comment_sentence": "this value to be valid.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this value to be valid", "final_sentence": "this value to be valid"}
{"comment_sentence_id": 2019, "class": "PlotAccessor", "comment_sentence": "grid bool, default none matlab style default", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "grid bool default none matlab style default", "final_sentence": "grid bool default none matlab style default"}
{"comment_sentence_id": 4790, "class": "Conv3d", "comment_sentence": "sampled from math mathcal u sqrt k , sqrt k where", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sampled from math mathcal u sqrt k sqrt k where", "final_sentence": "sampled from math mathcal u sqrt k sqrt k where"}
{"comment_sentence_id": 4242, "class": "Adam", "comment_sentence": "lr float, optional learning rate default 1e 3", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lr float optional learning rate default 1e 3", "final_sentence": "lr float optional learning rate default 1e 3"}
{"comment_sentence_id": 4715, "class": "Conv3d", "comment_sentence": "sum k 0 ^ c in 1 weight c out j , k star input n i, k", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sum k 0 c in 1 weight c out j k star input n i k", "final_sentence": "sum k 0 c in 1 weight c out j k star input n i k"}
{"comment_sentence_id": 3044, "class": "KeyType", "comment_sentence": "the type of a key.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the type of a key", "final_sentence": "the type of a key"}
{"comment_sentence_id": 3624, "class": "Path", "comment_sentence": "supposed to be done by the shell only.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "supposed to be done by the shell only", "final_sentence": "supposed to be done by the shell only"}
{"comment_sentence_id": 1098, "class": "LazyEvaluate", "comment_sentence": "at that time, such as the current time or working directory.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at that time such as the current time or working directory", "final_sentence": "at that time such as the current time or working directory"}
{"comment_sentence_id": 5019, "class": "DiagonalTensor", "comment_sentence": "diagonaltensor represents a 2d tensor with n rows and columns that has", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "diagonaltensor represents a 2d tensor with n rows and columns that has", "final_sentence": "diagonaltensor represents a 2d tensor with n rows and columns that has"}
{"comment_sentence_id": 2323, "class": "StringMethods", "comment_sentence": "nas stay na unless", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "nas stay na unless", "final_sentence": "nas stay na unless"}
{"comment_sentence_id": 2617, "class": "Environment", "comment_sentence": "useful default for linux and os x systems as well as web", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "useful default for linux and os x systems as well as web", "final_sentence": "useful default for linux and os x systems as well as web"}
{"comment_sentence_id": 4013, "class": "SkipTo", "comment_sentence": "expression is found.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "expression is found", "final_sentence": "expression is found"}
{"comment_sentence_id": 3893, "class": "Retry", "comment_sentence": "indicating a redirect is returned before firing off the redirected", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "indicating a redirect is returned before firing off the redirected", "final_sentence": "indicating a redirect is returned before firing off the redirected"}
{"comment_sentence_id": 1852, "class": "ExcelFile", "comment_sentence": "a file like object, xlrd workbook or openpypl workbook.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a file like object xlrd workbook or openpypl workbook", "final_sentence": "a file like object xlrd workbook or openpypl workbook"}
{"comment_sentence_id": 3700, "class": "PrefixLoader", "comment_sentence": "to a prefix.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to a prefix", "final_sentence": "to a prefix"}
{"comment_sentence_id": 5739, "class": "Unfold", "comment_sentence": ", dilation .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dilation", "final_sentence": "dilation"}
{"comment_sentence_id": 1554, "class": "AccessorCallableDocumenter", "comment_sentence": "callable accessors like series^plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "callable accessors like series plot", "final_sentence": "callable accessors like series plot"}
{"comment_sentence_id": 1436, "class": "ContactSet", "comment_sentence": "set contact lines, ensuring contact exists", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set contact lines ensuring contact exists", "final_sentence": "set contact lines ensuring contact exists"}
{"comment_sentence_id": 5734, "class": "Unfold", "comment_sentence": "follows.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "follows", "final_sentence": "follows"}
{"comment_sentence_id": 4385, "class": "BatchNorm1d", "comment_sentence": "learnable affine parameters.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "learnable affine parameters", "final_sentence": "learnable affine parameters"}
{"comment_sentence_id": 1717, "class": "CategoricalIndex", "comment_sentence": "items need to be unique.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "items need to be unique", "final_sentence": "items need to be unique"}
{"comment_sentence_id": 5724, "class": "Unfold", "comment_sentence": "for the case of two input spatial dimensions this operation is sometimes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for the case of two input spatial dimensions this operation is sometimes", "final_sentence": "for the case of two input spatial dimensions this operation is sometimes"}
{"comment_sentence_id": 4483, "class": "BCEWithLogitsLoss", "comment_sentence": "in the case of multi label classification the loss can be described as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in the case of multi label classification the loss can be described as", "final_sentence": "in the case of multi label classification the loss can be described as"}
{"comment_sentence_id": 301, "class": "CryptPasswordHasher", "comment_sentence": "the crypt module is not supported on all platforms.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the crypt module is not supported on all platforms", "final_sentence": "the crypt module is not supported on all platforms"}
{"comment_sentence_id": 4383, "class": "BatchNorm1d", "comment_sentence": "default 01", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 01", "final_sentence": "default 01"}
{"comment_sentence_id": 4887, "class": "CyclicLR", "comment_sentence": "the paper cyclical learning rates for training neural networks .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the paper cyclical learning rates for training neural networks", "final_sentence": "the paper cyclical learning rates for training neural networks"}
{"comment_sentence_id": 5515, "class": "SGD", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 4474, "class": "BCEWithLogitsLoss", "comment_sentence": "ell x, y begin cases", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ell x y begin cases", "final_sentence": "ell x y begin cases"}
{"comment_sentence_id": 918, "class": "Audio", "comment_sentence": "can be one of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "can be one of", "final_sentence": "can be one of"}
{"comment_sentence_id": 798, "class": "StaticFilesHandler", "comment_sentence": "defined by the static url setting, and serves those files.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "defined by the static url setting and serves those files", "final_sentence": "defined by the static url setting and serves those files"}
{"comment_sentence_id": 5359, "class": "MultiLabelMarginLoss", "comment_sentence": "note attr size average", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note attr size average", "final_sentence": "note attr size average"}
{"comment_sentence_id": 937, "class": "Audio", "comment_sentence": "the original source be referenced.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the original source be referenced", "final_sentence": "the original source be referenced"}
{"comment_sentence_id": 2002, "class": "PlotAccessor", "comment_sentence": "hist histogram", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "hist histogram", "final_sentence": "hist histogram"}
{"comment_sentence_id": 3878, "class": "Retry", "comment_sentence": "response code in the 3xx range.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "response code in the 3xx range", "final_sentence": "response code in the 3xx range"}
{"comment_sentence_id": 2624, "class": "Environment", "comment_sentence": "extensions", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "extensions", "final_sentence": "extensions"}
{"comment_sentence_id": 2005, "class": "PlotAccessor", "comment_sentence": "density same as kde", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "density same as kde", "final_sentence": "density same as kde"}
{"comment_sentence_id": 821, "class": "TemplateDoesNotExist", "comment_sentence": "a list of intermediate templatedoesnotexist exceptions.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a list of intermediate templatedoesnotexist exceptions", "final_sentence": "a list of intermediate templatedoesnotexist exceptions"}
{"comment_sentence_id": 1080, "class": "InteractiveShellApp", "comment_sentence": "of the subclass", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of the subclass", "final_sentence": "of the subclass"}
{"comment_sentence_id": 4020, "class": "SkipTo", "comment_sentence": "failon default none define expressions that are not allowed to be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "failon default none define expressions that are not allowed to be", "final_sentence": "failon default none define expressions that are not allowed to be"}
{"comment_sentence_id": 1732, "class": "CategoricalIndex", "comment_sentence": "name to be stored in the index.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "name to be stored in the index", "final_sentence": "name to be stored in the index"}
{"comment_sentence_id": 5706, "class": "Unfold", "comment_sentence": "reshaping.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "reshaping", "final_sentence": "reshaping"}
{"comment_sentence_id": 413, "class": "ListMixin", "comment_sentence": "function get single internal self, i", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "function get single internal self i", "final_sentence": "function get single internal self i"}
{"comment_sentence_id": 329, "class": "Dumpdata", "comment_sentence": "tests for dumpdata management command.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for dumpdata management command", "final_sentence": "tests for dumpdata management command"}
{"comment_sentence_id": 2495, "class": "CONSOLE_SCREEN_BUFFER_INFO", "comment_sentence": "struct in wincon^h.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "struct in wincon h", "final_sentence": "struct in wincon h"}
{"comment_sentence_id": 3730, "class": "Request", "comment_sentence": "a user created class request request object.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a user created class request request object", "final_sentence": "a user created class request request object"}
{"comment_sentence_id": 201, "class": "BaseDatabaseSchemaEditor", "comment_sentence": "this class and its subclasses are responsible for emitting schema changing", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class and its subclasses are responsible for emitting schema changing", "final_sentence": "this class and its subclasses are responsible for emitting schema changing"}
{"comment_sentence_id": 2257, "class": "StringArray", "comment_sentence": "currently, this expects an object dtype ndarray", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "currently this expects an object dtype ndarray", "final_sentence": "currently this expects an object dtype ndarray"}
{"comment_sentence_id": 1838, "class": "CythonCommand", "comment_sentence": "custom distutils command subclassed from cython^distutils.build ext", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "custom distutils command subclassed from cython distutils build ext", "final_sentence": "custom distutils command subclassed from cython distutils build ext"}
{"comment_sentence_id": 1573, "class": "BooleanArray", "comment_sentence": "array of boolean true false data with missing values.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "array of boolean true false data with missing values", "final_sentence": "array of boolean true false data with missing values"}
{"comment_sentence_id": 2632, "class": "Environment", "comment_sentence": "default is true .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default is true", "final_sentence": "default is true"}
{"comment_sentence_id": 1715, "class": "CategoricalIndex", "comment_sentence": "categories index like, optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categories index like optional", "final_sentence": "categories index like optional"}
{"comment_sentence_id": 2639, "class": "Environment", "comment_sentence": "for example one can convert", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for example one can convert", "final_sentence": "for example one can convert"}
{"comment_sentence_id": 2931, "class": "HashMissing", "comment_sentence": "a hash was needed for a requirement but is absent.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a hash was needed for a requirement but is absent", "final_sentence": "a hash was needed for a requirement but is absent"}
{"comment_sentence_id": 409, "class": "ListMixin", "comment_sentence": "and implement the following", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and implement the following", "final_sentence": "and implement the following"}
{"comment_sentence_id": 5644, "class": "TransformerEncoderLayer", "comment_sentence": "ashish vaswani, noam shazeer, niki parmar, jakob uszkoreit, llion jones, aidan n gomez,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ashish vaswani noam shazeer niki parmar jakob uszkoreit llion jones aidan n gomez", "final_sentence": "ashish vaswani noam shazeer niki parmar jakob uszkoreit llion jones aidan n gomez"}
{"comment_sentence_id": 724, "class": "ProxyModelInheritanceTests", "comment_sentence": "for the proxied model as described in #12286 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for the proxied model as described in 12286", "final_sentence": "for the proxied model as described in 12286"}
{"comment_sentence_id": 4021, "class": "SkipTo", "comment_sentence": "included in the skipped test if found before the target expression is found,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "included in the skipped test if found before the target expression is found", "final_sentence": "included in the skipped test if found before the target expression is found"}
{"comment_sentence_id": 1569, "class": "BaseInterfaceTests", "comment_sentence": "tests that the basic interface is satisfied.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests that the basic interface is satisfied", "final_sentence": "tests that the basic interface is satisfied"}
{"comment_sentence_id": 5066, "class": "EmbeddingBag", "comment_sentence": "only supported mode is sum , which computes a weighted sum according to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only supported mode is sum which computes a weighted sum according to", "final_sentence": "only supported mode is sum which computes a weighted sum according to"}
{"comment_sentence_id": 2089, "class": "PlotAccessor", "comment_sentence": "for bar plot layout by position keyword.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for bar plot layout by position keyword", "final_sentence": "for bar plot layout by position keyword"}
{"comment_sentence_id": 811, "class": "TemplateDoesNotExist", "comment_sentence": "optional arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "optional arguments", "final_sentence": "optional arguments"}
{"comment_sentence_id": 1553, "class": "AccessorCallableDocumenter", "comment_sentence": "call from the method signature for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "call from the method signature for", "final_sentence": "call from the method signature for"}
{"comment_sentence_id": 405, "class": "KMLSitemap", "comment_sentence": "a minimal hook to produce kml sitemaps.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a minimal hook to produce kml sitemaps", "final_sentence": "a minimal hook to produce kml sitemaps"}
{"comment_sentence_id": 5505, "class": "ResNetBuilder", "comment_sentence": "helper class for constructing residual blocks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "helper class for constructing residual blocks", "final_sentence": "helper class for constructing residual blocks"}
{"comment_sentence_id": 686, "class": "ParentWithDependentChildren", "comment_sentence": "on validation of the parent", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on validation of the parent", "final_sentence": "on validation of the parent"}
{"comment_sentence_id": 1707, "class": "CategoricalIndex", "comment_sentence": "like categorical, it might have an order, but numerical operations", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "like categorical it might have an order but numerical operations", "final_sentence": "like categorical it might have an order but numerical operations"}
{"comment_sentence_id": 140, "class": "BaseCommand", "comment_sentence": "self^check app configs from handle , where app configs", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "self check app configs from handle where app configs", "final_sentence": "self check app configs from handle where app configs"}
{"comment_sentence_id": 4896, "class": "CyclicLR", "comment_sentence": "at each cycle iteration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at each cycle iteration", "final_sentence": "at each cycle iteration"}
{"comment_sentence_id": 53, "class": "AtomicTests", "comment_sentence": "since the decorator syntax is converted into a context manager see the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "since the decorator syntax is converted into a context manager see the", "final_sentence": "since the decorator syntax is converted into a context manager see the"}
{"comment_sentence_id": 2828, "class": "FileMetadata", "comment_sentence": "which is treated as existing, and will be the contents of the file at", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "which is treated as existing and will be the contents of the file at", "final_sentence": "which is treated as existing and will be the contents of the file at"}
{"comment_sentence_id": 924, "class": "Audio", "comment_sentence": "list of float or integer representing the waveform mono", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list of float or integer representing the waveform mono", "final_sentence": "list of float or integer representing the waveform mono"}
{"comment_sentence_id": 2658, "class": "Environment", "comment_sentence": "out the least recently used template.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "out the least recently used template", "final_sentence": "out the least recently used template"}
{"comment_sentence_id": 4251, "class": "Adam", "comment_sentence": "adam a method for stochastic optimization", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "adam a method for stochastic optimization", "final_sentence": "adam a method for stochastic optimization"}
{"comment_sentence_id": 5711, "class": "Unfold", "comment_sentence": "stride int or tuple, optional the stride of the sliding blocks in the input", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "stride int or tuple optional the stride of the sliding blocks in the input", "final_sentence": "stride int or tuple optional the stride of the sliding blocks in the input"}
{"comment_sentence_id": 2054, "class": "PlotAccessor", "comment_sentence": "from 0 left bottom end to 1 right top end .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "from 0 left bottom end to 1 right top end", "final_sentence": "from 0 left bottom end to 1 right top end"}
{"comment_sentence_id": 2875, "class": "Filter_", "comment_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "final_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes"}
{"comment_sentence_id": 5923, "class": "YellowFinOptimizer", "comment_sentence": "yellowfin an automatic tuner for momentum sgd", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "yellowfin an automatic tuner for momentum sgd", "final_sentence": "yellowfin an automatic tuner for momentum sgd"}
{"comment_sentence_id": 2848, "class": "FileSystemLoader", "comment_sentence": "loads templates from the file system.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "loads templates from the file system", "final_sentence": "loads templates from the file system"}
{"comment_sentence_id": 1082, "class": "InteractiveShellApp", "comment_sentence": "meth init shell to be implemented by the subclass", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "meth init shell to be implemented by the subclass", "final_sentence": "meth init shell to be implemented by the subclass"}
{"comment_sentence_id": 5362, "class": "MultiLabelMarginLoss", "comment_sentence": "default mean", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 879, "class": "WindowFrame", "comment_sentence": "model the frame clause in window expressions.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "model the frame clause in window expressions", "final_sentence": "model the frame clause in window expressions"}
{"comment_sentence_id": 416, "class": "ListMixin", "comment_sentence": "different types of objects, set list must distinguish", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "different types of objects set list must distinguish", "final_sentence": "different types of objects set list must distinguish"}
{"comment_sentence_id": 3890, "class": "Retry", "comment_sentence": "attr retry^retry after status codes or not.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr retry retry after status codes or not", "final_sentence": "attr retry retry after status codes or not"}
{"comment_sentence_id": 5353, "class": "MultiLabelMarginLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4709, "class": "Conv3d", "comment_sentence": "applies a 3d convolution over an input signal composed of several input", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "applies a 3d convolution over an input signal composed of several input", "final_sentence": "applies a 3d convolution over an input signal composed of several input"}
{"comment_sentence_id": 592, "class": "MultiPartParser", "comment_sentence": "a rfc2388 multipart form data parser.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a rfc2388 multipart form data parser", "final_sentence": "a rfc2388 multipart form data parser"}
{"comment_sentence_id": 2261, "class": "StringArray", "comment_sentence": "copy bool, default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 4504, "class": "BCEWithLogitsLoss", "comment_sentence": "weight tensor, optional a manual rescaling weight given to the loss", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight tensor optional a manual rescaling weight given to the loss", "final_sentence": "weight tensor optional a manual rescaling weight given to the loss"}
{"comment_sentence_id": 5225, "class": "FisherSnedecor", "comment_sentence": "df1 float or tensor degrees of freedom parameter 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "df1 float or tensor degrees of freedom parameter 1", "final_sentence": "df1 float or tensor degrees of freedom parameter 1"}
{"comment_sentence_id": 89, "class": "BaseCommand", "comment_sentence": "derive.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "derive", "final_sentence": "derive"}
{"comment_sentence_id": 4243, "class": "Adam", "comment_sentence": "betas tuple float, float , optional coefficients used for computing", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "betas tuple float float optional coefficients used for computing", "final_sentence": "betas tuple float float optional coefficients used for computing"}
{"comment_sentence_id": 2322, "class": "StringMethods", "comment_sentence": "vectorized string functions for series and index.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "vectorized string functions for series and index", "final_sentence": "vectorized string functions for series and index"}
{"comment_sentence_id": 1727, "class": "CategoricalIndex", "comment_sentence": "categories or ordered .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categories or ordered", "final_sentence": "categories or ordered"}
{"comment_sentence_id": 1662, "class": "CategoricalDtype", "comment_sentence": "this class is useful for specifying the type of a categorical", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class is useful for specifying the type of a categorical", "final_sentence": "this class is useful for specifying the type of a categorical"}
{"comment_sentence_id": 2666, "class": "Environment", "comment_sentence": "sources may change ie file system or database .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sources may change ie file system or database", "final_sentence": "sources may change ie file system or database"}
{"comment_sentence_id": 4789, "class": "Conv3d", "comment_sentence": "then the values of these weights are", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "then the values of these weights are", "final_sentence": "then the values of these weights are"}
{"comment_sentence_id": 4485, "class": "BCEWithLogitsLoss", "comment_sentence": "ell c x, y l c l 1,c , dots,l n,c ^ top, quad", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ell c x y l c l 1 c dots l n c top quad", "final_sentence": "ell c x y l c l 1 c dots l n c top quad"}
{"comment_sentence_id": 5464, "class": "Poisson", "comment_sentence": "creates a poisson distribution parameterized by attr rate , the rate parameter.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter", "final_sentence": "creates a poisson distribution parameterized by attr rate the rate parameter"}
{"comment_sentence_id": 2014, "class": "PlotAccessor", "comment_sentence": "title to use for the plot.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "title to use for the plot", "final_sentence": "title to use for the plot"}
{"comment_sentence_id": 5055, "class": "EmbeddingBag", "comment_sentence": "for bags of constant length and no attr per sample weights , this class", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for bags of constant length and no attr per sample weights this class", "final_sentence": "for bags of constant length and no attr per sample weights this class"}
{"comment_sentence_id": 2434, "class": "CallBlock", "comment_sentence": "like a macro without a name but a call instead.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "like a macro without a name but a call instead", "final_sentence": "like a macro without a name but a call instead"}
{"comment_sentence_id": 1277, "class": "ConfigDict", "comment_sentence": "a data type sanity check", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a data type sanity check", "final_sentence": "a data type sanity check"}
{"comment_sentence_id": 3982, "class": "SafeFileCache", "comment_sentence": "a file based cache which is safe to use even when the target directory may", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a file based cache which is safe to use even when the target directory may", "final_sentence": "a file based cache which is safe to use even when the target directory may"}
{"comment_sentence_id": 2069, "class": "PlotAccessor", "comment_sentence": "labels with right in the legend.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "labels with right in the legend", "final_sentence": "labels with right in the legend"}
{"comment_sentence_id": 4894, "class": "CyclicLR", "comment_sentence": "triangular2 a basic triangular cycle that scales initial amplitude by half each cycle.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "triangular2 a basic triangular cycle that scales initial amplitude by half each cycle", "final_sentence": "triangular2 a basic triangular cycle that scales initial amplitude by half each cycle"}
{"comment_sentence_id": 3425, "class": "Option", "comment_sentence": "context.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "context", "final_sentence": "context"}
{"comment_sentence_id": 5114, "class": "EmbeddingBag", "comment_sentence": "only supported for mode sum .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only supported for mode sum", "final_sentence": "only supported for mode sum"}
{"comment_sentence_id": 2586, "class": "Environment", "comment_sentence": "the string marking the end of a print statement.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the end of a print statement", "final_sentence": "the string marking the end of a print statement"}
{"comment_sentence_id": 4676, "class": "ConstantPad3d", "comment_sentence": "math text padding left , math text padding right ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math text padding left math text padding right", "final_sentence": "math text padding left math text padding right"}
{"comment_sentence_id": 1966, "class": "IntervalDtype", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 422, "class": "ListMixin", "comment_sentence": "temp list items", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "temp list items", "final_sentence": "temp list items"}
{"comment_sentence_id": 1270, "class": "ConfigDict", "comment_sentence": "the object must be initialized with a dictionary which describes in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the object must be initialized with a dictionary which describes in", "final_sentence": "the object must be initialized with a dictionary which describes in"}
{"comment_sentence_id": 5253, "class": "LBFGS", "comment_sentence": "this is a very memory intensive optimizer it requires additional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a very memory intensive optimizer it requires additional", "final_sentence": "this is a very memory intensive optimizer it requires additional"}
{"comment_sentence_id": 5580, "class": "Subset", "comment_sentence": "indices sequence indices in the whole set selected for subset", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "indices sequence indices in the whole set selected for subset", "final_sentence": "indices sequence indices in the whole set selected for subset"}
{"comment_sentence_id": 4015, "class": "SkipTo", "comment_sentence": "expr target expression marking the end of the data to be skipped", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "expr target expression marking the end of the data to be skipped", "final_sentence": "expr target expression marking the end of the data to be skipped"}
{"comment_sentence_id": 4645, "class": "BuildType", "comment_sentence": "cmake build type env str the value of os^environ cmake build type .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cmake build type env str the value of os environ cmake build type", "final_sentence": "cmake build type env str the value of os environ cmake build type"}
{"comment_sentence_id": 2575, "class": "Environment", "comment_sentence": "here are the possible initialization parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "here are the possible initialization parameters", "final_sentence": "here are the possible initialization parameters"}

{"comment_sentence_id": 2600, "class": "Environment", "comment_sentence": "comments.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "comments", "final_sentence": "comments"}
{"comment_sentence_id": 4146, "class": "_OpNamespace", "comment_sentence": "to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "to", "final_sentence": "to"}
{"comment_sentence_id": 4313, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 7", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "m nn adaptivemaxpool3d 7", "final_sentence": "m nn adaptivemaxpool3d 7"}
{"comment_sentence_id": 4474, "class": "BCEWithLogitsLoss", "comment_sentence": "ell x, y begin cases", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "ell x y begin cases", "final_sentence": "ell x y begin cases"}
{"comment_sentence_id": 2583, "class": "Environment", "comment_sentence": "the string marking the beginning of a print statement.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the beginning of a print statement", "final_sentence": "the string marking the beginning of a print statement"}
{"comment_sentence_id": 3244, "class": "Module_six_moves_urllib_response", "comment_sentence": "lazy loading of moved objects in six^moves.urllib response", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "lazy loading of moved objects in six moves urllib response", "final_sentence": "lazy loading of moved objects in six moves urllib response"}
{"comment_sentence_id": 1288, "class": "ConfigDict", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 3320, "class": "omdict", "comment_sentence": "all dict methods that retain parity with omdict are", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "all dict methods that retain parity with omdict are", "final_sentence": "all dict methods that retain parity with omdict are"}
{"comment_sentence_id": 4215, "class": "Adadelta", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 2434, "class": "CallBlock", "comment_sentence": "like a macro without a name but a call instead.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "like a macro without a name but a call instead", "final_sentence": "like a macro without a name but a call instead"}
{"comment_sentence_id": 109, "class": "BaseCommand", "comment_sentence": "output produced by handle will be printed to standard", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "output produced by handle will be printed to standard", "final_sentence": "output produced by handle will be printed to standard"}
{"comment_sentence_id": 2389, "class": "And", "comment_sentence": "name expr oneormore word alphas", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "name expr oneormore word alphas", "final_sentence": "name expr oneormore word alphas"}
{"comment_sentence_id": 2073, "class": "PlotAccessor", "comment_sentence": "backend to use instead of the backend specified in the option", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "backend to use instead of the backend specified in the option", "final_sentence": "backend to use instead of the backend specified in the option"}
{"comment_sentence_id": 608, "class": "MultiValueDict", "comment_sentence": "d^get lastname , nonexistent", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "d get lastname nonexistent", "final_sentence": "d get lastname nonexistent"}
{"comment_sentence_id": 2598, "class": "Environment", "comment_sentence": "line comment prefix", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "line comment prefix", "final_sentence": "line comment prefix"}
{"comment_sentence_id": 5211, "class": "ExternalInitializer", "comment_sentence": "this class is used in cases when the parameter should not be initialized by", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class is used in cases when the parameter should not be initialized by", "final_sentence": "this class is used in cases when the parameter should not be initialized by"}
{"comment_sentence_id": 5301, "class": "Module", "comment_sentence": "x f^relu self^conv1 x", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "x f relu self conv1 x", "final_sentence": "x f relu self conv1 x"}
{"comment_sentence_id": 5223, "class": "FisherSnedecor", "comment_sentence": "tensor 02453", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor 02453", "final_sentence": "tensor 02453"}
{"comment_sentence_id": 4318, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 3227, "class": "MethodDispatcher", "comment_sentence": "on initiation, keys that are lists, sets or tuples are converted to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "on initiation keys that are lists sets or tuples are converted to", "final_sentence": "on initiation keys that are lists sets or tuples are converted to"}
{"comment_sentence_id": 1574, "class": "BooleanArray", "comment_sentence": "this is a pandas extension array for boolean data, under the hood", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is a pandas extension array for boolean data under the hood", "final_sentence": "this is a pandas extension array for boolean data under the hood"}
{"comment_sentence_id": 26, "class": "Atomic", "comment_sentence": "a stack of savepoints identifiers is maintained as an attribute of the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a stack of savepoints identifiers is maintained as an attribute of the", "final_sentence": "a stack of savepoints identifiers is maintained as an attribute of the"}
{"comment_sentence_id": 4478, "class": "BCEWithLogitsLoss", "comment_sentence": "this is used for measuring the error of a reconstruction in for example", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is used for measuring the error of a reconstruction in for example", "final_sentence": "this is used for measuring the error of a reconstruction in for example"}
{"comment_sentence_id": 5958, "class": "Response", "comment_sentence": "server s response to an http request.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "server s response to an http request", "final_sentence": "server s response to an http request"}
{"comment_sentence_id": 4675, "class": "ConstantPad3d", "comment_sentence": "if a 6 tuple , uses", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a 6 tuple uses", "final_sentence": "if a 6 tuple uses"}
{"comment_sentence_id": 4117, "class": "TreeBuilder", "comment_sentence": "documentclass the class to use for the bottommost node of a document", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "documentclass the class to use for the bottommost node of a document", "final_sentence": "documentclass the class to use for the bottommost node of a document"}
{"comment_sentence_id": 92, "class": "BaseCommand", "comment_sentence": "response if you don t need to change any of that behavior,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "response if you don t need to change any of that behavior", "final_sentence": "response if you don t need to change any of that behavior"}
{"comment_sentence_id": 29, "class": "Atomic", "comment_sentence": "this allows reentrancy even if the same atomicwrapper is reused.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this allows reentrancy even if the same atomicwrapper is reused", "final_sentence": "this allows reentrancy even if the same atomicwrapper is reused"}
{"comment_sentence_id": 3181, "class": "MemcachedBytecodeCache", "comment_sentence": "timeout the timeout of the key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "timeout the timeout of the key", "final_sentence": "timeout the timeout of the key"}
{"comment_sentence_id": 1585, "class": "BooleanArray", "comment_sentence": "booleanarray is considered experimental.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "booleanarray is considered experimental", "final_sentence": "booleanarray is considered experimental"}
{"comment_sentence_id": 2359, "class": "_BZ2Proxy", "comment_sentence": "this is actually", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is actually", "final_sentence": "this is actually"}
{"comment_sentence_id": 3189, "class": "MemcachedBytecodeCache", "comment_sentence": "exist in the cache the return value must be none .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "exist in the cache the return value must be none", "final_sentence": "exist in the cache the return value must be none"}
{"comment_sentence_id": 3265, "class": "NotAny", "comment_sentence": "# take care not to mistake keywords for identifiers", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "take care not to mistake keywords for identifiers", "final_sentence": "take care not to mistake keywords for identifiers"}
{"comment_sentence_id": 1284, "class": "ConfigDict", "comment_sentence": "configuration data can be nested by including a dictionary of further", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "configuration data can be nested by including a dictionary of further", "final_sentence": "configuration data can be nested by including a dictionary of further"}
{"comment_sentence_id": 3618, "class": "Path", "comment_sentence": "param resolve path if this is true, then the path is fully resolved", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param resolve path if this is true then the path is fully resolved", "final_sentence": "param resolve path if this is true then the path is fully resolved"}
{"comment_sentence_id": 5439, "class": "OneHotCategorical", "comment_sentence": "attr logits .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr logits", "final_sentence": "attr logits"}
{"comment_sentence_id": 1669, "class": "CategoricalDtype", "comment_sentence": "12:00 AM", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "12 00 AM", "final_sentence": "12 00 AM"}
{"comment_sentence_id": 5258, "class": "LBFGS", "comment_sentence": "lr float learning rate default 1", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "lr float learning rate default 1", "final_sentence": "lr float learning rate default 1"}
{"comment_sentence_id": 3179, "class": "MemcachedBytecodeCache", "comment_sentence": "stores the bytecode in the cache.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "stores the bytecode in the cache", "final_sentence": "stores the bytecode in the cache"}
{"comment_sentence_id": 639, "class": "MultiValueField", "comment_sentence": "field, etc once all fields are cleaned, the list of clean values is", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "field etc once all fields are cleaned the list of clean values is", "final_sentence": "field etc once all fields are cleaned the list of clean values is"}
{"comment_sentence_id": 1294, "class": "ConfigDict", "comment_sentence": "water liters , int, 0 ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "water liters int 0", "final_sentence": "water liters int 0"}
{"comment_sentence_id": 1644, "class": "CategoricalDtype", "comment_sentence": "type for categorical data with the categories and orderedness.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "type for categorical data with the categories and orderedness", "final_sentence": "type for categorical data with the categories and orderedness"}
{"comment_sentence_id": 4156, "class": "_OpNamespace", "comment_sentence": "object.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 67, "class": "AutoFieldMeta", "comment_sentence": "automatically generated field as a subclass of autofield.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "automatically generated field as a subclass of autofield", "final_sentence": "automatically generated field as a subclass of autofield"}
{"comment_sentence_id": 4273, "class": "Adamax", "comment_sentence": "implements adamax algorithm a variant of adam based on infinity norm .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements adamax algorithm a variant of adam based on infinity norm", "final_sentence": "implements adamax algorithm a variant of adam based on infinity norm"}
{"comment_sentence_id": 1886, "class": "IntegerArray", "comment_sentence": "values numpy^ndarray", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "values numpy ndarray", "final_sentence": "values numpy ndarray"}
{"comment_sentence_id": 4734, "class": "Conv3d", "comment_sentence": "the parameters attr kernel size , attr stride , attr padding , attr dilation can either be", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the parameters attr kernel size attr stride attr padding attr dilation can either be", "final_sentence": "the parameters attr kernel size attr stride attr padding attr dilation can either be"}
{"comment_sentence_id": 5465, "class": "Poisson", "comment_sentence": "samples are nonnegative integers, with a pmf given by", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "samples are nonnegative integers with a pmf given by", "final_sentence": "samples are nonnegative integers with a pmf given by"}
{"comment_sentence_id": 1563, "class": "Base", "comment_sentence": "get kwargs from breaks to the expected format.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "get kwargs from breaks to the expected format", "final_sentence": "get kwargs from breaks to the expected format"}
{"comment_sentence_id": 2652, "class": "Environment", "comment_sentence": "loader", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "loader", "final_sentence": "loader"}
{"comment_sentence_id": 4372, "class": "BatchNorm1d", "comment_sentence": "because the batch normalization is done over the c dimension, computing statistics", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "because the batch normalization is done over the c dimension computing statistics", "final_sentence": "because the batch normalization is done over the c dimension computing statistics"}
{"comment_sentence_id": 3263, "class": "NotAny", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3267, "class": "NotAny", "comment_sentence": "boolean term optional not ident", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "boolean term optional not ident", "final_sentence": "boolean term optional not ident"}
{"comment_sentence_id": 3085, "class": "Markup", "comment_sentence": "this implements the html interface that some frameworks", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this implements the html interface that some frameworks", "final_sentence": "this implements the html interface that some frameworks"}
{"comment_sentence_id": 1059, "class": "GeoJSON", "comment_sentence": "not an already serialized json string.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "not an already serialized json string", "final_sentence": "not an already serialized json string"}
{"comment_sentence_id": 5256, "class": "LBFGS", "comment_sentence": "try reducing the history size, or use a different algorithm.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "try reducing the history size or use a different algorithm", "final_sentence": "try reducing the history size or use a different algorithm"}
{"comment_sentence_id": 5721, "class": "Unfold", "comment_sentence": "if attr kernel size , attr dilation , attr padding or", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if attr kernel size attr dilation attr padding or", "final_sentence": "if attr kernel size attr dilation attr padding or"}
{"comment_sentence_id": 637, "class": "MultiValueField", "comment_sentence": "this list is cleaned by the corresponding field the first value is", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this list is cleaned by the corresponding field the first value is", "final_sentence": "this list is cleaned by the corresponding field the first value is"}
{"comment_sentence_id": 610, "class": "MultiValueDict", "comment_sentence": "d^setlist lastname , holovaty , willison", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "d setlist lastname holovaty willison", "final_sentence": "d setlist lastname holovaty willison"}
{"comment_sentence_id": 84, "class": "BadSignature", "comment_sentence": "signature does not match.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "signature does not match", "final_sentence": "signature does not match"}
{"comment_sentence_id": 4315, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 4134, "class": "UnlockError", "comment_sentence": "raise unlockerror", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "raise unlockerror", "final_sentence": "raise unlockerror"}
{"comment_sentence_id": 1306, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 4249, "class": "Adam", "comment_sentence": "algorithm from the paper on the convergence of adam and beyond", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "algorithm from the paper on the convergence of adam and beyond", "final_sentence": "algorithm from the paper on the convergence of adam and beyond"}
{"comment_sentence_id": 4754, "class": "Conv3d", "comment_sentence": "out channels int number of channels produced by the convolution", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "out channels int number of channels produced by the convolution", "final_sentence": "out channels int number of channels produced by the convolution"}
{"comment_sentence_id": 5199, "class": "Error", "comment_sentence": "each error in the report has an error message and a backtrace.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "each error in the report has an error message and a backtrace", "final_sentence": "each error in the report has an error message and a backtrace"}
{"comment_sentence_id": 4677, "class": "ConstantPad3d", "comment_sentence": "math text padding top , math text padding bottom ,", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "math text padding top math text padding bottom", "final_sentence": "math text padding top math text padding bottom"}
{"comment_sentence_id": 3252, "class": "NoMatch", "comment_sentence": "a token that will never match.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a token that will never match", "final_sentence": "a token that will never match"}
{"comment_sentence_id": 4152, "class": "_OpNamespace", "comment_sentence": "1", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 1599, "class": "BooleanArray", "comment_sentence": "none", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 3273, "class": "NotAny", "comment_sentence": "integer word nums char .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "integer word nums char", "final_sentence": "integer word nums char"}
{"comment_sentence_id": 2579, "class": "Environment", "comment_sentence": "block end string", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "block end string", "final_sentence": "block end string"}
{"comment_sentence_id": 2235, "class": "SQLTable", "comment_sentence": "uses fact that table is reflected by sqlalchemy to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "uses fact that table is reflected by sqlalchemy to", "final_sentence": "uses fact that table is reflected by sqlalchemy to"}
{"comment_sentence_id": 4735, "class": "Conv3d", "comment_sentence": "a single int in which case the same value is used for the depth, height and width dimension", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a single int in which case the same value is used for the depth height and width dimension", "final_sentence": "a single int in which case the same value is used for the depth height and width dimension"}
{"comment_sentence_id": 554, "class": "MigrationLoader", "comment_sentence": "this does mean that this class must also talk to the database as well as", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this does mean that this class must also talk to the database as well as", "final_sentence": "this does mean that this class must also talk to the database as well as"}
{"comment_sentence_id": 2624, "class": "Environment", "comment_sentence": "extensions", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "extensions", "final_sentence": "extensions"}
{"comment_sentence_id": 927, "class": "Audio", "comment_sentence": "url pointing to a file on the web.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "url pointing to a file on the web", "final_sentence": "url pointing to a file on the web"}
{"comment_sentence_id": 667, "class": "Operation", "comment_sentence": "base class for migration operations.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class for migration operations", "final_sentence": "base class for migration operations"}
{"comment_sentence_id": 3324, "class": "omdict", "comment_sentence": "items , keys , values , iteritems , iterkeys , itervalues ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "items keys values iteritems iterkeys itervalues", "final_sentence": "items keys values iteritems iterkeys itervalues"}
{"comment_sentence_id": 3338, "class": "omdict", "comment_sentence": "poplist , popvalue , popvalues , popitem , poplistitem ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "poplist popvalue popvalues popitem poplistitem", "final_sentence": "poplist popvalue popvalues popitem poplistitem"}
{"comment_sentence_id": 4116, "class": "TreeBuilder", "comment_sentence": "base treebuilder implementation", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "base treebuilder implementation", "final_sentence": "base treebuilder implementation"}
{"comment_sentence_id": 518, "class": "MigrationGraph", "comment_sentence": "replacing migration, and repoint any dependencies that pointed to the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "replacing migration and repoint any dependencies that pointed to the", "final_sentence": "replacing migration and repoint any dependencies that pointed to the"}
{"comment_sentence_id": 515, "class": "MigrationGraph", "comment_sentence": "for these instead, the code to load them in here should examine the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "for these instead the code to load them in here should examine the", "final_sentence": "for these instead the code to load them in here should examine the"}
{"comment_sentence_id": 22, "class": "Atomic", "comment_sentence": "exit commits the transaction or releases the savepoint on normal exit,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "exit commits the transaction or releases the savepoint on normal exit", "final_sentence": "exit commits the transaction or releases the savepoint on normal exit"}
{"comment_sentence_id": 1592, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array indicating missing values true", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a 1 d boolean dtype array indicating missing values true", "final_sentence": "a 1 d boolean dtype array indicating missing values true"}
{"comment_sentence_id": 5327, "class": "MultiLabelMarginLoss", "comment_sentence": "text loss x, y sum ij frac max 0, 1 x y j x i text x^size 0", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0", "final_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0"}
{"comment_sentence_id": 2391, "class": "And", "comment_sentence": "# more easily written as", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "more easily written as", "final_sentence": "more easily written as"}
{"comment_sentence_id": 5333, "class": "MultiLabelMarginLoss", "comment_sentence": "the criterion only considers a contiguous block of non negative targets that", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the criterion only considers a contiguous block of non negative targets that", "final_sentence": "the criterion only considers a contiguous block of non negative targets that"}
{"comment_sentence_id": 4756, "class": "Conv3d", "comment_sentence": "stride int or tuple, optional stride of the convolution.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "stride int or tuple optional stride of the convolution", "final_sentence": "stride int or tuple optional stride of the convolution"}
{"comment_sentence_id": 4368, "class": "BatchNorm1d", "comment_sentence": "update rule for running statistics here is", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "update rule for running statistics here is", "final_sentence": "update rule for running statistics here is"}
{"comment_sentence_id": 4671, "class": "ConstantPad3d", "comment_sentence": "args", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1332, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 3627, "class": "Path", "comment_sentence": "param path type optionally a string type that should be used to", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param path type optionally a string type that should be used to", "final_sentence": "param path type optionally a string type that should be used to"}
{"comment_sentence_id": 3101, "class": "Markup", "comment_sentence": "markup em hello em &lt foo&gt", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup em hello em lt foo gt", "final_sentence": "markup em hello em lt foo gt"}
{"comment_sentence_id": 1323, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1107, "class": "Magics", "comment_sentence": ".", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 5303, "class": "Module", "comment_sentence": "submodules assigned in this way will be registered, and will have their", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "submodules assigned in this way will be registered and will have their", "final_sentence": "submodules assigned in this way will be registered and will have their"}
{"comment_sentence_id": 3629, "class": "Path", "comment_sentence": "the default is none which", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the default is none which", "final_sentence": "the default is none which"}
{"comment_sentence_id": 1652, "class": "CategoricalDtype", "comment_sentence": "used in operations that combine categoricals, eg astype, and will resolve to", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "used in operations that combine categoricals eg astype and will resolve to", "final_sentence": "used in operations that combine categoricals eg astype and will resolve to"}
{"comment_sentence_id": 1671, "class": "CategoricalDtype", "comment_sentence": "2:00 AM", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "2 00 AM", "final_sentence": "2 00 AM"}
{"comment_sentence_id": 1704, "class": "CategoricalIndex", "comment_sentence": "categoricalindex, like categorical, can only take on a limited,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "categoricalindex like categorical can only take on a limited", "final_sentence": "categoricalindex like categorical can only take on a limited"}
{"comment_sentence_id": 4221, "class": "Adadelta", "comment_sentence": "lr float, optional coefficient that scale delta before it is applied", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "lr float optional coefficient that scale delta before it is applied", "final_sentence": "lr float optional coefficient that scale delta before it is applied"}
{"comment_sentence_id": 2588, "class": "Environment", "comment_sentence": "comment start string", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "comment start string", "final_sentence": "comment start string"}
{"comment_sentence_id": 4392, "class": "BatchNorm1d", "comment_sentence": "shape", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "shape", "final_sentence": "shape"}
{"comment_sentence_id": 5254, "class": "LBFGS", "comment_sentence": "param bytes history size 1 bytes .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "param bytes history size 1 bytes", "final_sentence": "param bytes history size 1 bytes"}
{"comment_sentence_id": 95, "class": "BaseCommand", "comment_sentence": "the command parsing and execution behavior, the normal flow works", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the command parsing and execution behavior the normal flow works", "final_sentence": "the command parsing and execution behavior the normal flow works"}
{"comment_sentence_id": 2375, "class": "_MovedItems", "comment_sentence": "lazy loading of moved objects", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "lazy loading of moved objects", "final_sentence": "lazy loading of moved objects"}
{"comment_sentence_id": 2061, "class": "PlotAccessor", "comment_sentence": "table.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "table", "final_sentence": "table"}
{"comment_sentence_id": 1853, "class": "ExcelFile", "comment_sentence": "if a string or path object, expected to be a path to xls, xlsx or odf file.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a string or path object expected to be a path to xls xlsx or odf file", "final_sentence": "if a string or path object expected to be a path to xls xlsx or odf file"}
{"comment_sentence_id": 2361, "class": "_BZ2Proxy", "comment_sentence": "class which unlike gzip^gzipfile has no support for", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "class which unlike gzip gzipfile has no support for", "final_sentence": "class which unlike gzip gzipfile has no support for"}
{"comment_sentence_id": 1314, "class": "ConfigDict", "comment_sentence": "0", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 5267, "class": "LBFGS", "comment_sentence": "history size int update history size default 100 .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "history size int update history size default 100", "final_sentence": "history size int update history size default 100"}
{"comment_sentence_id": 5489, "class": "QuantWrapper", "comment_sentence": "modules.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "modules", "final_sentence": "modules"}
{"comment_sentence_id": 546, "class": "MigrationLoader", "comment_sentence": "see", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 5325, "class": "MultiLabelMarginLoss", "comment_sentence": "for each sample in the mini batch", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "for each sample in the mini batch", "final_sentence": "for each sample in the mini batch"}
{"comment_sentence_id": 1308, "class": "ConfigDict", "comment_sentence": "99", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "99", "final_sentence": "99"}
{"comment_sentence_id": 129, "class": "BaseCommand", "comment_sentence": "default value is", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "default value is", "final_sentence": "default value is"}
{"comment_sentence_id": 2412, "class": "Argument", "comment_sentence": "all parameters are passed onwards to the parameter constructor.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "all parameters are passed onwards to the parameter constructor", "final_sentence": "all parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 4128, "class": "UndefinedEnvironmentName", "comment_sentence": "a name was attempted to be used that does not exist inside of the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a name was attempted to be used that does not exist inside of the", "final_sentence": "a name was attempted to be used that does not exist inside of the"}
{"comment_sentence_id": 1055, "class": "DummyMod", "comment_sentence": "a namespace must be assigned to the module s dict .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a namespace must be assigned to the module s dict", "final_sentence": "a namespace must be assigned to the module s dict"}
{"comment_sentence_id": 1064, "class": "HelpEnd", "comment_sentence": "transformer for help syntax obj?", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "transformer for help syntax obj", "final_sentence": "transformer for help syntax obj"}
{"comment_sentence_id": 5709, "class": "Unfold", "comment_sentence": "args", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1300, "class": "ConfigDict", "comment_sentence": "sorted pot^keys , sorted pot^values", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "sorted pot keys sorted pot values", "final_sentence": "sorted pot keys sorted pot values"}
{"comment_sentence_id": 4462, "class": "BCEWithLogitsLoss", "comment_sentence": "this version is more numerically stable than using a plain sigmoid", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this version is more numerically stable than using a plain sigmoid", "final_sentence": "this version is more numerically stable than using a plain sigmoid"}
{"comment_sentence_id": 62, "class": "AutoFieldMeta", "comment_sentence": "metaclass to maintain backward inheritance compatibility for autofield.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "metaclass to maintain backward inheritance compatibility for autofield", "final_sentence": "metaclass to maintain backward inheritance compatibility for autofield"}
{"comment_sentence_id": 1577, "class": "BooleanArray", "comment_sentence": "booleanarray implements kleene logic sometimes called three value", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "booleanarray implements kleene logic sometimes called three value", "final_sentence": "booleanarray implements kleene logic sometimes called three value"}
{"comment_sentence_id": 2572, "class": "Environment", "comment_sentence": "they are not shared and if no template was loaded so far.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "they are not shared and if no template was loaded so far", "final_sentence": "they are not shared and if no template was loaded so far"}
{"comment_sentence_id": 5293, "class": "Module", "comment_sentence": "import torch^nn.functional as f", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "import torch nn functional as f", "final_sentence": "import torch nn functional as f"}
{"comment_sentence_id": 2408, "class": "Argument", "comment_sentence": "arguments are positional parameters to a command.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "arguments are positional parameters to a command", "final_sentence": "arguments are positional parameters to a command"}
{"comment_sentence_id": 4247, "class": "Adam", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 612, "class": "MultiValueDict", "comment_sentence": "which returns a list for every key, even though most web forms submit", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "which returns a list for every key even though most web forms submit", "final_sentence": "which returns a list for every key even though most web forms submit"}
{"comment_sentence_id": 91, "class": "BaseCommand", "comment_sentence": "parse the command line arguments and work out what code to call in", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "parse the command line arguments and work out what code to call in", "final_sentence": "parse the command line arguments and work out what code to call in"}
{"comment_sentence_id": 4370, "class": "BatchNorm1d", "comment_sentence": "where math hat x is the estimated statistic and math x t is the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "where math hat x is the estimated statistic and math x t is the", "final_sentence": "where math hat x is the estimated statistic and math x t is the"}
{"comment_sentence_id": 2378, "class": "_PathParents", "comment_sentence": "of a path.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "of a path", "final_sentence": "of a path"}
{"comment_sentence_id": 117, "class": "BaseCommand", "comment_sentence": "subclasses many built in commands and command types either place", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "subclasses many built in commands and command types either place", "final_sentence": "subclasses many built in commands and command types either place"}
{"comment_sentence_id": 3631, "class": "Path", "comment_sentence": "unicode depending on what makes most sense given the", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "unicode depending on what makes most sense given the", "final_sentence": "unicode depending on what makes most sense given the"}
{"comment_sentence_id": 593, "class": "MultiPartParser", "comment_sentence": "multivaluedict^parse reads the input stream in chunk size chunks", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "multivaluedict parse reads the input stream in chunk size chunks", "final_sentence": "multivaluedict parse reads the input stream in chunk size chunks"}
{"comment_sentence_id": 5931, "class": "InvalidHeader", "comment_sentence": "the header value provided was somehow invalid.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the header value provided was somehow invalid", "final_sentence": "the header value provided was somehow invalid"}
{"comment_sentence_id": 5252, "class": "LBFGS", "comment_sentence": "note", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 3322, "class": "omdict", "comment_sentence": "clear , copy , update , fromkeys , len", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "clear copy update fromkeys len", "final_sentence": "clear copy update fromkeys len"}
{"comment_sentence_id": 613, "class": "MultiValueDict", "comment_sentence": "single name value pairs.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "single name value pairs", "final_sentence": "single name value pairs"}
{"comment_sentence_id": 550, "class": "MigrationLoader", "comment_sentence": "if all the migrations they replace are either unapplied or missing from", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "if all the migrations they replace are either unapplied or missing from", "final_sentence": "if all the migrations they replace are either unapplied or missing from"}
{"comment_sentence_id": 1597, "class": "BooleanArray", "comment_sentence": "none", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 4296, "class": "AdaptiveMaxPool3d", "comment_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes", "final_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes"}
{"comment_sentence_id": 1335, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 5468, "class": "Poisson", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 20, "class": "Atomic", "comment_sentence": "when it s used as a context manager, enter creates a transaction or a", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "when it s used as a context manager enter creates a transaction or a", "final_sentence": "when it s used as a context manager enter creates a transaction or a"}
{"comment_sentence_id": 919, "class": "Audio", "comment_sentence": "numpy 1d array containing the desired waveform mono", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "numpy 1d array containing the desired waveform mono", "final_sentence": "numpy 1d array containing the desired waveform mono"}
{"comment_sentence_id": 589, "class": "ModelSignal", "comment_sentence": "of the app label^modelname form.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "of the app label modelname form", "final_sentence": "of the app label modelname form"}
{"comment_sentence_id": 1115, "class": "Magics", "comment_sentence": "methods are properly registered at the instance level upon instance", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods are properly registered at the instance level upon instance", "final_sentence": "methods are properly registered at the instance level upon instance"}
{"comment_sentence_id": 633, "class": "MultiValueField", "comment_sentence": "aggregate the logic of multiple fields.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "aggregate the logic of multiple fields", "final_sentence": "aggregate the logic of multiple fields"}
{"comment_sentence_id": 4118, "class": "TreeBuilder", "comment_sentence": "elementclass the class to use for html elements", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "elementclass the class to use for html elements", "final_sentence": "elementclass the class to use for html elements"}
{"comment_sentence_id": 1580, "class": "BooleanArray", "comment_sentence": "to construct an booleanarray from generic array like input, use", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "to construct an booleanarray from generic array like input use", "final_sentence": "to construct an booleanarray from generic array like input use"}
{"comment_sentence_id": 1709, "class": "CategoricalIndex", "comment_sentence": "are not possible.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "are not possible", "final_sentence": "are not possible"}
{"comment_sentence_id": 3099, "class": "Markup", "comment_sentence": "markup em foo &amp bar em", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup em foo amp bar em", "final_sentence": "markup em foo amp bar em"}
{"comment_sentence_id": 3187, "class": "MemcachedBytecodeCache", "comment_sentence": "returns the value for the cache key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "returns the value for the cache key", "final_sentence": "returns the value for the cache key"}
{"comment_sentence_id": 3229, "class": "MethodDispatcher", "comment_sentence": "list like object returns the matching value", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "list like object returns the matching value", "final_sentence": "list like object returns the matching value"}
{"comment_sentence_id": 5719, "class": "Unfold", "comment_sentence": "neighborhood.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "neighborhood", "final_sentence": "neighborhood"}
{"comment_sentence_id": 130, "class": "BaseCommand", "comment_sentence": "false .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "false", "final_sentence": "false"}
{"comment_sentence_id": 2425, "class": "Bucket", "comment_sentence": "the buckets get an internal checksum from the cache assigned and use this", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the buckets get an internal checksum from the cache assigned and use this", "final_sentence": "the buckets get an internal checksum from the cache assigned and use this"}
{"comment_sentence_id": 5490, "class": "QuantWrapper", "comment_sentence": "this is used by the quantization utility functions to add the quant and", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is used by the quantization utility functions to add the quant and", "final_sentence": "this is used by the quantization utility functions to add the quant and"}
{"comment_sentence_id": 1657, "class": "CategoricalDtype", "comment_sentence": "methods", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 115, "class": "BaseCommand", "comment_sentence": "message to stderr .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "message to stderr", "final_sentence": "message to stderr"}
{"comment_sentence_id": 4160, "class": "_OpNamespace", "comment_sentence": "torch^get operation , a function bound from c , and then in a similar", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "torch get operation a function bound from c and then in a similar", "final_sentence": "torch get operation a function bound from c and then in a similar"}
{"comment_sentence_id": 1733, "class": "CategoricalIndex", "comment_sentence": "attributes", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 1673, "class": "CategoricalDtype", "comment_sentence": "dtype category", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "dtype category", "final_sentence": "dtype category"}
{"comment_sentence_id": 5, "class": "AmbiguityError", "comment_sentence": "more than one migration matches a name prefix.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "more than one migration matches a name prefix", "final_sentence": "more than one migration matches a name prefix"}
{"comment_sentence_id": 3605, "class": "Path", "comment_sentence": "secondly, it can perform various", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "secondly it can perform various", "final_sentence": "secondly it can perform various"}
{"comment_sentence_id": 1292, "class": "ConfigDict", "comment_sentence": ", int, 99 ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "int 99", "final_sentence": "int 99"}
{"comment_sentence_id": 54, "class": "AtomicTests", "comment_sentence": "implementation , there are only a few basic tests with the decorator", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "implementation there are only a few basic tests with the decorator", "final_sentence": "implementation there are only a few basic tests with the decorator"}
{"comment_sentence_id": 1553, "class": "AccessorCallableDocumenter", "comment_sentence": "call from the method signature for", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "call from the method signature for", "final_sentence": "call from the method signature for"}
{"comment_sentence_id": 2385, "class": "And", "comment_sentence": "may also be constructed using the operator, which will", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "may also be constructed using the operator which will", "final_sentence": "may also be constructed using the operator which will"}
{"comment_sentence_id": 4254, "class": "Adam", "comment_sentence": "https openreview^net forum?id ryqu7f rz", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "https openreview net forum id ryqu7f rz", "final_sentence": "https openreview net forum id ryqu7f rz"}
{"comment_sentence_id": 5705, "class": "Unfold", "comment_sentence": "sides for attr padding number of points for each dimension before", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "sides for attr padding number of points for each dimension before", "final_sentence": "sides for attr padding number of points for each dimension before"}
{"comment_sentence_id": 1665, "class": "CategoricalDtype", "comment_sentence": "for more.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "for more", "final_sentence": "for more"}
{"comment_sentence_id": 635, "class": "MultiValueField", "comment_sentence": "cleaned into a single value according to self^fields.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "cleaned into a single value according to self fields", "final_sentence": "cleaned into a single value according to self fields"}
{"comment_sentence_id": 2599, "class": "Environment", "comment_sentence": "if given and a string, this will be used as prefix for line based", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if given and a string this will be used as prefix for line based", "final_sentence": "if given and a string this will be used as prefix for line based"}
{"comment_sentence_id": 5299, "class": "Module", "comment_sentence": "self^conv2 nn^conv2d 20, 20, 5", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "self conv2 nn conv2d 20 20 5", "final_sentence": "self conv2 nn conv2d 20 20 5"}
{"comment_sentence_id": 1558, "class": "AccessorDocumenter", "comment_sentence": "specialized documenter subclass for accessors.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "specialized documenter subclass for accessors", "final_sentence": "specialized documenter subclass for accessors"}
{"comment_sentence_id": 5717, "class": "Unfold", "comment_sentence": "dilation int or tuple, optional a parameter that controls the", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "dilation int or tuple optional a parameter that controls the", "final_sentence": "dilation int or tuple optional a parameter that controls the"}
{"comment_sentence_id": 1575, "class": "BooleanArray", "comment_sentence": "represented by 2 numpy arrays a boolean array with the data and", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "represented by 2 numpy arrays a boolean array with the data and", "final_sentence": "represented by 2 numpy arrays a boolean array with the data and"}
{"comment_sentence_id": 5707, "class": "Unfold", "comment_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm", "final_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm"}
{"comment_sentence_id": 1302, "class": "ConfigDict", "comment_sentence": "pot potatoes pot liquids vodka 123", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot potatoes pot liquids vodka 123", "final_sentence": "pot potatoes pot liquids vodka 123"}
{"comment_sentence_id": 14, "class": "ArchiveIndexView", "comment_sentence": "top level archive of date based items.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "top level archive of date based items", "final_sentence": "top level archive of date based items"}
{"comment_sentence_id": 3076, "class": "Markup", "comment_sentence": "it to mark it safe without escaping.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "it to mark it safe without escaping", "final_sentence": "it to mark it safe without escaping"}
{"comment_sentence_id": 656, "class": "MultiWidget", "comment_sentence": "adds a list of subwidgets to the context as widget subwidgets .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "adds a list of subwidgets to the context as widget subwidgets", "final_sentence": "adds a list of subwidgets to the context as widget subwidgets"}
{"comment_sentence_id": 3090, "class": "Markup", "comment_sentence": "def html self", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "def html self", "final_sentence": "def html self"}
{"comment_sentence_id": 933, "class": "Audio", "comment_sentence": "filename unicode", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "filename unicode", "final_sentence": "filename unicode"}
{"comment_sentence_id": 24, "class": "Atomic", "comment_sentence": "it s possible to disable the creation of savepoints if the goal is to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it s possible to disable the creation of savepoints if the goal is to", "final_sentence": "it s possible to disable the creation of savepoints if the goal is to"}
{"comment_sentence_id": 4243, "class": "Adam", "comment_sentence": "betas tuple float, float , optional coefficients used for computing", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "betas tuple float float optional coefficients used for computing", "final_sentence": "betas tuple float float optional coefficients used for computing"}
{"comment_sentence_id": 3097, "class": "Markup", "comment_sentence": "all methods escape their arguments and return a markup instance.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "all methods escape their arguments and return a markup instance", "final_sentence": "all methods escape their arguments and return a markup instance"}
{"comment_sentence_id": 4213, "class": "Adadelta", "comment_sentence": "it has been proposed in adadelta an adaptive learning rate method .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it has been proposed in adadelta an adaptive learning rate method", "final_sentence": "it has been proposed in adadelta an adaptive learning rate method"}
{"comment_sentence_id": 5260, "class": "LBFGS", "comment_sentence": "default 20", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 20", "final_sentence": "default 20"}
{"comment_sentence_id": 90, "class": "BaseCommand", "comment_sentence": "use this class if you want access to all of the mechanisms which", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "use this class if you want access to all of the mechanisms which", "final_sentence": "use this class if you want access to all of the mechanisms which"}
{"comment_sentence_id": 139, "class": "BaseCommand", "comment_sentence": "rather than all applications models, call", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "rather than all applications models call", "final_sentence": "rather than all applications models call"}
{"comment_sentence_id": 3387, "class": "Option", "comment_sentence": "all other parameters are passed onwards to the parameter constructor.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "all other parameters are passed onwards to the parameter constructor", "final_sentence": "all other parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 400, "class": "IntFromGeom", "comment_sentence": "argument is a geometry, return type is an integer.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "argument is a geometry return type is an integer", "final_sentence": "argument is a geometry return type is an integer"}
{"comment_sentence_id": 4737, "class": "Conv3d", "comment_sentence": "the second int for the height dimension and the third int for the width dimension", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the second int for the height dimension and the third int for the width dimension", "final_sentence": "the second int for the height dimension and the third int for the width dimension"}
{"comment_sentence_id": 583, "class": "MigrationWriter", "comment_sentence": "of the migration file from it.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "of the migration file from it", "final_sentence": "of the migration file from it"}
{"comment_sentence_id": 5493, "class": "QuantWrapper", "comment_sentence": "will be swapped to nnq^quantize which does actual quantization.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "will be swapped to nnq quantize which does actual quantization", "final_sentence": "will be swapped to nnq quantize which does actual quantization"}
{"comment_sentence_id": 1707, "class": "CategoricalIndex", "comment_sentence": "like categorical, it might have an order, but numerical operations", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "like categorical it might have an order but numerical operations", "final_sentence": "like categorical it might have an order but numerical operations"}
{"comment_sentence_id": 1663, "class": "CategoricalDtype", "comment_sentence": "independent of the values.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "independent of the values", "final_sentence": "independent of the values"}
{"comment_sentence_id": 3295, "class": "NotMyLock", "comment_sentence": "try", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "try", "final_sentence": "try"}
{"comment_sentence_id": 1111, "class": "Magics", "comment_sentence": "must", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "must", "final_sentence": "must"}
{"comment_sentence_id": 3191, "class": "MemcachedBytecodeCache", "comment_sentence": "is added before the actual cache key and the timeout for the bytecode in", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "is added before the actual cache key and the timeout for the bytecode in", "final_sentence": "is added before the actual cache key and the timeout for the bytecode in"}
{"comment_sentence_id": 2586, "class": "Environment", "comment_sentence": "the string marking the end of a print statement.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the end of a print statement", "final_sentence": "the string marking the end of a print statement"}
{"comment_sentence_id": 5655, "class": "TransformerEncoderLayer", "comment_sentence": "dim feedforward the dimension of the feedforward network model default 2048 .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "dim feedforward the dimension of the feedforward network model default 2048", "final_sentence": "dim feedforward the dimension of the feedforward network model default 2048"}
{"comment_sentence_id": 2585, "class": "Environment", "comment_sentence": "variable end string", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "variable end string", "final_sentence": "variable end string"}
{"comment_sentence_id": 2638, "class": "Environment", "comment_sentence": "expression before it is output.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "expression before it is output", "final_sentence": "expression before it is output"}
{"comment_sentence_id": 5446, "class": "OneHotCategorical", "comment_sentence": "m onehotcategorical torch^tensor 025, 025, 025, 025", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "m onehotcategorical torch tensor 025 025 025 025", "final_sentence": "m onehotcategorical torch tensor 025 025 025 025"}
{"comment_sentence_id": 3673, "class": "PoolManager", "comment_sentence": "param connection pool kw", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param connection pool kw", "final_sentence": "param connection pool kw"}
{"comment_sentence_id": 3269, "class": "NotAny", "comment_sentence": "# operation hierarchy, use infixnotation", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "operation hierarchy use infixnotation", "final_sentence": "operation hierarchy use infixnotation"}
{"comment_sentence_id": 2658, "class": "Environment", "comment_sentence": "out the least recently used template.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "out the least recently used template", "final_sentence": "out the least recently used template"}
{"comment_sentence_id": 5491, "class": "QuantWrapper", "comment_sentence": "dequant modules, before convert function quantstub will just be observer,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "dequant modules before convert function quantstub will just be observer", "final_sentence": "dequant modules before convert function quantstub will just be observer"}
{"comment_sentence_id": 4398, "class": "BatchNorm1d", "comment_sentence": "# without learnable parameters", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "without learnable parameters", "final_sentence": "without learnable parameters"}
{"comment_sentence_id": 134, "class": "BaseCommand", "comment_sentence": "requires system checks", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "requires system checks", "final_sentence": "requires system checks"}
{"comment_sentence_id": 1851, "class": "ExcelFile", "comment_sentence": "path^local.localpath ,", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "path local localpath", "final_sentence": "path local localpath"}
{"comment_sentence_id": 4241, "class": "Adam", "comment_sentence": "parameter groups", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 2612, "class": "Environment", "comment_sentence": "newline sequence", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "newline sequence", "final_sentence": "newline sequence"}
{"comment_sentence_id": 2410, "class": "Argument", "comment_sentence": "provide fewer features than options but can have infinite nargs", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "provide fewer features than options but can have infinite nargs", "final_sentence": "provide fewer features than options but can have infinite nargs"}
{"comment_sentence_id": 4344, "class": "BaseTestCase", "comment_sentence": "base class used for all tensorboard tests", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class used for all tensorboard tests", "final_sentence": "base class used for all tensorboard tests"}
{"comment_sentence_id": 1275, "class": "ConfigDict", "comment_sentence": "a human readable description of what the variable is", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a human readable description of what the variable is", "final_sentence": "a human readable description of what the variable is"}
{"comment_sentence_id": 5196, "class": "EnforceUnique", "comment_sentence": "raises an error if a key is seen more than once.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "raises an error if a key is seen more than once", "final_sentence": "raises an error if a key is seen more than once"}
{"comment_sentence_id": 931, "class": "Audio", "comment_sentence": "url unicode", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "url unicode", "final_sentence": "url unicode"}
{"comment_sentence_id": 1068, "class": "HistoryAccessor", "comment_sentence": "access the history database without adding to it.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "access the history database without adding to it", "final_sentence": "access the history database without adding to it"}
{"comment_sentence_id": 3261, "class": "NotAny", "comment_sentence": "a null token list.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a null token list", "final_sentence": "a null token list"}
{"comment_sentence_id": 3628, "class": "Path", "comment_sentence": "represent the path.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "represent the path", "final_sentence": "represent the path"}
{"comment_sentence_id": 52, "class": "AtomicTests", "comment_sentence": "robust way to ask the database for its current transaction state.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "robust way to ask the database for its current transaction state", "final_sentence": "robust way to ask the database for its current transaction state"}
{"comment_sentence_id": 4401, "class": "BatchNorm1d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 2090, "class": "PlotAccessor", "comment_sentence": "from 0 left bottom end to 1 right top end .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "from 0 left bottom end to 1 right top end", "final_sentence": "from 0 left bottom end to 1 right top end"}
{"comment_sentence_id": 1603, "class": "BooleanArray", "comment_sentence": "create an booleanarray with func pandas^array", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "create an booleanarray with func pandas array", "final_sentence": "create an booleanarray with func pandas array"}
{"comment_sentence_id": 2069, "class": "PlotAccessor", "comment_sentence": "labels with right in the legend.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "labels with right in the legend", "final_sentence": "labels with right in the legend"}
{"comment_sentence_id": 50, "class": "AtomicTests", "comment_sentence": "tests for the atomic decorator and context manager.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "tests for the atomic decorator and context manager", "final_sentence": "tests for the atomic decorator and context manager"}
{"comment_sentence_id": 27, "class": "Atomic", "comment_sentence": "connection.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "connection", "final_sentence": "connection"}
{"comment_sentence_id": 4356, "class": "BatchNorm1d", "comment_sentence": "also by default, during training this layer keeps running estimates of its", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "also by default during training this layer keeps running estimates of its", "final_sentence": "also by default during training this layer keeps running estimates of its"}
{"comment_sentence_id": 3326, "class": "omdict", "comment_sentence": "added parameters are optional, existing use remains unaffected.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "added parameters are optional existing use remains unaffected", "final_sentence": "added parameters are optional existing use remains unaffected"}
{"comment_sentence_id": 5219, "class": "FisherSnedecor", "comment_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2 .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2", "final_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2"}
{"comment_sentence_id": 1640, "class": "BusinessMixin", "comment_sentence": "mixin to business types to provide related functions.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "mixin to business types to provide related functions", "final_sentence": "mixin to business types to provide related functions"}
{"comment_sentence_id": 4718, "class": "Conv3d", "comment_sentence": "attr padding controls the amount of implicit zero paddings on both", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr padding controls the amount of implicit zero paddings on both", "final_sentence": "attr padding controls the amount of implicit zero paddings on both"}
{"comment_sentence_id": 5494, "class": "QuantWrapper", "comment_sentence": "similarly", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "similarly", "final_sentence": "similarly"}
{"comment_sentence_id": 3073, "class": "Markup", "comment_sentence": "document, either because it was escaped or because it was marked", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "document either because it was escaped or because it was marked", "final_sentence": "document either because it was escaped or because it was marked"}
{"comment_sentence_id": 1857, "class": "ExcelFile", "comment_sentence": "note that odf reads tables out of opendocument formatted files.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "note that odf reads tables out of opendocument formatted files", "final_sentence": "note that odf reads tables out of opendocument formatted files"}
{"comment_sentence_id": 1561, "class": "Base", "comment_sentence": "input data", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "input data", "final_sentence": "input data"}
{"comment_sentence_id": 1304, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 2, "class": "AccessMixin", "comment_sentence": "functionality.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "functionality", "final_sentence": "functionality"}
{"comment_sentence_id": 3669, "class": "PoolManager", "comment_sentence": "recently used pool.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "recently used pool", "final_sentence": "recently used pool"}
{"comment_sentence_id": 5431, "class": "NetModifier", "comment_sentence": "modifier net", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "modifier net", "final_sentence": "modifier net"}
{"comment_sentence_id": 1425, "class": "ConfigureMailboxes", "comment_sentence": "if not account is specified, the mailbox is only assigned an id for use", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "if not account is specified the mailbox is only assigned an id for use", "final_sentence": "if not account is specified the mailbox is only assigned an id for use"}
{"comment_sentence_id": 3078, "class": "Markup", "comment_sentence": "meth escape class method instead.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "meth escape class method instead", "final_sentence": "meth escape class method instead"}
{"comment_sentence_id": 1607, "class": "BooleanArray", "comment_sentence": "length 3, dtype boolean", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "length 3 dtype boolean", "final_sentence": "length 3 dtype boolean"}
{"comment_sentence_id": 2057, "class": "PlotAccessor", "comment_sentence": "table bool, series or dataframe, default false", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "table bool series or dataframe default false", "final_sentence": "table bool series or dataframe default false"}
{"comment_sentence_id": 4150, "class": "_OpNamespace", "comment_sentence": "instead, the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "instead the", "final_sentence": "instead the"}
{"comment_sentence_id": 4308, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 5x7x9", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "target output size of 5x7x9", "final_sentence": "target output size of 5x7x9"}
{"comment_sentence_id": 1286, "class": "ConfigDict", "comment_sentence": "if the default value is an empty list, it is assumed to be a list of", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "if the default value is an empty list it is assumed to be a list of", "final_sentence": "if the default value is an empty list it is assumed to be a list of"}
{"comment_sentence_id": 5441, "class": "OneHotCategorical", "comment_sentence": "note attr probs must be non negative, finite and have a non zero sum,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "note attr probs must be non negative finite and have a non zero sum", "final_sentence": "note attr probs must be non negative finite and have a non zero sum"}
{"comment_sentence_id": 5936, "class": "PreparedRequest", "comment_sentence": "usage", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 4144, "class": "_OpNamespace", "comment_sentence": "an op namespace to dynamically bind operators into python.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "an op namespace to dynamically bind operators into python", "final_sentence": "an op namespace to dynamically bind operators into python"}
{"comment_sentence_id": 1098, "class": "LazyEvaluate", "comment_sentence": "at that time, such as the current time or working directory.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "at that time such as the current time or working directory", "final_sentence": "at that time such as the current time or working directory"}
{"comment_sentence_id": 1281, "class": "ConfigDict", "comment_sentence": "to be dictionaries or lists of items that match the rules defined.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "to be dictionaries or lists of items that match the rules defined", "final_sentence": "to be dictionaries or lists of items that match the rules defined"}
{"comment_sentence_id": 1095, "class": "IPythonInputSplitter", "comment_sentence": "an input splitter that recognizes all of ipython s special syntax.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "an input splitter that recognizes all of ipython s special syntax", "final_sentence": "an input splitter that recognizes all of ipython s special syntax"}
{"comment_sentence_id": 519, "class": "MigrationGraph", "comment_sentence": "replaced migrations to point to the replacing one.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "replaced migrations to point to the replacing one", "final_sentence": "replaced migrations to point to the replacing one"}
{"comment_sentence_id": 1855, "class": "ExcelFile", "comment_sentence": "if io is not a buffer or path, this must be set to identify io.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if io is not a buffer or path this must be set to identify io", "final_sentence": "if io is not a buffer or path this must be set to identify io"}
{"comment_sentence_id": 88, "class": "BaseCommand", "comment_sentence": "the base class from which all management commands ultimately", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the base class from which all management commands ultimately", "final_sentence": "the base class from which all management commands ultimately"}
{"comment_sentence_id": 5265, "class": "LBFGS", "comment_sentence": "tolerance change float termination tolerance on function", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "tolerance change float termination tolerance on function", "final_sentence": "tolerance change float termination tolerance on function"}
{"comment_sentence_id": 4396, "class": "BatchNorm1d", "comment_sentence": "# with learnable parameters", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "with learnable parameters", "final_sentence": "with learnable parameters"}
{"comment_sentence_id": 4722, "class": "Conv3d", "comment_sentence": "attr groups controls the connections between inputs and outputs.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr groups controls the connections between inputs and outputs", "final_sentence": "attr groups controls the connections between inputs and outputs"}
{"comment_sentence_id": 3193, "class": "MemcachedBytecodeCache", "comment_sentence": "we recommend a high or no timeout.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "we recommend a high or no timeout", "final_sentence": "we recommend a high or no timeout"}
{"comment_sentence_id": 520, "class": "MigrationGraph", "comment_sentence": "a node should be a tuple app path, migration name .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a node should be a tuple app path migration name", "final_sentence": "a node should be a tuple app path migration name"}
{"comment_sentence_id": 107, "class": "BaseCommand", "comment_sentence": "the execute method attempts to carry out the command by", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the execute method attempts to carry out the command by", "final_sentence": "the execute method attempts to carry out the command by"}
{"comment_sentence_id": 5427, "class": "NetModifier", "comment_sentence": "inherited classes should implement the modify net method where", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "inherited classes should implement the modify net method where", "final_sentence": "inherited classes should implement the modify net method where"}
{"comment_sentence_id": 4460, "class": "BCEWithLogitsLoss", "comment_sentence": "this loss combines a sigmoid layer and the bceloss in one single", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this loss combines a sigmoid layer and the bceloss in one single", "final_sentence": "this loss combines a sigmoid layer and the bceloss in one single"}
{"comment_sentence_id": 2077, "class": "PlotAccessor", "comment_sentence": "specify the plotting^backend for the whole session, set", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "specify the plotting backend for the whole session set", "final_sentence": "specify the plotting backend for the whole session set"}
{"comment_sentence_id": 1321, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 2616, "class": "Environment", "comment_sentence": "the default is n which is a", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the default is n which is a", "final_sentence": "the default is n which is a"}
{"comment_sentence_id": 5371, "class": "MultiLabelMarginLoss", "comment_sentence": "x torch^floattensor 01, 02, 04, 08", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "x torch floattensor 01 02 04 08", "final_sentence": "x torch floattensor 01 02 04 08"}
{"comment_sentence_id": 2387, "class": "And", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1646, "class": "CategoricalDtype", "comment_sentence": "parameters", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 2053, "class": "PlotAccessor", "comment_sentence": "specify relative alignments for bar plot layout.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "specify relative alignments for bar plot layout", "final_sentence": "specify relative alignments for bar plot layout"}
{"comment_sentence_id": 2049, "class": "PlotAccessor", "comment_sentence": "colorbar bool, optional", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "colorbar bool optional", "final_sentence": "colorbar bool optional"}
{"comment_sentence_id": 611, "class": "MultiValueDict", "comment_sentence": "this class exists to solve the irritating problem raised by cgi^parse qs,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class exists to solve the irritating problem raised by cgi parse qs", "final_sentence": "this class exists to solve the irritating problem raised by cgi parse qs"}
{"comment_sentence_id": 4752, "class": "Conv3d", "comment_sentence": "args", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 105, "class": "BaseCommand", "comment_sentence": "passing the parsed arguments.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "passing the parsed arguments", "final_sentence": "passing the parsed arguments"}
{"comment_sentence_id": 3081, "class": "Markup", "comment_sentence": "markup 42", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 4120, "class": "TreeBuilder", "comment_sentence": "doctypeclass the class to use for doctypes", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "doctypeclass the class to use for doctypes", "final_sentence": "doctypeclass the class to use for doctypes"}
{"comment_sentence_id": 3620, "class": "Path", "comment_sentence": "this means", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "this means", "final_sentence": "this means"}
{"comment_sentence_id": 3312, "class": "omdict", "comment_sentence": "dictionary, self.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "dictionary self", "final_sentence": "dictionary self"}
{"comment_sentence_id": 2620, "class": "Environment", "comment_sentence": "preserve the trailing newline when rendering templates.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "preserve the trailing newline when rendering templates", "final_sentence": "preserve the trailing newline when rendering templates"}
{"comment_sentence_id": 2602, "class": "Environment", "comment_sentence": "versionadded 22", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionadded 22", "final_sentence": "versionadded 22"}
{"comment_sentence_id": 141, "class": "BaseCommand", "comment_sentence": "is the list of application s configuration provided by the", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "is the list of application s configuration provided by the", "final_sentence": "is the list of application s configuration provided by the"}
{"comment_sentence_id": 3336, "class": "omdict", "comment_sentence": "load , size , reverse ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "load size reverse", "final_sentence": "load size reverse"}
{"comment_sentence_id": 1550, "class": "AbstractHolidayCalendar", "comment_sentence": "abstract interface to create holidays following certain rules.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "abstract interface to create holidays following certain rules", "final_sentence": "abstract interface to create holidays following certain rules"}
{"comment_sentence_id": 5373, "class": "MultiLabelMarginLoss", "comment_sentence": "y torch^longtensor 3, 0, 1, 1", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "y torch longtensor 3 0 1 1", "final_sentence": "y torch longtensor 3 0 1 1"}
{"comment_sentence_id": 3614, "class": "Path", "comment_sentence": "param file okay controls if a file is a possible value.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param file okay controls if a file is a possible value", "final_sentence": "param file okay controls if a file is a possible value"}
{"comment_sentence_id": 5505, "class": "ResNetBuilder", "comment_sentence": "helper class for constructing residual blocks.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "helper class for constructing residual blocks", "final_sentence": "helper class for constructing residual blocks"}
{"comment_sentence_id": 1650, "class": "CategoricalDtype", "comment_sentence": "whether or not this categorical is treated as a ordered categorical.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "whether or not this categorical is treated as a ordered categorical", "final_sentence": "whether or not this categorical is treated as a ordered categorical"}
{"comment_sentence_id": 5713, "class": "Unfold", "comment_sentence": "default 1", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 1078, "class": "InteractiveShellApp", "comment_sentence": "as part of configuring a shell environment.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "as part of configuring a shell environment", "final_sentence": "as part of configuring a shell environment"}
{"comment_sentence_id": 3670, "class": "PoolManager", "comment_sentence": "param headers", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param headers", "final_sentence": "param headers"}
{"comment_sentence_id": 4673, "class": "ConstantPad3d", "comment_sentence": "if is int , uses the same", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if is int uses the same", "final_sentence": "if is int uses the same"}
{"comment_sentence_id": 2576, "class": "Environment", "comment_sentence": "block start string", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "block start string", "final_sentence": "block start string"}
{"comment_sentence_id": 1850, "class": "ExcelFile", "comment_sentence": "io str, path object pathlib^path or py.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "io str path object pathlib path or py", "final_sentence": "io str path object pathlib path or py"}
{"comment_sentence_id": 3314, "class": "omdict", "comment_sentence": "linked list node references, one for each value associated with that key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "linked list node references one for each value associated with that key", "final_sentence": "linked list node references one for each value associated with that key"}
{"comment_sentence_id": 2225, "class": "SetopCheck", "comment_sentence": "to perform the type check in advance.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "to perform the type check in advance", "final_sentence": "to perform the type check in advance"}
{"comment_sentence_id": 3667, "class": "PoolManager", "comment_sentence": "param num pools", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param num pools", "final_sentence": "param num pools"}
{"comment_sentence_id": 4252, "class": "Adam", "comment_sentence": "https arxiv^org abs 14126980", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "https arxiv org abs 14126980", "final_sentence": "https arxiv org abs 14126980"}
{"comment_sentence_id": 1296, "class": "ConfigDict", "comment_sentence": ",", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 103, "class": "BaseCommand", "comment_sentence": "any environment changes requested by options like", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "any environment changes requested by options like", "final_sentence": "any environment changes requested by options like"}
{"comment_sentence_id": 5263, "class": "LBFGS", "comment_sentence": "tolerance grad float termination tolerance on first order optimality", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "tolerance grad float termination tolerance on first order optimality", "final_sentence": "tolerance grad float termination tolerance on first order optimality"}
{"comment_sentence_id": 1132, "class": "MyFrame", "comment_sentence": "this is myframe.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this is myframe", "final_sentence": "this is myframe"}
{"comment_sentence_id": 3310, "class": "omdict", "comment_sentence": "items.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "items", "final_sentence": "items"}
{"comment_sentence_id": 3674, "class": "PoolManager", "comment_sentence": "additional parameters are used to create fresh", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "additional parameters are used to create fresh", "final_sentence": "additional parameters are used to create fresh"}
{"comment_sentence_id": 89, "class": "BaseCommand", "comment_sentence": "derive.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "derive", "final_sentence": "derive"}
{"comment_sentence_id": 2080, "class": "PlotAccessor", "comment_sentence": "kwargs", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "kwargs", "final_sentence": "kwargs"}
{"comment_sentence_id": 2622, "class": "Environment", "comment_sentence": "if present, to be stripped from the end of the template.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if present to be stripped from the end of the template", "final_sentence": "if present to be stripped from the end of the template"}
{"comment_sentence_id": 69, "class": "AutoFieldMeta", "comment_sentence": "to be implemented on field to be used instead.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "to be implemented on field to be used instead", "final_sentence": "to be implemented on field to be used instead"}
{"comment_sentence_id": 1298, "class": "ConfigDict", "comment_sentence": "x x , str, , ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "x x str", "final_sentence": "x x str"}
{"comment_sentence_id": 2601, "class": "Environment", "comment_sentence": "see also ref line statements .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "see also ref line statements", "final_sentence": "see also ref line statements"}
{"comment_sentence_id": 586, "class": "ModelBase", "comment_sentence": "metaclass for all models.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "metaclass for all models", "final_sentence": "metaclass for all models"}
{"comment_sentence_id": 5488, "class": "QuantWrapper", "comment_sentence": "dequantstub and surround the call to module with call to quant and dequant", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "dequantstub and surround the call to module with call to quant and dequant", "final_sentence": "dequantstub and surround the call to module with call to quant and dequant"}
{"comment_sentence_id": 4678, "class": "ConstantPad3d", "comment_sentence": "math text padding front , math text padding back", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "math text padding front math text padding back", "final_sentence": "math text padding front math text padding back"}
{"comment_sentence_id": 5289, "class": "Module", "comment_sentence": "modules can also contain other modules, allowing to nest them in", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "modules can also contain other modules allowing to nest them in", "final_sentence": "modules can also contain other modules allowing to nest them in"}
{"comment_sentence_id": 4362, "class": "BatchNorm1d", "comment_sentence": "keep running estimates, and batch statistics are instead used during", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "keep running estimates and batch statistics are instead used during", "final_sentence": "keep running estimates and batch statistics are instead used during"}
{"comment_sentence_id": 4148, "class": "_OpNamespace", "comment_sentence": ".", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 4238, "class": "Adam", "comment_sentence": "it has been proposed in adam a method for stochastic optimization .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it has been proposed in adam a method for stochastic optimization", "final_sentence": "it has been proposed in adam a method for stochastic optimization"}
{"comment_sentence_id": 5724, "class": "Unfold", "comment_sentence": "for the case of two input spatial dimensions this operation is sometimes", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "for the case of two input spatial dimensions this operation is sometimes", "final_sentence": "for the case of two input spatial dimensions this operation is sometimes"}
{"comment_sentence_id": 4720, "class": "Conv3d", "comment_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm", "final_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm"}
{"comment_sentence_id": 5226, "class": "FisherSnedecor", "comment_sentence": "df2 float or tensor degrees of freedom parameter 2", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "df2 float or tensor degrees of freedom parameter 2", "final_sentence": "df2 float or tensor degrees of freedom parameter 2"}
{"comment_sentence_id": 2210, "class": "SelectNSeries", "comment_sentence": "implement n largest smallest for series", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "implement n largest smallest for series", "final_sentence": "implement n largest smallest for series"}
{"comment_sentence_id": 3259, "class": "NotAny", "comment_sentence": "not skip over leading whitespace.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "not skip over leading whitespace", "final_sentence": "not skip over leading whitespace"}
{"comment_sentence_id": 3306, "class": "omdict", "comment_sentence": "key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "key", "final_sentence": "key"}
{"comment_sentence_id": 5121, "class": "EmbeddingBag", "comment_sentence": "offsets torch^longtensor 0,4", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "offsets torch longtensor 0 4", "final_sentence": "offsets torch longtensor 0 4"}
{"comment_sentence_id": 1070, "class": "HistoryAccessor", "comment_sentence": "ipython shells use", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "ipython shells use", "final_sentence": "ipython shells use"}
{"comment_sentence_id": 1581, "class": "BooleanArray", "comment_sentence": "func pandas^array specifying dtype boolean see examples", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "func pandas array specifying dtype boolean see examples", "final_sentence": "func pandas array specifying dtype boolean see examples"}
{"comment_sentence_id": 1109, "class": "Magics", "comment_sentence": ".", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 5238, "class": "LastNWindowCollector", "comment_sentence": "this layer is not thread safe.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this layer is not thread safe", "final_sentence": "this layer is not thread safe"}
{"comment_sentence_id": 1341, "class": "ConfigDict", "comment_sentence": "TRUE", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 4165, "class": "_OpNamespace", "comment_sentence": "and subsequent accesses will incur no further lookup the namespace and", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "and subsequent accesses will incur no further lookup the namespace and", "final_sentence": "and subsequent accesses will incur no further lookup the namespace and"}
{"comment_sentence_id": 4480, "class": "BCEWithLogitsLoss", "comment_sentence": "note that the targets t i should be numbers", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "note that the targets t i should be numbers", "final_sentence": "note that the targets t i should be numbers"}
{"comment_sentence_id": 1655, "class": "CategoricalDtype", "comment_sentence": "categories", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "categories", "final_sentence": "categories"}
{"comment_sentence_id": 2071, "class": "PlotAccessor", "comment_sentence": "if true, boolean values can be plotted.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if true boolean values can be plotted", "final_sentence": "if true boolean values can be plotted"}
{"comment_sentence_id": 654, "class": "MultiWidget", "comment_sentence": "a widget that is composed of multiple widgets.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a widget that is composed of multiple widgets", "final_sentence": "a widget that is composed of multiple widgets"}
{"comment_sentence_id": 1048, "class": "DisplayHook", "comment_sentence": "the custom ipython displayhook to replace sys^displayhook.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the custom ipython displayhook to replace sys displayhook", "final_sentence": "the custom ipython displayhook to replace sys displayhook"}
{"comment_sentence_id": 4108, "class": "Token", "comment_sentence": "token class.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "token class", "final_sentence": "token class"}
{"comment_sentence_id": 3332, "class": "omdict", "comment_sentence": "name interact with lists of values, and methods with all in their name", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "name interact with lists of values and methods with all in their name", "final_sentence": "name interact with lists of values and methods with all in their name"}
{"comment_sentence_id": 3257, "class": "NotAny", "comment_sentence": "does not match at the current position.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "does not match at the current position", "final_sentence": "does not match at the current position"}
{"comment_sentence_id": 3248, "class": "NativeEnvironment", "comment_sentence": "an environment that renders templates to native python types.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "an environment that renders templates to native python types", "final_sentence": "an environment that renders templates to native python types"}
{"comment_sentence_id": 3604, "class": "Path", "comment_sentence": "handle it returns just the filename.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "handle it returns just the filename", "final_sentence": "handle it returns just the filename"}
{"comment_sentence_id": 2642, "class": "Environment", "comment_sentence": "if set to true the xml html autoescaping feature is enabled by", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if set to true the xml html autoescaping feature is enabled by", "final_sentence": "if set to true the xml html autoescaping feature is enabled by"}
{"comment_sentence_id": 2357, "class": "_BZ2Proxy", "comment_sentence": "small proxy class that enables external file object", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "small proxy class that enables external file object", "final_sentence": "small proxy class that enables external file object"}
{"comment_sentence_id": 3185, "class": "MemcachedBytecodeCache", "comment_sentence": "item should exist.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "item should exist", "final_sentence": "item should exist"}
{"comment_sentence_id": 5369, "class": "MultiLabelMarginLoss", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1050, "class": "DisplayHook", "comment_sentence": "that gets called anytime user code returns a value.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "that gets called anytime user code returns a value", "final_sentence": "that gets called anytime user code returns a value"}
{"comment_sentence_id": 5470, "class": "Poisson", "comment_sentence": "m^sample", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "m sample", "final_sentence": "m sample"}
{"comment_sentence_id": 1316, "class": "ConfigDict", "comment_sentence": "pot colors", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot colors", "final_sentence": "pot colors"}
{"comment_sentence_id": 4298, "class": "AdaptiveMaxPool3d", "comment_sentence": "the number of output features is equal to the number of input planes.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the number of output features is equal to the number of input planes", "final_sentence": "the number of output features is equal to the number of input planes"}
{"comment_sentence_id": 4366, "class": "BatchNorm1d", "comment_sentence": "classes and the conventional notion of momentum.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "classes and the conventional notion of momentum", "final_sentence": "classes and the conventional notion of momentum"}
{"comment_sentence_id": 3086, "class": "Markup", "comment_sentence": "use.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "use", "final_sentence": "use"}
{"comment_sentence_id": 663, "class": "MyModel", "comment_sentence": "model subclass with a custom base using metaclass.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "model subclass with a custom base using metaclass", "final_sentence": "model subclass with a custom base using metaclass"}
{"comment_sentence_id": 5934, "class": "PreparedRequest", "comment_sentence": "containing the exact bytes that will be sent to the server.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "containing the exact bytes that will be sent to the server", "final_sentence": "containing the exact bytes that will be sent to the server"}
{"comment_sentence_id": 2655, "class": "Environment", "comment_sentence": "the size of the cache.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the size of the cache", "final_sentence": "the size of the cache"}
{"comment_sentence_id": 5657, "class": "TransformerEncoderLayer", "comment_sentence": "activation the activation function of intermediate layer, relu or gelu default relu .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "activation the activation function of intermediate layer relu or gelu default relu", "final_sentence": "activation the activation function of intermediate layer relu or gelu default relu"}
{"comment_sentence_id": 2662, "class": "Environment", "comment_sentence": "versionchanged 28", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "versionchanged 28", "final_sentence": "versionchanged 28"}
{"comment_sentence_id": 5495, "class": "QuantWrapper", "comment_sentence": "for dequantstub .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "for dequantstub", "final_sentence": "for dequantstub"}
{"comment_sentence_id": 4351, "class": "BatchNorm1d", "comment_sentence": "the mean and standard deviation are calculated per dimension over", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the mean and standard deviation are calculated per dimension over", "final_sentence": "the mean and standard deviation are calculated per dimension over"}
{"comment_sentence_id": 1337, "class": "ConfigDict", "comment_sentence": "pot^rules potatoes", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "pot rules potatoes", "final_sentence": "pot rules potatoes"}
{"comment_sentence_id": 5334, "class": "MultiLabelMarginLoss", "comment_sentence": "starts at the front.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "starts at the front", "final_sentence": "starts at the front"}
{"comment_sentence_id": 4248, "class": "Adam", "comment_sentence": "amsgrad boolean, optional whether to use the amsgrad variant of this", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "amsgrad boolean optional whether to use the amsgrad variant of this", "final_sentence": "amsgrad boolean optional whether to use the amsgrad variant of this"}
{"comment_sentence_id": 1082, "class": "InteractiveShellApp", "comment_sentence": "meth init shell to be implemented by the subclass", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "meth init shell to be implemented by the subclass", "final_sentence": "meth init shell to be implemented by the subclass"}
{"comment_sentence_id": 65, "class": "AutoFieldMeta", "comment_sentence": "stored in the database.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "stored in the database", "final_sentence": "stored in the database"}
{"comment_sentence_id": 4394, "class": "BatchNorm1d", "comment_sentence": "output math n, c or math n, c, l same shape as input", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "output math n c or math n c l same shape as input", "final_sentence": "output math n c or math n c l same shape as input"}
{"comment_sentence_id": 3087, "class": "Markup", "comment_sentence": "passing an object that implements html will wrap the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "passing an object that implements html will wrap the", "final_sentence": "passing an object that implements html will wrap the"}
{"comment_sentence_id": 552, "class": "MigrationLoader", "comment_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "final_sentence": "any dependency pointers to the replaced migrations are re pointed to the"}
{"comment_sentence_id": 2067, "class": "PlotAccessor", "comment_sentence": "mark right bool, default true", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "mark right bool default true", "final_sentence": "mark right bool default true"}
{"comment_sentence_id": 2065, "class": "PlotAccessor", "comment_sentence": "xerr dataframe, series, array like, dict and str", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "xerr dataframe series array like dict and str", "final_sentence": "xerr dataframe series array like dict and str"}
{"comment_sentence_id": 4158, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op will then invoke getattr on", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "torch ops my namespace my op will then invoke getattr on", "final_sentence": "torch ops my namespace my op will then invoke getattr on"}
{"comment_sentence_id": 2445, "class": "CaseInsensitiveDict", "comment_sentence": "all keys are expected to be strings.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "all keys are expected to be strings", "final_sentence": "all keys are expected to be strings"}
{"comment_sentence_id": 5487, "class": "QuantWrapper", "comment_sentence": "a wrapper class that wraps the input module, adds quantstub and", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a wrapper class that wraps the input module adds quantstub and", "final_sentence": "a wrapper class that wraps the input module adds quantstub and"}
{"comment_sentence_id": 1326, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 2640, "class": "Environment", "comment_sentence": "none implicitly into an empty string here.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "none implicitly into an empty string here", "final_sentence": "none implicitly into an empty string here"}
{"comment_sentence_id": 5372, "class": "MultiLabelMarginLoss", "comment_sentence": "# for target y, only consider labels 3 and 0, not after label 1", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "for target y only consider labels 3 and 0 not after label 1", "final_sentence": "for target y only consider labels 3 and 0 not after label 1"}
{"comment_sentence_id": 3304, "class": "omdict", "comment_sentence": "ordered multivalue dictionary.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "ordered multivalue dictionary", "final_sentence": "ordered multivalue dictionary"}
{"comment_sentence_id": 5711, "class": "Unfold", "comment_sentence": "stride int or tuple, optional the stride of the sliding blocks in the input", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "stride int or tuple optional the stride of the sliding blocks in the input", "final_sentence": "stride int or tuple optional the stride of the sliding blocks in the input"}
{"comment_sentence_id": 4119, "class": "TreeBuilder", "comment_sentence": "commentclass the class to use for comments", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "commentclass the class to use for comments", "final_sentence": "commentclass the class to use for comments"}
{"comment_sentence_id": 2630, "class": "Environment", "comment_sentence": "optimized", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "optimized", "final_sentence": "optimized"}
{"comment_sentence_id": 1044, "class": "CapturingDisplayPublisher", "comment_sentence": "a displaypublisher that store", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a displaypublisher that store", "final_sentence": "a displaypublisher that store"}
{"comment_sentence_id": 1080, "class": "InteractiveShellApp", "comment_sentence": "of the subclass", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "of the subclass", "final_sentence": "of the subclass"}
{"comment_sentence_id": 3671, "class": "PoolManager", "comment_sentence": "headers to include with all requests, unless other headers are given", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "headers to include with all requests unless other headers are given", "final_sentence": "headers to include with all requests unless other headers are given"}
{"comment_sentence_id": 3297, "class": "NotMyLock", "comment_sentence": "except unlockerror", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "except unlockerror", "final_sentence": "except unlockerror"}
{"comment_sentence_id": 3161, "class": "MemcachedBytecodeCache", "comment_sentence": "this class implements a bytecode cache that uses a memcache cache for", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this class implements a bytecode cache that uses a memcache cache for", "final_sentence": "this class implements a bytecode cache that uses a memcache cache for"}
{"comment_sentence_id": 5429, "class": "NetModifier", "comment_sentence": "example usage", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "example usage", "final_sentence": "example usage"}
{"comment_sentence_id": 925, "class": "Audio", "comment_sentence": "string containing the filename", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "string containing the filename", "final_sentence": "string containing the filename"}
{"comment_sentence_id": 5444, "class": "OneHotCategorical", "comment_sentence": "attr probs and attr logits .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "attr probs and attr logits", "final_sentence": "attr probs and attr logits"}
{"comment_sentence_id": 1667, "class": "CategoricalDtype", "comment_sentence": "t pd^categoricaldtype categories b , a , ordered true", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "t pd categoricaldtype categories b a ordered true", "final_sentence": "t pd categoricaldtype categories b a ordered true"}
{"comment_sentence_id": 4154, "class": "_OpNamespace", "comment_sentence": "on the torch^ops object, which will create a new opnamespace", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "on the torch ops object which will create a new opnamespace", "final_sentence": "on the torch ops object which will create a new opnamespace"}
{"comment_sentence_id": 2423, "class": "Bucket", "comment_sentence": "it s created", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it s created", "final_sentence": "it s created"}
{"comment_sentence_id": 3601, "class": "Path", "comment_sentence": "the path type is similar to the class file type but it performs", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the path type is similar to the class file type but it performs", "final_sentence": "the path type is similar to the class file type but it performs"}
{"comment_sentence_id": 921, "class": "Audio", "comment_sentence": "shape nchan, nsamples .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "shape nchan nsamples", "final_sentence": "shape nchan nsamples"}
{"comment_sentence_id": 5376, "class": "MultiLabelMarginLoss", "comment_sentence": "tensor 08500", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor 08500", "final_sentence": "tensor 08500"}
{"comment_sentence_id": 18, "class": "Atomic", "comment_sentence": "when it s used as a decorator, call wraps the execution of the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "when it s used as a decorator call wraps the execution of the", "final_sentence": "when it s used as a decorator call wraps the execution of the"}
{"comment_sentence_id": 3617, "class": "Path", "comment_sentence": "param readable if true, a readable check is performed.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param readable if true a readable check is performed", "final_sentence": "param readable if true a readable check is performed"}
{"comment_sentence_id": 548, "class": "MigrationLoader", "comment_sentence": "some migrations will be marked as replacing another set of migrations.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "some migrations will be marked as replacing another set of migrations", "final_sentence": "some migrations will be marked as replacing another set of migrations"}
{"comment_sentence_id": 5123, "class": "EmbeddingBag", "comment_sentence": "tensor 08861, 54350, 00523 ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor 08861 54350 00523", "final_sentence": "tensor 08861 54350 00523"}
{"comment_sentence_id": 3082, "class": "Markup", "comment_sentence": "markup 42", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 1312, "class": "ConfigDict", "comment_sentence": ", vodka", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "vodka", "final_sentence": "vodka"}
{"comment_sentence_id": 798, "class": "StaticFilesHandler", "comment_sentence": "defined by the static url setting, and serves those files.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "defined by the static url setting and serves those files", "final_sentence": "defined by the static url setting and serves those files"}
{"comment_sentence_id": 63, "class": "AutoFieldMeta", "comment_sentence": "it is intended that autofieldmixin become public api when it is possible to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it is intended that autofieldmixin become public api when it is possible to", "final_sentence": "it is intended that autofieldmixin become public api when it is possible to"}
{"comment_sentence_id": 2059, "class": "PlotAccessor", "comment_sentence": "will be transposed to meet matplotlib s default layout.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "will be transposed to meet matplotlib s default layout", "final_sentence": "will be transposed to meet matplotlib s default layout"}
{"comment_sentence_id": 3340, "class": "omdict", "comment_sentence": "iterallitems , iterallkeys , iterallvalues , iterlists ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "iterallitems iterallkeys iterallvalues iterlists", "final_sentence": "iterallitems iterallkeys iterallvalues iterlists"}
{"comment_sentence_id": 2589, "class": "Environment", "comment_sentence": "the string marking the beginning of a comment.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "the string marking the beginning of a comment", "final_sentence": "the string marking the beginning of a comment"}
{"comment_sentence_id": 3318, "class": "omdict", "comment_sentence": "object can be replaced with an omdict object and all interaction will", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "object can be replaced with an omdict object and all interaction will", "final_sentence": "object can be replaced with an omdict object and all interaction will"}
{"comment_sentence_id": 2237, "class": "SQLTable", "comment_sentence": "also holds various flags needed to avoid having to", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "also holds various flags needed to avoid having to", "final_sentence": "also holds various flags needed to avoid having to"}
{"comment_sentence_id": 3615, "class": "Path", "comment_sentence": "param dir okay controls if a directory is a possible value.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "param dir okay controls if a directory is a possible value", "final_sentence": "param dir okay controls if a directory is a possible value"}
{"comment_sentence_id": 1339, "class": "ConfigDict", "comment_sentence": ", type int , 0", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "type int 0", "final_sentence": "type int 0"}
{"comment_sentence_id": 3177, "class": "MemcachedBytecodeCache", "comment_sentence": "class minimalclientinterface", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "class minimalclientinterface", "final_sentence": "class minimalclientinterface"}
{"comment_sentence_id": 2370, "class": "_FileInFile", "comment_sentence": "provides a part of its data as an individual file", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "provides a part of its data as an individual file", "final_sentence": "provides a part of its data as an individual file"}
{"comment_sentence_id": 917, "class": "Audio", "comment_sentence": "data numpy array, list, unicode, str or bytes", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "data numpy array list unicode str or bytes", "final_sentence": "data numpy array list unicode str or bytes"}
{"comment_sentence_id": 2383, "class": "And", "comment_sentence": "expressions may be separated by whitespace.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "expressions may be separated by whitespace", "final_sentence": "expressions may be separated by whitespace"}
{"comment_sentence_id": 3079, "class": "Markup", "comment_sentence": "markup hello, em world em !", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "markup hello em world em", "final_sentence": "markup hello em world em"}
{"comment_sentence_id": 2587, "class": "Environment", "comment_sentence": "defaults to", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "defaults to", "final_sentence": "defaults to"}
{"comment_sentence_id": 2420, "class": "BrokenStdoutLoggingError", "comment_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging", "final_sentence": "raised if brokenpipeerror occurs for the stdout stream while logging"}
{"comment_sentence_id": 2636, "class": "Environment", "comment_sentence": "finalize", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "finalize", "final_sentence": "finalize"}
{"comment_sentence_id": 2063, "class": "PlotAccessor", "comment_sentence": "see ref plotting with error bars visualization^errorbars for", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "see ref plotting with error bars visualization errorbars for", "final_sentence": "see ref plotting with error bars visualization errorbars for"}
{"comment_sentence_id": 1310, "class": "ConfigDict", "comment_sentence": "123", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 4212, "class": "Adadelta", "comment_sentence": "implements adadelta algorithm.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements adadelta algorithm", "final_sentence": "implements adadelta algorithm"}
{"comment_sentence_id": 1890, "class": "IntegerArray", "comment_sentence": "copy bool, default false", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 3165, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface required.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the minimal interface required", "final_sentence": "the minimal interface required"}
{"comment_sentence_id": 3308, "class": "omdict", "comment_sentence": "retains the order of insertions and deletions.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "retains the order of insertions and deletions", "final_sentence": "retains the order of insertions and deletions"}
{"comment_sentence_id": 598, "class": "MultiValueDict", "comment_sentence": "a subclass of dictionary customized to handle multiple values for the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a subclass of dictionary customized to handle multiple values for the", "final_sentence": "a subclass of dictionary customized to handle multiple values for the"}
{"comment_sentence_id": 1, "class": "AccessMixin", "comment_sentence": "abstract cbv mixin that gives access mixins the same customizable", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "abstract cbv mixin that gives access mixins the same customizable", "final_sentence": "abstract cbv mixin that gives access mixins the same customizable"}
{"comment_sentence_id": 119, "class": "BaseCommand", "comment_sentence": "parsing work in handle and then delegate from it to more", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "parsing work in handle and then delegate from it to more", "final_sentence": "parsing work in handle and then delegate from it to more"}
{"comment_sentence_id": 1590, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array with the data.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a 1 d boolean dtype array with the data", "final_sentence": "a 1 d boolean dtype array with the data"}
{"comment_sentence_id": 1427, "class": "ConfigureMailboxes", "comment_sentence": "if an account is specified, the mailbox will be assigned to that account", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "if an account is specified the mailbox will be assigned to that account", "final_sentence": "if an account is specified the mailbox will be assigned to that account"}
{"comment_sentence_id": 1113, "class": "Magics", "comment_sentence": "individual methods as magic functions, and", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "individual methods as magic functions and", "final_sentence": "individual methods as magic functions and"}
{"comment_sentence_id": 1329, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1290, "class": "ConfigDict", "comment_sentence": ", int , 0 ,", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "int 0", "final_sentence": "int 0"}
{"comment_sentence_id": 3271, "class": "NotAny", "comment_sentence": "# integers that are followed by .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "integers that are followed by", "final_sentence": "integers that are followed by"}
{"comment_sentence_id": 3328, "class": "omdict", "comment_sentence": "key parameter has been added to these methods", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "key parameter has been added to these methods", "final_sentence": "key parameter has been added to these methods"}
{"comment_sentence_id": 5323, "class": "MultiLabelMarginLoss", "comment_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor", "final_sentence": "hinge loss margin based loss between input math x a 2d mini batch tensor"}
{"comment_sentence_id": 5221, "class": "FisherSnedecor", "comment_sentence": "m fishersnedecor torch^tensor 10 , torch^tensor 20", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "m fishersnedecor torch tensor 10 torch tensor 20", "final_sentence": "m fishersnedecor torch tensor 10 torch tensor 20"}
{"comment_sentence_id": 4476, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname sum l , & text if reduction text sum .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "operatorname sum l text if reduction text sum", "final_sentence": "operatorname sum l text if reduction text sum"}
{"comment_sentence_id": 3163, "class": "MemcachedBytecodeCache", "comment_sentence": "it does not enforce a specific memcache library", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it does not enforce a specific memcache library", "final_sentence": "it does not enforce a specific memcache library"}
{"comment_sentence_id": 1588, "class": "BooleanArray", "comment_sentence": "parameters", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 3619, "class": "Path", "comment_sentence": "before the value is passed onwards.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "before the value is passed onwards", "final_sentence": "before the value is passed onwards"}
{"comment_sentence_id": 1661, "class": "CategoricalDtype", "comment_sentence": "notes", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 5370, "class": "MultiLabelMarginLoss", "comment_sentence": "loss nn^multilabelmarginloss", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "loss nn multilabelmarginloss", "final_sentence": "loss nn multilabelmarginloss"}
{"comment_sentence_id": 2084, "class": "PlotAccessor", "comment_sentence": "if the backend is not the default matplotlib one, the return value", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if the backend is not the default matplotlib one the return value", "final_sentence": "if the backend is not the default matplotlib one the return value"}
{"comment_sentence_id": 113, "class": "BaseCommand", "comment_sentence": "if handle or execute raised any exception eg", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "if handle or execute raised any exception eg", "final_sentence": "if handle or execute raised any exception eg"}
{"comment_sentence_id": 556, "class": "MigrationLoader", "comment_sentence": "we re already not just operating", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "we re already not just operating", "final_sentence": "we re already not just operating"}
{"comment_sentence_id": 4358, "class": "BatchNorm1d", "comment_sentence": "evaluation.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "evaluation", "final_sentence": "evaluation"}
{"comment_sentence_id": 609, "class": "MultiValueDict", "comment_sentence": "nonexistent", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "nonexistent", "final_sentence": "nonexistent"}
{"comment_sentence_id": 3334, "class": "omdict", "comment_sentence": "the same key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "the same key", "final_sentence": "the same key"}
{"comment_sentence_id": 2627, "class": "Environment", "comment_sentence": "as strings or extension classes.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "as strings or extension classes", "final_sentence": "as strings or extension classes"}
{"comment_sentence_id": 1576, "class": "BooleanArray", "comment_sentence": "a boolean array with the mask true indicating missing .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a boolean array with the mask true indicating missing", "final_sentence": "a boolean array with the mask true indicating missing"}
{"comment_sentence_id": 1578, "class": "BooleanArray", "comment_sentence": "logic for logical operations.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "logic for logical operations", "final_sentence": "logic for logical operations"}
{"comment_sentence_id": 2231, "class": "SQLiteTable", "comment_sentence": "instead of a table variable just use the create table statement.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "instead of a table variable just use the create table statement", "final_sentence": "instead of a table variable just use the create table statement"}
{"comment_sentence_id": 1273, "class": "ConfigDict", "comment_sentence": "each variable definition expects three values", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "each variable definition expects three values", "final_sentence": "each variable definition expects three values"}
{"comment_sentence_id": 4132, "class": "UnlockError", "comment_sentence": "base class for errors arising from attempts to release the lock.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "base class for errors arising from attempts to release the lock", "final_sentence": "base class for errors arising from attempts to release the lock"}
{"comment_sentence_id": 5295, "class": "Module", "comment_sentence": "def init self", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "def init self", "final_sentence": "def init self"}
{"comment_sentence_id": 4724, "class": "Conv3d", "comment_sentence": "attr groups .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr groups", "final_sentence": "attr groups"}
{"comment_sentence_id": 3330, "class": "omdict", "comment_sentence": "new methods have also been added to omdict.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "new methods have also been added to omdict", "final_sentence": "new methods have also been added to omdict"}
{"comment_sentence_id": 2362, "class": "_BZ2Proxy", "comment_sentence": "a file object argument.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a file object argument", "final_sentence": "a file object argument"}
{"comment_sentence_id": 2574, "class": "Environment", "comment_sentence": "will lead to surprising effects and undefined behavior.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "will lead to surprising effects and undefined behavior", "final_sentence": "will lead to surprising effects and undefined behavior"}
{"comment_sentence_id": 5262, "class": "LBFGS", "comment_sentence": "step default max iter 125 .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "step default max iter 125", "final_sentence": "step default max iter 125"}
{"comment_sentence_id": 3316, "class": "omdict", "comment_sentence": "key.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "key", "final_sentence": "key"}
{"comment_sentence_id": 544, "class": "MigrationLoader", "comment_sentence": "read the python files, looking for a class called migration, which should", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "read the python files looking for a class called migration which should", "final_sentence": "read the python files looking for a class called migration which should"}
{"comment_sentence_id": 3668, "class": "PoolManager", "comment_sentence": "number of connection pools to cache before discarding the least", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "number of connection pools to cache before discarding the least", "final_sentence": "number of connection pools to cache before discarding the least"}
{"comment_sentence_id": 2618, "class": "Environment", "comment_sentence": "applications.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "applications", "final_sentence": "applications"}
{"comment_sentence_id": 582, "class": "MigrationWriter", "comment_sentence": "take a migration instance and is able to produce the contents", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "take a migration instance and is able to produce the contents", "final_sentence": "take a migration instance and is able to produce the contents"}
{"comment_sentence_id": 2443, "class": "CaseInsensitiveDict", "comment_sentence": "also", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "also", "final_sentence": "also"}
{"comment_sentence_id": 3183, "class": "MemcachedBytecodeCache", "comment_sentence": "a default timeout or no timeout should be assumed, if it s", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a default timeout or no timeout should be assumed if it s", "final_sentence": "a default timeout or no timeout should be assumed if it s"}
{"comment_sentence_id": 3088, "class": "Markup", "comment_sentence": "output of that method, marking it safe.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "output of that method marking it safe", "final_sentence": "output of that method marking it safe"}
{"comment_sentence_id": 5653, "class": "TransformerEncoderLayer", "comment_sentence": "d model the number of expected features in the input required .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "d model the number of expected features in the input required", "final_sentence": "d model the number of expected features in the input required"}
{"comment_sentence_id": 5715, "class": "Unfold", "comment_sentence": "both sides of input.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "both sides of input", "final_sentence": "both sides of input"}
{"comment_sentence_id": 5364, "class": "MultiLabelMarginLoss", "comment_sentence": "input math c or math n, c where n is the batch size and c", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "input math c or math n c where n is the batch size and c", "final_sentence": "input math c or math n c where n is the batch size and c"}
{"comment_sentence_id": 2441, "class": "CaseInsensitiveDict", "comment_sentence": "implements all methods and operations of", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "implements all methods and operations of", "final_sentence": "implements all methods and operations of"}
{"comment_sentence_id": 4246, "class": "Adam", "comment_sentence": "numerical stability default 1e 8", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "numerical stability default 1e 8", "final_sentence": "numerical stability default 1e 8"}
{"comment_sentence_id": 2055, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 5335, "class": "MultiLabelMarginLoss", "comment_sentence": "this allows for different samples to have variable amounts of target classes.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "this allows for different samples to have variable amounts of target classes", "final_sentence": "this allows for different samples to have variable amounts of target classes"}
{"comment_sentence_id": 605, "class": "MultiValueDict", "comment_sentence": "d^getlist doesnotexist", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "d getlist doesnotexist", "final_sentence": "d getlist doesnotexist"}
{"comment_sentence_id": 132, "class": "BaseCommand", "comment_sentence": "a boolean if true , the command prints a warning if the set of", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "a boolean if true the command prints a warning if the set of", "final_sentence": "a boolean if true the command prints a warning if the set of"}
{"comment_sentence_id": 4360, "class": "BatchNorm1d", "comment_sentence": "of 01.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "of 01", "final_sentence": "of 01"}
{"comment_sentence_id": 3224, "class": "MetadataMissingError", "comment_sentence": "a required metadata is missing", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "a required metadata is missing", "final_sentence": "a required metadata is missing"}
{"comment_sentence_id": 929, "class": "Audio", "comment_sentence": "if a filename or url is used, the format support will be browser", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if a filename or url is used the format support will be browser", "final_sentence": "if a filename or url is used the format support will be browser"}
{"comment_sentence_id": 2609, "class": "Environment", "comment_sentence": "if this is set to true leading spaces and tabs are stripped", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "if this is set to true leading spaces and tabs are stripped", "final_sentence": "if this is set to true leading spaces and tabs are stripped"}
{"comment_sentence_id": 2082, "class": "PlotAccessor", "comment_sentence": "returns", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 1888, "class": "IntegerArray", "comment_sentence": "mask numpy^ndarray", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "mask numpy ndarray", "final_sentence": "mask numpy ndarray"}
{"comment_sentence_id": 4245, "class": "Adam", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 1605, "class": "BooleanArray", "comment_sentence": "booleanarray", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 4163, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "torch ops my namespace my op", "final_sentence": "torch ops my namespace my op"}
{"comment_sentence_id": 2632, "class": "Environment", "comment_sentence": "default is true .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "default is true", "final_sentence": "default is true"}
{"comment_sentence_id": 5224, "class": "FisherSnedecor", "comment_sentence": "args", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 8, "class": "AppConfigStub", "comment_sentence": "only provides a label and a dict of models.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "only provides a label and a dict of models", "final_sentence": "only provides a label and a dict of models"}
{"comment_sentence_id": 1084, "class": "InteractiveShellApp", "comment_sentence": "meth init extensions", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "meth init extensions", "final_sentence": "meth init extensions"}
{"comment_sentence_id": 3255, "class": "NotAny", "comment_sentence": "notany does not advance the parsing position within the", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "notany does not advance the parsing position within the", "final_sentence": "notany does not advance the parsing position within the"}
{"comment_sentence_id": 1601, "class": "BooleanArray", "comment_sentence": "booleanarray", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 5291, "class": "Module", "comment_sentence": "you can assign the submodules as regular attributes", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "you can assign the submodules as regular attributes", "final_sentence": "you can assign the submodules as regular attributes"}
{"comment_sentence_id": 1319, "class": "ConfigDict", "comment_sentence": "0", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 2614, "class": "Environment", "comment_sentence": "must be one of r ,", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "must be one of r", "final_sentence": "must be one of r"}
{"comment_sentence_id": 111, "class": "BaseCommand", "comment_sentence": "sql statements, will be wrapped in begin and commit .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "sql statements will be wrapped in begin and commit", "final_sentence": "sql statements will be wrapped in begin and commit"}
{"comment_sentence_id": 64, "class": "AutoFieldMeta", "comment_sentence": "create a non integer automatically generated field using column defaults", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "create a non integer automatically generated field using column defaults", "final_sentence": "create a non integer automatically generated field using column defaults"}
{"comment_sentence_id": 5213, "class": "ExternalInitializer", "comment_sentence": "executed.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "executed", "final_sentence": "executed"}
{"comment_sentence_id": 4274, "class": "Adamax", "comment_sentence": "it has been proposed in adam a method for stochastic optimization .", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it has been proposed in adam a method for stochastic optimization", "final_sentence": "it has been proposed in adam a method for stochastic optimization"}
{"comment_sentence_id": 4364, "class": "BatchNorm1d", "comment_sentence": "note", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 4219, "class": "Adadelta", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 2051, "class": "PlotAccessor", "comment_sentence": "plots .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "plots", "final_sentence": "plots"}
{"comment_sentence_id": 1570, "class": "BaseInterfaceTests", "comment_sentence": "interface", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "interface", "final_sentence": "interface"}
{"comment_sentence_id": 2075, "class": "PlotAccessor", "comment_sentence": "for instance, matplotlib .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "for instance matplotlib", "final_sentence": "for instance matplotlib"}
{"comment_sentence_id": 1102, "class": "Magics", "comment_sentence": "shell functions which can be reached as %function name.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "shell functions which can be reached as function name", "final_sentence": "shell functions which can be reached as function name"}
{"comment_sentence_id": 4136, "class": "UnlockError", "comment_sentence": "pass", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 923, "class": "Audio", "comment_sentence": "http msdn^microsoft.com en us library windows hardware dn653308 v vs.85 ^aspx", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "http msdn microsoft com en us library windows hardware dn653308 v vs 85 aspx", "final_sentence": "http msdn microsoft com en us library windows hardware dn653308 v vs 85 aspx"}
{"comment_sentence_id": 4217, "class": "Adadelta", "comment_sentence": "rho float, optional coefficient used for computing a running average", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "rho float optional coefficient used for computing a running average", "final_sentence": "rho float optional coefficient used for computing a running average"}
{"comment_sentence_id": 1648, "class": "CategoricalDtype", "comment_sentence": "must be unique, and must not contain any nulls.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "must be unique and must not contain any nulls", "final_sentence": "must be unique and must not contain any nulls"}
{"comment_sentence_id": 1849, "class": "ExcelFile", "comment_sentence": "parameters", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 5448, "class": "OneHotCategorical", "comment_sentence": "tensor 0., 0., 0., 1.", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "tensor 0 0 0 1", "final_sentence": "tensor 0 0 0 1"}
{"comment_sentence_id": 5492, "class": "QuantWrapper", "comment_sentence": "it observes the input tensor, after convert , quantstub", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "it observes the input tensor after convert quantstub", "final_sentence": "it observes the input tensor after convert quantstub"}
{"comment_sentence_id": 4645, "class": "BuildType", "comment_sentence": "cmake build type env str the value of os^environ cmake build type .", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "cmake build type env str the value of os environ cmake build type", "final_sentence": "cmake build type env str the value of os environ cmake build type"}
{"comment_sentence_id": 5703, "class": "Unfold", "comment_sentence": "attr stride controls the stride for the sliding blocks.", "partition": 1, "instance_type": 1, "category": "Parameters", "pre_sentence": "attr stride controls the stride for the sliding blocks", "final_sentence": "attr stride controls the stride for the sliding blocks"}
{"comment_sentence_id": 3240, "class": "Module_six_moves_urllib_parse", "comment_sentence": "lazy loading of moved objects in six^moves.urllib parse", "partition": 1, "instance_type": 0, "category": "Parameters", "pre_sentence": "lazy loading of moved objects in six moves urllib parse", "final_sentence": "lazy loading of moved objects in six moves urllib parse"}

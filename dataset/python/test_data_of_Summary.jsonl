{"comment_sentence_id": 1081, "class": "InteractiveShellApp", "comment_sentence": "meth init path", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "meth init path", "final_sentence": "meth init path"}
{"comment_sentence_id": 5373, "class": "MultiLabelMarginLoss", "comment_sentence": "y torch^longtensor 3, 0, 1, 1", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "y torch longtensor 3 0 1 1", "final_sentence": "y torch longtensor 3 0 1 1"}
{"comment_sentence_id": 2873, "class": "Filter", "comment_sentence": "alphabetizes attributes for elements", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "alphabetizes attributes for elements", "final_sentence": "alphabetizes attributes for elements"}
{"comment_sentence_id": 2370, "class": "_FileInFile", "comment_sentence": "provides a part of its data as an individual file", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "provides a part of its data as an individual file", "final_sentence": "provides a part of its data as an individual file"}
{"comment_sentence_id": 4888, "class": "CyclicLR", "comment_sentence": "the distance between the two boundaries can be scaled on a per iteration", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the distance between the two boundaries can be scaled on a per iteration", "final_sentence": "the distance between the two boundaries can be scaled on a per iteration"}
{"comment_sentence_id": 4120, "class": "TreeBuilder", "comment_sentence": "doctypeclass the class to use for doctypes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "doctypeclass the class to use for doctypes", "final_sentence": "doctypeclass the class to use for doctypes"}
{"comment_sentence_id": 4370, "class": "BatchNorm1d", "comment_sentence": "where math hat x is the estimated statistic and math x t is the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "where math hat x is the estimated statistic and math x t is the", "final_sentence": "where math hat x is the estimated statistic and math x t is the"}
{"comment_sentence_id": 548, "class": "MigrationLoader", "comment_sentence": "some migrations will be marked as replacing another set of migrations.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "some migrations will be marked as replacing another set of migrations", "final_sentence": "some migrations will be marked as replacing another set of migrations"}
{"comment_sentence_id": 1594, "class": "BooleanArray", "comment_sentence": "copy bool, default false", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 3099, "class": "Markup", "comment_sentence": "markup em foo &amp bar em", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "markup em foo amp bar em", "final_sentence": "markup em foo amp bar em"}
{"comment_sentence_id": 4315, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 122, "class": "BaseCommand", "comment_sentence": "help", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "help", "final_sentence": "help"}
{"comment_sentence_id": 3178, "class": "MemcachedBytecodeCache", "comment_sentence": "method set key, value , timeout", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "method set key value timeout", "final_sentence": "method set key value timeout"}
{"comment_sentence_id": 1085, "class": "InteractiveShellApp", "comment_sentence": "meth init code", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "meth init code", "final_sentence": "meth init code"}
{"comment_sentence_id": 4477, "class": "BCEWithLogitsLoss", "comment_sentence": "end cases", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "end cases", "final_sentence": "end cases"}
{"comment_sentence_id": 1664, "class": "CategoricalDtype", "comment_sentence": "see ref categorical^categoricaldtype", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "see ref categorical categoricaldtype", "final_sentence": "see ref categorical categoricaldtype"}
{"comment_sentence_id": 5005, "class": "DeQuantStub", "comment_sentence": "dequantize stub module, before calibration, this is same as identity,", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "dequantize stub module before calibration this is same as identity", "final_sentence": "dequantize stub module before calibration this is same as identity"}
{"comment_sentence_id": 1307, "class": "ConfigDict", "comment_sentence": "pot carrots", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot carrots", "final_sentence": "pot carrots"}
{"comment_sentence_id": 4280, "class": "Adamax", "comment_sentence": "running averages of gradient and its square", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "running averages of gradient and its square", "final_sentence": "running averages of gradient and its square"}
{"comment_sentence_id": 3164, "class": "MemcachedBytecodeCache", "comment_sentence": "tummy s memcache or cmemcache but will accept any class that provides", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "tummy s memcache or cmemcache but will accept any class that provides", "final_sentence": "tummy s memcache or cmemcache but will accept any class that provides"}
{"comment_sentence_id": 2392, "class": "And", "comment_sentence": "expr integer id name expr name integer age", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "expr integer id name expr name integer age", "final_sentence": "expr integer id name expr name integer age"}
{"comment_sentence_id": 3259, "class": "NotAny", "comment_sentence": "not skip over leading whitespace.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "not skip over leading whitespace", "final_sentence": "not skip over leading whitespace"}
{"comment_sentence_id": 603, "class": "MultiValueDict", "comment_sentence": "d^getlist name", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "d getlist name", "final_sentence": "d getlist name"}
{"comment_sentence_id": 3229, "class": "MethodDispatcher", "comment_sentence": "list like object returns the matching value", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "list like object returns the matching value", "final_sentence": "list like object returns the matching value"}
{"comment_sentence_id": 586, "class": "ModelBase", "comment_sentence": "metaclass for all models.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "metaclass for all models", "final_sentence": "metaclass for all models"}
{"comment_sentence_id": 1590, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array with the data.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a 1 d boolean dtype array with the data", "final_sentence": "a 1 d boolean dtype array with the data"}
{"comment_sentence_id": 108, "class": "BaseCommand", "comment_sentence": "calling the handle method with the parsed arguments any", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "calling the handle method with the parsed arguments any", "final_sentence": "calling the handle method with the parsed arguments any"}
{"comment_sentence_id": 4134, "class": "UnlockError", "comment_sentence": "raise unlockerror", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "raise unlockerror", "final_sentence": "raise unlockerror"}
{"comment_sentence_id": 4364, "class": "BatchNorm1d", "comment_sentence": "note", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 3087, "class": "Markup", "comment_sentence": "passing an object that implements html will wrap the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "passing an object that implements html will wrap the", "final_sentence": "passing an object that implements html will wrap the"}
{"comment_sentence_id": 3500, "class": "ParseFatalException", "comment_sentence": "is found stops all parsing immediately", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "is found stops all parsing immediately", "final_sentence": "is found stops all parsing immediately"}
{"comment_sentence_id": 1330, "class": "ConfigDict", "comment_sentence": "invalidkeyerror invalid key for config liquids evil", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "invalidkeyerror invalid key for config liquids evil", "final_sentence": "invalidkeyerror invalid key for config liquids evil"}
{"comment_sentence_id": 3186, "class": "MemcachedBytecodeCache", "comment_sentence": "method get key", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "method get key", "final_sentence": "method get key"}
{"comment_sentence_id": 84, "class": "BadSignature", "comment_sentence": "signature does not match.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "signature does not match", "final_sentence": "signature does not match"}
{"comment_sentence_id": 4401, "class": "BatchNorm1d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 3390, "class": "Option", "comment_sentence": "normally, defaults are not shown.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "normally defaults are not shown", "final_sentence": "normally defaults are not shown"}
{"comment_sentence_id": 5237, "class": "LastNWindowCollector", "comment_sentence": "use packrecords to pack it before using this layer.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "use packrecords to pack it before using this layer", "final_sentence": "use packrecords to pack it before using this layer"}
{"comment_sentence_id": 5289, "class": "Module", "comment_sentence": "modules can also contain other modules, allowing to nest them in", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "modules can also contain other modules allowing to nest them in", "final_sentence": "modules can also contain other modules allowing to nest them in"}
{"comment_sentence_id": 1561, "class": "Base", "comment_sentence": "input data", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "input data", "final_sentence": "input data"}
{"comment_sentence_id": 5681, "class": "Unfold", "comment_sentence": "extracts sliding local blocks from a batched input tensor.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "extracts sliding local blocks from a batched input tensor", "final_sentence": "extracts sliding local blocks from a batched input tensor"}
{"comment_sentence_id": 3101, "class": "Markup", "comment_sentence": "markup em hello em &lt foo&gt", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "markup em hello em lt foo gt", "final_sentence": "markup em hello em lt foo gt"}
{"comment_sentence_id": 1299, "class": "ConfigDict", "comment_sentence": "colors colors , red , blue ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "colors colors red blue", "final_sentence": "colors colors red blue"}
{"comment_sentence_id": 5493, "class": "QuantWrapper", "comment_sentence": "will be swapped to nnq^quantize which does actual quantization.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "will be swapped to nnq quantize which does actual quantization", "final_sentence": "will be swapped to nnq quantize which does actual quantization"}
{"comment_sentence_id": 4638, "class": "BuildType", "comment_sentence": "checks build type.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "checks build type", "final_sentence": "checks build type"}
{"comment_sentence_id": 1724, "class": "CategoricalIndex", "comment_sentence": "categorical will be unordered.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "categorical will be unordered", "final_sentence": "categorical will be unordered"}
{"comment_sentence_id": 1106, "class": "Magics", "comment_sentence": "this can make some functions easier to type, eg%cd .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this can make some functions easier to type eg cd", "final_sentence": "this can make some functions easier to type eg cd"}
{"comment_sentence_id": 4145, "class": "_OpNamespace", "comment_sentence": "say a user has created a custom operator called my namespace my op .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "say a user has created a custom operator called my namespace my op", "final_sentence": "say a user has created a custom operator called my namespace my op"}
{"comment_sentence_id": 3332, "class": "omdict", "comment_sentence": "name interact with lists of values, and methods with all in their name", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "name interact with lists of values and methods with all in their name", "final_sentence": "name interact with lists of values and methods with all in their name"}
{"comment_sentence_id": 1297, "class": "ConfigDict", "comment_sentence": "tags tags , c c , int, 0 ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "tags tags c c int 0", "final_sentence": "tags tags c c int 0"}
{"comment_sentence_id": 2371, "class": "_FileInFile", "comment_sentence": "object.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 1606, "class": "BooleanArray", "comment_sentence": "true, false, na", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "true false na", "final_sentence": "true false na"}
{"comment_sentence_id": 2076, "class": "PlotAccessor", "comment_sentence": "alternatively, to", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "alternatively to", "final_sentence": "alternatively to"}
{"comment_sentence_id": 4249, "class": "Adam", "comment_sentence": "algorithm from the paper on the convergence of adam and beyond", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "algorithm from the paper on the convergence of adam and beyond", "final_sentence": "algorithm from the paper on the convergence of adam and beyond"}
{"comment_sentence_id": 2051, "class": "PlotAccessor", "comment_sentence": "plots .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "plots", "final_sentence": "plots"}
{"comment_sentence_id": 3082, "class": "Markup", "comment_sentence": "markup 42", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "markup 42", "final_sentence": "markup 42"}
{"comment_sentence_id": 544, "class": "MigrationLoader", "comment_sentence": "read the python files, looking for a class called migration, which should", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "read the python files looking for a class called migration which should", "final_sentence": "read the python files looking for a class called migration which should"}
{"comment_sentence_id": 3176, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface for the client passed to the constructor is this", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the minimal interface for the client passed to the constructor is this", "final_sentence": "the minimal interface for the client passed to the constructor is this"}
{"comment_sentence_id": 3337, "class": "omdict", "comment_sentence": "getlist , add , addlist , set , setlist , setdefaultlist ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "getlist add addlist set setlist setdefaultlist", "final_sentence": "getlist add addlist set setlist setdefaultlist"}
{"comment_sentence_id": 3326, "class": "omdict", "comment_sentence": "added parameters are optional, existing use remains unaffected.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "added parameters are optional existing use remains unaffected", "final_sentence": "added parameters are optional existing use remains unaffected"}
{"comment_sentence_id": 3423, "class": "Option", "comment_sentence": "parameter will be pulled from an environment", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameter will be pulled from an environment", "final_sentence": "parameter will be pulled from an environment"}
{"comment_sentence_id": 1108, "class": "Magics", "comment_sentence": "vs. %cd .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "vs cd", "final_sentence": "vs cd"}
{"comment_sentence_id": 1712, "class": "CategoricalIndex", "comment_sentence": "the values of the categorical.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the values of the categorical", "final_sentence": "the values of the categorical"}
{"comment_sentence_id": 1320, "class": "ConfigDict", "comment_sentence": "pot tags 0 c", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot tags 0 c", "final_sentence": "pot tags 0 c"}
{"comment_sentence_id": 5121, "class": "EmbeddingBag", "comment_sentence": "offsets torch^longtensor 0,4", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "offsets torch longtensor 0 4", "final_sentence": "offsets torch longtensor 0 4"}
{"comment_sentence_id": 912, "class": "Audio", "comment_sentence": "create an audio object.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "create an audio object", "final_sentence": "create an audio object"}
{"comment_sentence_id": 1498, "class": "Vcard", "comment_sentence": "display a single vcard", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "display a single vcard", "final_sentence": "display a single vcard"}
{"comment_sentence_id": 1502, "class": "VCardStore", "comment_sentence": "this is a disk backed in memory collection of vcards.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "this is a disk backed in memory collection of vcards", "final_sentence": "this is a disk backed in memory collection of vcards"}
{"comment_sentence_id": 3335, "class": "omdict", "comment_sentence": "the new omdict methods are", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the new omdict methods are", "final_sentence": "the new omdict methods are"}
{"comment_sentence_id": 4147, "class": "_OpNamespace", "comment_sentence": "call this op, the user will write torch^ops.my namespace^my op .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "call this op the user will write torch ops my namespace my op", "final_sentence": "call this op the user will write torch ops my namespace my op"}
{"comment_sentence_id": 4390, "class": "BatchNorm1d", "comment_sentence": "statistics in both training and eval modes.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "statistics in both training and eval modes", "final_sentence": "statistics in both training and eval modes"}
{"comment_sentence_id": 1672, "class": "CategoricalDtype", "comment_sentence": "3 nan", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "3 nan", "final_sentence": "3 nan"}
{"comment_sentence_id": 2382, "class": "And", "comment_sentence": "requires all given class parseexpression s to be found in the given order.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "requires all given class parseexpression s to be found in the given order", "final_sentence": "requires all given class parseexpression s to be found in the given order"}
{"comment_sentence_id": 4164, "class": "_OpNamespace", "comment_sentence": "then calls this new operation", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "then calls this new operation", "final_sentence": "then calls this new operation"}
{"comment_sentence_id": 110, "class": "BaseCommand", "comment_sentence": "output and, if the command is intended to produce a block of", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output and if the command is intended to produce a block of", "final_sentence": "output and if the command is intended to produce a block of"}
{"comment_sentence_id": 5345, "class": "MultiLabelMarginLoss", "comment_sentence": "when reduce is false .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "when reduce is false", "final_sentence": "when reduce is false"}
{"comment_sentence_id": 4374, "class": "BatchNorm1d", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 3091, "class": "Markup", "comment_sentence": "return a href foo foo a", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "return a href foo foo a", "final_sentence": "return a href foo foo a"}
{"comment_sentence_id": 2059, "class": "PlotAccessor", "comment_sentence": "will be transposed to meet matplotlib s default layout.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "will be transposed to meet matplotlib s default layout", "final_sentence": "will be transposed to meet matplotlib s default layout"}
{"comment_sentence_id": 5291, "class": "Module", "comment_sentence": "you can assign the submodules as regular attributes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "you can assign the submodules as regular attributes", "final_sentence": "you can assign the submodules as regular attributes"}
{"comment_sentence_id": 3263, "class": "NotAny", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3341, "class": "omdict", "comment_sentence": "iterlistitems", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "iterlistitems", "final_sentence": "iterlistitems"}
{"comment_sentence_id": 5295, "class": "Module", "comment_sentence": "def init self", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "def init self", "final_sentence": "def init self"}
{"comment_sentence_id": 4283, "class": "Adamax", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 5, "class": "AmbiguityError", "comment_sentence": "more than one migration matches a name prefix.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "more than one migration matches a name prefix", "final_sentence": "more than one migration matches a name prefix"}
{"comment_sentence_id": 1604, "class": "BooleanArray", "comment_sentence": "pd^array true, false, none , dtype boolean", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pd array true false none dtype boolean", "final_sentence": "pd array true false none dtype boolean"}
{"comment_sentence_id": 4384, "class": "BatchNorm1d", "comment_sentence": "affine a boolean value that when set to true , this module has", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "affine a boolean value that when set to true this module has", "final_sentence": "affine a boolean value that when set to true this module has"}
{"comment_sentence_id": 2212, "class": "SelectNSeries", "comment_sentence": "obj series", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "obj series", "final_sentence": "obj series"}
{"comment_sentence_id": 4153, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace will invoke the getattr magic method", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "torch ops my namespace will invoke the getattr magic method", "final_sentence": "torch ops my namespace will invoke the getattr magic method"}
{"comment_sentence_id": 5222, "class": "FisherSnedecor", "comment_sentence": "m^sample # fisher snedecor distributed with df1 1 and df2 2", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2", "final_sentence": "m sample fisher snedecor distributed with df1 1 and df2 2"}
{"comment_sentence_id": 5258, "class": "LBFGS", "comment_sentence": "lr float learning rate default 1", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "lr float learning rate default 1", "final_sentence": "lr float learning rate default 1"}
{"comment_sentence_id": 3476, "class": "PacifyFlushWrapper", "comment_sentence": "so as to have minimal impact on any", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "so as to have minimal impact on any", "final_sentence": "so as to have minimal impact on any"}
{"comment_sentence_id": 1662, "class": "CategoricalDtype", "comment_sentence": "this class is useful for specifying the type of a categorical", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this class is useful for specifying the type of a categorical", "final_sentence": "this class is useful for specifying the type of a categorical"}
{"comment_sentence_id": 2889, "class": "FollowedBy", "comment_sentence": "label data word followedby", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "label data word followedby", "final_sentence": "label data word followedby"}
{"comment_sentence_id": 1283, "class": "ConfigDict", "comment_sentence": "should be used with an empty list or dictionary as a default value.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "should be used with an empty list or dictionary as a default value", "final_sentence": "should be used with an empty list or dictionary as a default value"}
{"comment_sentence_id": 2338, "class": "TermValue", "comment_sentence": "hold a term value the we use to construct a condition filter", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "hold a term value the we use to construct a condition filter", "final_sentence": "hold a term value the we use to construct a condition filter"}
{"comment_sentence_id": 4360, "class": "BatchNorm1d", "comment_sentence": "of 01.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "of 01", "final_sentence": "of 01"}
{"comment_sentence_id": 2088, "class": "PlotAccessor", "comment_sentence": "if kind bar or barh , you can specify relative alignments", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if kind bar or barh you can specify relative alignments", "final_sentence": "if kind bar or barh you can specify relative alignments"}
{"comment_sentence_id": 2410, "class": "Argument", "comment_sentence": "provide fewer features than options but can have infinite nargs", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "provide fewer features than options but can have infinite nargs", "final_sentence": "provide fewer features than options but can have infinite nargs"}
{"comment_sentence_id": 2369, "class": "_FileInFile", "comment_sentence": "a thin wrapper around an existing file object that", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a thin wrapper around an existing file object that", "final_sentence": "a thin wrapper around an existing file object that"}
{"comment_sentence_id": 556, "class": "MigrationLoader", "comment_sentence": "we re already not just operating", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "we re already not just operating", "final_sentence": "we re already not just operating"}
{"comment_sentence_id": 1602, "class": "BooleanArray", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4312, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x7x7 cube", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "target output size of 7x7x7 cube", "final_sentence": "target output size of 7x7x7 cube"}
{"comment_sentence_id": 4222, "class": "Adadelta", "comment_sentence": "to the parameters default 10", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "to the parameters default 10", "final_sentence": "to the parameters default 10"}
{"comment_sentence_id": 4382, "class": "BatchNorm1d", "comment_sentence": "ie simple average .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "ie simple average", "final_sentence": "ie simple average"}
{"comment_sentence_id": 1110, "class": "Magics", "comment_sentence": "classes providing magic functions need to subclass this class, and they", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "classes providing magic functions need to subclass this class and they", "final_sentence": "classes providing magic functions need to subclass this class and they"}
{"comment_sentence_id": 1588, "class": "BooleanArray", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 100, "class": "BaseCommand", "comment_sentence": "2", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 1079, "class": "InteractiveShellApp", "comment_sentence": "the following methods should be called by the meth initialize method", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the following methods should be called by the meth initialize method", "final_sentence": "the following methods should be called by the meth initialize method"}
{"comment_sentence_id": 3255, "class": "NotAny", "comment_sentence": "notany does not advance the parsing position within the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "notany does not advance the parsing position within the", "final_sentence": "notany does not advance the parsing position within the"}
{"comment_sentence_id": 2091, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 576, "class": "MigrationQuestioner", "comment_sentence": "interactive subclass is what the command line arguments will use.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "interactive subclass is what the command line arguments will use", "final_sentence": "interactive subclass is what the command line arguments will use"}
{"comment_sentence_id": 2509, "class": "Context_", "comment_sentence": "and are allowed to access the context read only.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and are allowed to access the context read only", "final_sentence": "and are allowed to access the context read only"}
{"comment_sentence_id": 2245, "class": "StringArray", "comment_sentence": "extension array for string data.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "extension array for string data", "final_sentence": "extension array for string data"}
{"comment_sentence_id": 1646, "class": "CategoricalDtype", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4388, "class": "BatchNorm1d", "comment_sentence": "module tracks the running mean and variance, and when set to false ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "module tracks the running mean and variance and when set to false", "final_sentence": "module tracks the running mean and variance and when set to false"}
{"comment_sentence_id": 2830, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 2385, "class": "And", "comment_sentence": "may also be constructed using the operator, which will", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "may also be constructed using the operator which will", "final_sentence": "may also be constructed using the operator which will"}
{"comment_sentence_id": 66, "class": "AutoFieldMeta", "comment_sentence": "in many areas django also relies on using isinstance to check for an", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "in many areas django also relies on using isinstance to check for an", "final_sentence": "in many areas django also relies on using isinstance to check for an"}
{"comment_sentence_id": 2083, "class": "PlotAccessor", "comment_sentence": "class matplotlib^axes.axes or numpy^ndarray of them", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "class matplotlib axes axes or numpy ndarray of them", "final_sentence": "class matplotlib axes axes or numpy ndarray of them"}
{"comment_sentence_id": 1725, "class": "CategoricalIndex", "comment_sentence": "dtype categoricaldtype or category , optional", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "dtype categoricaldtype or category optional", "final_sentence": "dtype categoricaldtype or category optional"}
{"comment_sentence_id": 519, "class": "MigrationGraph", "comment_sentence": "replaced migrations to point to the replacing one.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "replaced migrations to point to the replacing one", "final_sentence": "replaced migrations to point to the replacing one"}
{"comment_sentence_id": 1291, "class": "ConfigDict", "comment_sentence": "carrots how many carrots?", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "carrots how many carrots", "final_sentence": "carrots how many carrots"}
{"comment_sentence_id": 4118, "class": "TreeBuilder", "comment_sentence": "elementclass the class to use for html elements", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "elementclass the class to use for html elements", "final_sentence": "elementclass the class to use for html elements"}
{"comment_sentence_id": 3518, "class": "ParseResults", "comment_sentence": "# equivalent form", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "equivalent form", "final_sentence": "equivalent form"}
{"comment_sentence_id": 1721, "class": "CategoricalIndex", "comment_sentence": "whether or not this categorical is treated as an ordered", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "whether or not this categorical is treated as an ordered", "final_sentence": "whether or not this categorical is treated as an ordered"}
{"comment_sentence_id": 4129, "class": "UndefinedEnvironmentName", "comment_sentence": "environment.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "environment", "final_sentence": "environment"}
{"comment_sentence_id": 583, "class": "MigrationWriter", "comment_sentence": "of the migration file from it.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "of the migration file from it", "final_sentence": "of the migration file from it"}
{"comment_sentence_id": 2508, "class": "Context_", "comment_sentence": "func contextfunction s get the active context passed as first argument", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "func contextfunction s get the active context passed as first argument", "final_sentence": "func contextfunction s get the active context passed as first argument"}
{"comment_sentence_id": 1311, "class": "ConfigDict", "comment_sentence": "pot^walk liquids vodka , parent true", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot walk liquids vodka parent true", "final_sentence": "pot walk liquids vodka parent true"}
{"comment_sentence_id": 1477, "class": "StorageBackedLongs", "comment_sentence": "and save sets of ints.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "and save sets of ints", "final_sentence": "and save sets of ints"}
{"comment_sentence_id": 3184, "class": "MemcachedBytecodeCache", "comment_sentence": "provided it s an integer with the number of seconds the cache", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "provided it s an integer with the number of seconds the cache", "final_sentence": "provided it s an integer with the number of seconds the cache"}
{"comment_sentence_id": 2384, "class": "And", "comment_sentence": "may be constructed using the operator.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "may be constructed using the operator", "final_sentence": "may be constructed using the operator"}
{"comment_sentence_id": 5639, "class": "TestYellowFin", "comment_sentence": "yellowfin an automatic tuner for momentum sgd", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "yellowfin an automatic tuner for momentum sgd", "final_sentence": "yellowfin an automatic tuner for momentum sgd"}
{"comment_sentence_id": 93, "class": "BaseCommand", "comment_sentence": "consider using one of the subclasses defined in this file.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "consider using one of the subclasses defined in this file", "final_sentence": "consider using one of the subclasses defined in this file"}
{"comment_sentence_id": 16, "class": "Atomic", "comment_sentence": "guarantee the atomic execution of a given block.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "guarantee the atomic execution of a given block", "final_sentence": "guarantee the atomic execution of a given block"}
{"comment_sentence_id": 5293, "class": "Module", "comment_sentence": "import torch^nn.functional as f", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "import torch nn functional as f", "final_sentence": "import torch nn functional as f"}
{"comment_sentence_id": 1708, "class": "CategoricalIndex", "comment_sentence": "additions, divisions, .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "additions divisions", "final_sentence": "additions divisions"}
{"comment_sentence_id": 2079, "class": "PlotAccessor", "comment_sentence": "versionadded 10.0", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "versionadded 10 0", "final_sentence": "versionadded 10 0"}
{"comment_sentence_id": 4394, "class": "BatchNorm1d", "comment_sentence": "output math n, c or math n, c, l same shape as input", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output math n c or math n c l same shape as input", "final_sentence": "output math n c or math n c l same shape as input"}
{"comment_sentence_id": 3271, "class": "NotAny", "comment_sentence": "# integers that are followed by .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "integers that are followed by", "final_sentence": "integers that are followed by"}
{"comment_sentence_id": 4396, "class": "BatchNorm1d", "comment_sentence": "# with learnable parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "with learnable parameters", "final_sentence": "with learnable parameters"}
{"comment_sentence_id": 3339, "class": "omdict", "comment_sentence": "allitems , allkeys , allvalues , lists , listitems ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "allitems allkeys allvalues lists listitems", "final_sentence": "allitems allkeys allvalues lists listitems"}
{"comment_sentence_id": 5211, "class": "ExternalInitializer", "comment_sentence": "this class is used in cases when the parameter should not be initialized by", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this class is used in cases when the parameter should not be initialized by", "final_sentence": "this class is used in cases when the parameter should not be initialized by"}
{"comment_sentence_id": 5347, "class": "MultiLabelMarginLoss", "comment_sentence": "reduce bool, optional deprecated see attr reduction .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "reduce bool optional deprecated see attr reduction", "final_sentence": "reduce bool optional deprecated see attr reduction"}
{"comment_sentence_id": 4240, "class": "Adam", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 538, "class": "MigrationLoader", "comment_sentence": "load migration files from disk and their status from the database.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "load migration files from disk and their status from the database", "final_sentence": "load migration files from disk and their status from the database"}
{"comment_sentence_id": 2504, "class": "Context_", "comment_sentence": "modifications on attr parent must not", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "modifications on attr parent must not", "final_sentence": "modifications on attr parent must not"}
{"comment_sentence_id": 4128, "class": "UndefinedEnvironmentName", "comment_sentence": "a name was attempted to be used that does not exist inside of the", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a name was attempted to be used that does not exist inside of the", "final_sentence": "a name was attempted to be used that does not exist inside of the"}
{"comment_sentence_id": 2086, "class": "PlotAccessor", "comment_sentence": "notes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 5327, "class": "MultiLabelMarginLoss", "comment_sentence": "text loss x, y sum ij frac max 0, 1 x y j x i text x^size 0", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0", "final_sentence": "text loss x y sum ij frac max 0 1 x y j x i text x size 0"}
{"comment_sentence_id": 5937, "class": "PreparedRequest", "comment_sentence": "import requests", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "import requests", "final_sentence": "import requests"}
{"comment_sentence_id": 636, "class": "MultiValueField", "comment_sentence": "each value in", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "each value in", "final_sentence": "each value in"}
{"comment_sentence_id": 2457, "class": "CaseInsensitiveDict", "comment_sentence": "value of a content encoding response header, regardless", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "value of a content encoding response header regardless", "final_sentence": "value of a content encoding response header regardless"}
{"comment_sentence_id": 4245, "class": "Adam", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 554, "class": "MigrationLoader", "comment_sentence": "this does mean that this class must also talk to the database as well as", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this does mean that this class must also talk to the database as well as", "final_sentence": "this does mean that this class must also talk to the database as well as"}
{"comment_sentence_id": 5287, "class": "Module", "comment_sentence": "base class for all neural network modules.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "base class for all neural network modules", "final_sentence": "base class for all neural network modules"}
{"comment_sentence_id": 4313, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 7", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "m nn adaptivemaxpool3d 7", "final_sentence": "m nn adaptivemaxpool3d 7"}
{"comment_sentence_id": 1083, "class": "InteractiveShellApp", "comment_sentence": "meth init gui pylab", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "meth init gui pylab", "final_sentence": "meth init gui pylab"}
{"comment_sentence_id": 513, "class": "MigrationGraph", "comment_sentence": "this is to support the squash feature.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this is to support the squash feature", "final_sentence": "this is to support the squash feature"}
{"comment_sentence_id": 2089, "class": "PlotAccessor", "comment_sentence": "for bar plot layout by position keyword.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for bar plot layout by position keyword", "final_sentence": "for bar plot layout by position keyword"}
{"comment_sentence_id": 3397, "class": "Option", "comment_sentence": "normally, environment variables", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "normally environment variables", "final_sentence": "normally environment variables"}
{"comment_sentence_id": 3086, "class": "Markup", "comment_sentence": "use.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "use", "final_sentence": "use"}
{"comment_sentence_id": 5352, "class": "MultiLabelMarginLoss", "comment_sentence": "batch element instead and ignores attr size average .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "batch element instead and ignores attr size average", "final_sentence": "batch element instead and ignores attr size average"}
{"comment_sentence_id": 5372, "class": "MultiLabelMarginLoss", "comment_sentence": "# for target y, only consider labels 3 and 0, not after label 1", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for target y only consider labels 3 and 0 not after label 1", "final_sentence": "for target y only consider labels 3 and 0 not after label 1"}
{"comment_sentence_id": 4278, "class": "Adamax", "comment_sentence": "lr float, optional learning rate default 2e 3", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "lr float optional learning rate default 2e 3", "final_sentence": "lr float optional learning rate default 2e 3"}
{"comment_sentence_id": 3078, "class": "Markup", "comment_sentence": "meth escape class method instead.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "meth escape class method instead", "final_sentence": "meth escape class method instead"}
{"comment_sentence_id": 2231, "class": "SQLiteTable", "comment_sentence": "instead of a table variable just use the create table statement.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "instead of a table variable just use the create table statement", "final_sentence": "instead of a table variable just use the create table statement"}
{"comment_sentence_id": 4386, "class": "BatchNorm1d", "comment_sentence": "default true", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 914, "class": "Audio", "comment_sentence": "display function, it will result in audio controls being displayed", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "display function it will result in audio controls being displayed", "final_sentence": "display function it will result in audio controls being displayed"}
{"comment_sentence_id": 2503, "class": "Context_", "comment_sentence": "the context is immutable.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the context is immutable", "final_sentence": "the context is immutable"}
{"comment_sentence_id": 3182, "class": "MemcachedBytecodeCache", "comment_sentence": "if timeout is not provided", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if timeout is not provided", "final_sentence": "if timeout is not provided"}
{"comment_sentence_id": 5958, "class": "Response", "comment_sentence": "server s response to an http request.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "server s response to an http request", "final_sentence": "server s response to an http request"}
{"comment_sentence_id": 5341, "class": "MultiLabelMarginLoss", "comment_sentence": "some losses, there are multiple elements per sample.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "some losses there are multiple elements per sample", "final_sentence": "some losses there are multiple elements per sample"}
{"comment_sentence_id": 4279, "class": "Adamax", "comment_sentence": "betas tuple float, float , optional coefficients used for computing", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "betas tuple float float optional coefficients used for computing", "final_sentence": "betas tuple float float optional coefficients used for computing"}
{"comment_sentence_id": 5440, "class": "OneHotCategorical", "comment_sentence": "samples are one hot coded vectors of size probs^size 1 .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "samples are one hot coded vectors of size probs size 1", "final_sentence": "samples are one hot coded vectors of size probs size 1"}
{"comment_sentence_id": 102, "class": "BaseCommand", "comment_sentence": "an argumentparser for the arguments, parses them, performs", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "an argumentparser for the arguments parses them performs", "final_sentence": "an argumentparser for the arguments parses them performs"}
{"comment_sentence_id": 1668, "class": "CategoricalDtype", "comment_sentence": "pd^series a , b , a , c , dtype t", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pd series a b a c dtype t", "final_sentence": "pd series a b a c dtype t"}
{"comment_sentence_id": 1674, "class": "CategoricalDtype", "comment_sentence": "categories 2, object b a", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "categories 2 object b a", "final_sentence": "categories 2 object b a"}
{"comment_sentence_id": 2563, "class": "DocumentErrorTree", "comment_sentence": "implements a dict like class to query errors by indexes following the", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "implements a dict like class to query errors by indexes following the", "final_sentence": "implements a dict like class to query errors by indexes following the"}
{"comment_sentence_id": 2824, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 5356, "class": "MultiLabelMarginLoss", "comment_sentence": "none no reduction will be applied,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "none no reduction will be applied", "final_sentence": "none no reduction will be applied"}
{"comment_sentence_id": 5254, "class": "LBFGS", "comment_sentence": "param bytes history size 1 bytes .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param bytes history size 1 bytes", "final_sentence": "param bytes history size 1 bytes"}
{"comment_sentence_id": 4310, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 8, 9, 10", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "input torch randn 1 64 8 9 10", "final_sentence": "input torch randn 1 64 8 9 10"}
{"comment_sentence_id": 2445, "class": "CaseInsensitiveDict", "comment_sentence": "all keys are expected to be strings.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all keys are expected to be strings", "final_sentence": "all keys are expected to be strings"}
{"comment_sentence_id": 4311, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 3188, "class": "MemcachedBytecodeCache", "comment_sentence": "if the item does not", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if the item does not", "final_sentence": "if the item does not"}
{"comment_sentence_id": 1098, "class": "LazyEvaluate", "comment_sentence": "at that time, such as the current time or working directory.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "at that time such as the current time or working directory", "final_sentence": "at that time such as the current time or working directory"}
{"comment_sentence_id": 3474, "class": "PacifyFlushWrapper", "comment_sentence": "notably ^flush is always called on", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "notably flush is always called on", "final_sentence": "notably flush is always called on"}
{"comment_sentence_id": 4475, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname mean l , & text if reduction text mean", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "operatorname mean l text if reduction text mean", "final_sentence": "operatorname mean l text if reduction text mean"}
{"comment_sentence_id": 2501, "class": "Context_", "comment_sentence": "automatically at various stages of the template evaluation and should not", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "automatically at various stages of the template evaluation and should not", "final_sentence": "automatically at various stages of the template evaluation and should not"}
{"comment_sentence_id": 2572, "class": "Environment", "comment_sentence": "they are not shared and if no template was loaded so far.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "they are not shared and if no template was loaded so far", "final_sentence": "they are not shared and if no template was loaded so far"}
{"comment_sentence_id": 4136, "class": "UnlockError", "comment_sentence": "pass", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 2459, "class": "CaseInsensitiveDict", "comment_sentence": "if the constructor, ^update , or equality comparison", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if the constructor update or equality comparison", "final_sentence": "if the constructor update or equality comparison"}
{"comment_sentence_id": 3227, "class": "MethodDispatcher", "comment_sentence": "on initiation, keys that are lists, sets or tuples are converted to", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "on initiation keys that are lists sets or tuples are converted to", "final_sentence": "on initiation keys that are lists sets or tuples are converted to"}
{"comment_sentence_id": 116, "class": "BaseCommand", "comment_sentence": "thus, the handle method is typically the starting point for", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "thus the handle method is typically the starting point for", "final_sentence": "thus the handle method is typically the starting point for"}
{"comment_sentence_id": 3089, "class": "Markup", "comment_sentence": "class foo", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "class foo", "final_sentence": "class foo"}
{"comment_sentence_id": 2879, "class": "FollowedBy", "comment_sentence": "the input string, it only verifies that the specified parse", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the input string it only verifies that the specified parse", "final_sentence": "the input string it only verifies that the specified parse"}
{"comment_sentence_id": 2435, "class": "CallBlock", "comment_sentence": "call is called with", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "call is called with", "final_sentence": "call is called with"}
{"comment_sentence_id": 1044, "class": "CapturingDisplayPublisher", "comment_sentence": "a displaypublisher that store", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a displaypublisher that store", "final_sentence": "a displaypublisher that store"}
{"comment_sentence_id": 1658, "class": "CategoricalDtype", "comment_sentence": "none", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 104, "class": "BaseCommand", "comment_sentence": "pythonpath , and then calls the execute method,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pythonpath and then calls the execute method", "final_sentence": "pythonpath and then calls the execute method"}
{"comment_sentence_id": 3273, "class": "NotAny", "comment_sentence": "integer word nums char .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "integer word nums char", "final_sentence": "integer word nums char"}
{"comment_sentence_id": 1550, "class": "AbstractHolidayCalendar", "comment_sentence": "abstract interface to create holidays following certain rules.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "abstract interface to create holidays following certain rules", "final_sentence": "abstract interface to create holidays following certain rules"}
{"comment_sentence_id": 2461, "class": "CaseInsensitiveDict", "comment_sentence": "behavior is undefined.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "behavior is undefined", "final_sentence": "behavior is undefined"}
{"comment_sentence_id": 1315, "class": "ConfigDict", "comment_sentence": "pot colors ^extend blue , red , red", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot colors extend blue red red", "final_sentence": "pot colors extend blue red red"}
{"comment_sentence_id": 5465, "class": "Poisson", "comment_sentence": "samples are nonnegative integers, with a pmf given by", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "samples are nonnegative integers with a pmf given by", "final_sentence": "samples are nonnegative integers with a pmf given by"}
{"comment_sentence_id": 5505, "class": "ResNetBuilder", "comment_sentence": "helper class for constructing residual blocks.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "helper class for constructing residual blocks", "final_sentence": "helper class for constructing residual blocks"}
{"comment_sentence_id": 2063, "class": "PlotAccessor", "comment_sentence": "see ref plotting with error bars visualization^errorbars for", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "see ref plotting with error bars visualization errorbars for", "final_sentence": "see ref plotting with error bars visualization errorbars for"}
{"comment_sentence_id": 4216, "class": "Adadelta", "comment_sentence": "parameter groups", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 2412, "class": "Argument", "comment_sentence": "all parameters are passed onwards to the parameter constructor.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all parameters are passed onwards to the parameter constructor", "final_sentence": "all parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 5426, "class": "NetModifier", "comment_sentence": "an abstraction class for supporting modifying a generated net.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "an abstraction class for supporting modifying a generated net", "final_sentence": "an abstraction class for supporting modifying a generated net"}
{"comment_sentence_id": 1706, "class": "CategoricalIndex", "comment_sentence": "also,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "also", "final_sentence": "also"}
{"comment_sentence_id": 797, "class": "StaticFilesHandler", "comment_sentence": "wsgi middleware that intercepts calls to the static files directory, as", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "wsgi middleware that intercepts calls to the static files directory as", "final_sentence": "wsgi middleware that intercepts calls to the static files directory as"}
{"comment_sentence_id": 1293, "class": "ConfigDict", "comment_sentence": "liquids fluids we like , false,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "liquids fluids we like false", "final_sentence": "liquids fluids we like false"}
{"comment_sentence_id": 3601, "class": "Path", "comment_sentence": "the path type is similar to the class file type but it performs", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the path type is similar to the class file type but it performs", "final_sentence": "the path type is similar to the class file type but it performs"}
{"comment_sentence_id": 51, "class": "AtomicTests", "comment_sentence": "the tests make assertions on internal attributes because there isn t a", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the tests make assertions on internal attributes because there isn t a", "final_sentence": "the tests make assertions on internal attributes because there isn t a"}
{"comment_sentence_id": 1175, "class": "UserMagics", "comment_sentence": "all magics are eventually merged into a single namespace at runtime, but we", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all magics are eventually merged into a single namespace at runtime but we", "final_sentence": "all magics are eventually merged into a single namespace at runtime but we"}
{"comment_sentence_id": 4117, "class": "TreeBuilder", "comment_sentence": "documentclass the class to use for the bottommost node of a document", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "documentclass the class to use for the bottommost node of a document", "final_sentence": "documentclass the class to use for the bottommost node of a document"}
{"comment_sentence_id": 550, "class": "MigrationLoader", "comment_sentence": "if all the migrations they replace are either unapplied or missing from", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if all the migrations they replace are either unapplied or missing from", "final_sentence": "if all the migrations they replace are either unapplied or missing from"}
{"comment_sentence_id": 4119, "class": "TreeBuilder", "comment_sentence": "commentclass the class to use for comments", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "commentclass the class to use for comments", "final_sentence": "commentclass the class to use for comments"}
{"comment_sentence_id": 2214, "class": "SelectNSeries", "comment_sentence": "keep first , last , default first", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "keep first last default first", "final_sentence": "keep first last default first"}
{"comment_sentence_id": 5256, "class": "LBFGS", "comment_sentence": "try reducing the history size, or use a different algorithm.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "try reducing the history size or use a different algorithm", "final_sentence": "try reducing the history size or use a different algorithm"}
{"comment_sentence_id": 4305, "class": "AdaptiveMaxPool3d", "comment_sentence": "useful to pass to nn^maxunpool3d.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "useful to pass to nn maxunpool3d", "final_sentence": "useful to pass to nn maxunpool3d"}
{"comment_sentence_id": 3298, "class": "NotMyLock", "comment_sentence": "pass", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 70, "class": "AutoFieldMeta", "comment_sentence": "when these issues have been addressed, this metaclass could be used to", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "when these issues have been addressed this metaclass could be used to", "final_sentence": "when these issues have been addressed this metaclass could be used to"}
{"comment_sentence_id": 2512, "class": "Context_", "comment_sentence": "getitem , contains .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "getitem contains", "final_sentence": "getitem contains"}
{"comment_sentence_id": 4309, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 5,7,9", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "m nn adaptivemaxpool3d 5 7 9", "final_sentence": "m nn adaptivemaxpool3d 5 7 9"}
{"comment_sentence_id": 3514, "class": "ParseResults", "comment_sentence": "integer word nums", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 3388, "class": "Option", "comment_sentence": "param show default controls if the default value should be shown on the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param show default controls if the default value should be shown on the", "final_sentence": "param show default controls if the default value should be shown on the"}
{"comment_sentence_id": 98, "class": "BaseCommand", "comment_sentence": "django admin or manage^py loads the command class", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "django admin or manage py loads the command class", "final_sentence": "django admin or manage py loads the command class"}
{"comment_sentence_id": 4314, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 5252, "class": "LBFGS", "comment_sentence": "note", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 594, "class": "MultiPartParser", "comment_sentence": "and returns a tuple of multivaluedict post , multivaluedict files .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and returns a tuple of multivaluedict post multivaluedict files", "final_sentence": "and returns a tuple of multivaluedict post multivaluedict files"}
{"comment_sentence_id": 14, "class": "ArchiveIndexView", "comment_sentence": "top level archive of date based items.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "top level archive of date based items", "final_sentence": "top level archive of date based items"}
{"comment_sentence_id": 1474, "class": "Rescan", "comment_sentence": "add new messages to index", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "add new messages to index", "final_sentence": "add new messages to index"}
{"comment_sentence_id": 4358, "class": "BatchNorm1d", "comment_sentence": "evaluation.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "evaluation", "final_sentence": "evaluation"}
{"comment_sentence_id": 3080, "class": "Markup", "comment_sentence": "markup hello, em world em !", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "markup hello em world em", "final_sentence": "markup hello em world em"}
{"comment_sentence_id": 3666, "class": "PoolManager", "comment_sentence": "necessary connection pools for you.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "necessary connection pools for you", "final_sentence": "necessary connection pools for you"}
{"comment_sentence_id": 5226, "class": "FisherSnedecor", "comment_sentence": "df2 float or tensor degrees of freedom parameter 2", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "df2 float or tensor degrees of freedom parameter 2", "final_sentence": "df2 float or tensor degrees of freedom parameter 2"}
{"comment_sentence_id": 4316, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x9x8", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "target output size of 7x9x8", "final_sentence": "target output size of 7x9x8"}
{"comment_sentence_id": 5370, "class": "MultiLabelMarginLoss", "comment_sentence": "loss nn^multilabelmarginloss", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "loss nn multilabelmarginloss", "final_sentence": "loss nn multilabelmarginloss"}
{"comment_sentence_id": 2513, "class": "Context_", "comment_sentence": "additionally there is a meth resolve", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "additionally there is a meth resolve", "final_sentence": "additionally there is a meth resolve"}
{"comment_sentence_id": 4307, "class": "AdaptiveMaxPool3d", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 2085, "class": "PlotAccessor", "comment_sentence": "will be the object returned by the backend.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "will be the object returned by the backend", "final_sentence": "will be the object returned by the backend"}
{"comment_sentence_id": 1716, "class": "CategoricalIndex", "comment_sentence": "the categories for the categorical.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the categories for the categorical", "final_sentence": "the categories for the categorical"}
{"comment_sentence_id": 3265, "class": "NotAny", "comment_sentence": "# take care not to mistake keywords for identifiers", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "take care not to mistake keywords for identifiers", "final_sentence": "take care not to mistake keywords for identifiers"}
{"comment_sentence_id": 1095, "class": "IPythonInputSplitter", "comment_sentence": "an input splitter that recognizes all of ipython s special syntax.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "an input splitter that recognizes all of ipython s special syntax", "final_sentence": "an input splitter that recognizes all of ipython s special syntax"}
{"comment_sentence_id": 72, "class": "AutoFieldMeta", "comment_sentence": "for detecting automatically generated fields.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for detecting automatically generated fields", "final_sentence": "for detecting automatically generated fields"}
{"comment_sentence_id": 2507, "class": "Context_", "comment_sentence": "template filters and global functions marked as", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "template filters and global functions marked as", "final_sentence": "template filters and global functions marked as"}
{"comment_sentence_id": 7, "class": "AppConfigStub", "comment_sentence": "stub of an appconfig.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "stub of an appconfig", "final_sentence": "stub of an appconfig"}
{"comment_sentence_id": 4465, "class": "BCEWithLogitsLoss", "comment_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "final_sentence": "the unreduced ie with attr reduction set to none loss can be described as"}
{"comment_sentence_id": 1598, "class": "BooleanArray", "comment_sentence": "methods", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 2875, "class": "Filter_", "comment_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes", "final_sentence": "sanitizes token stream of xhtml mathml svg and of inline style attributes"}
{"comment_sentence_id": 1562, "class": "Base", "comment_sentence": "to be supplied in breaks format, then converted by the subclass method", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "to be supplied in breaks format then converted by the subclass method", "final_sentence": "to be supplied in breaks format then converted by the subclass method"}
{"comment_sentence_id": 1582, "class": "BooleanArray", "comment_sentence": "below .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "below", "final_sentence": "below"}
{"comment_sentence_id": 21, "class": "Atomic", "comment_sentence": "savepoint, depending on whether a transaction is already in progress, and", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "savepoint depending on whether a transaction is already in progress and", "final_sentence": "savepoint depending on whether a transaction is already in progress and"}
{"comment_sentence_id": 53, "class": "AtomicTests", "comment_sentence": "since the decorator syntax is converted into a context manager see the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "since the decorator syntax is converted into a context manager see the", "final_sentence": "since the decorator syntax is converted into a context manager see the"}
{"comment_sentence_id": 5470, "class": "Poisson", "comment_sentence": "m^sample", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "m sample", "final_sentence": "m sample"}
{"comment_sentence_id": 3257, "class": "NotAny", "comment_sentence": "does not match at the current position.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "does not match at the current position", "final_sentence": "does not match at the current position"}
{"comment_sentence_id": 5297, "class": "Module", "comment_sentence": "init", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "init", "final_sentence": "init"}
{"comment_sentence_id": 2505, "class": "Context_", "comment_sentence": "happen and modifications on attr vars are allowed from generated", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "happen and modifications on attr vars are allowed from generated", "final_sentence": "happen and modifications on attr vars are allowed from generated"}
{"comment_sentence_id": 3399, "class": "Option", "comment_sentence": "param prompt if set to true or a non empty string then the user will be", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param prompt if set to true or a non empty string then the user will be", "final_sentence": "param prompt if set to true or a non empty string then the user will be"}
{"comment_sentence_id": 5430, "class": "NetModifier", "comment_sentence": "modifier somenetmodifier opts", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "modifier somenetmodifier opts", "final_sentence": "modifier somenetmodifier opts"}
{"comment_sentence_id": 2388, "class": "And", "comment_sentence": "integer word nums", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 3324, "class": "omdict", "comment_sentence": "items , keys , values , iteritems , iterkeys , itervalues ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "items keys values iteritems iterkeys itervalues", "final_sentence": "items keys values iteritems iterkeys itervalues"}
{"comment_sentence_id": 3427, "class": "Option", "comment_sentence": "param hidden hide this option from help outputs.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param hidden hide this option from help outputs", "final_sentence": "param hidden hide this option from help outputs"}
{"comment_sentence_id": 4276, "class": "Adamax", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 4380, "class": "BatchNorm1d", "comment_sentence": "computation.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "computation", "final_sentence": "computation"}
{"comment_sentence_id": 2511, "class": "Context_", "comment_sentence": "keys , values , items , iterkeys , itervalues , iteritems ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "keys values items iterkeys itervalues iteritems", "final_sentence": "keys values items iterkeys itervalues iteritems"}
{"comment_sentence_id": 3180, "class": "MemcachedBytecodeCache", "comment_sentence": "value is a string and", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "value is a string and", "final_sentence": "value is a string and"}
{"comment_sentence_id": 3190, "class": "MemcachedBytecodeCache", "comment_sentence": "the other arguments to the constructor are the prefix for all keys that", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the other arguments to the constructor are the prefix for all keys that", "final_sentence": "the other arguments to the constructor are the prefix for all keys that"}
{"comment_sentence_id": 5494, "class": "QuantWrapper", "comment_sentence": "similarly", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "similarly", "final_sentence": "similarly"}
{"comment_sentence_id": 2887, "class": "FollowedBy", "comment_sentence": "# use followedby to match a label only if it is followed by a", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "use followedby to match a label only if it is followed by a", "final_sentence": "use followedby to match a label only if it is followed by a"}
{"comment_sentence_id": 1592, "class": "BooleanArray", "comment_sentence": "a 1 d boolean dtype array indicating missing values true", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a 1 d boolean dtype array indicating missing values true", "final_sentence": "a 1 d boolean dtype array indicating missing values true"}
{"comment_sentence_id": 4243, "class": "Adam", "comment_sentence": "betas tuple float, float , optional coefficients used for computing", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "betas tuple float float optional coefficients used for computing", "final_sentence": "betas tuple float float optional coefficients used for computing"}
{"comment_sentence_id": 574, "class": "MigrationQuestioner", "comment_sentence": "give the autodetector responses to questions it might have.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "give the autodetector responses to questions it might have", "final_sentence": "give the autodetector responses to questions it might have"}
{"comment_sentence_id": 5326, "class": "MultiLabelMarginLoss", "comment_sentence": "math", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 798, "class": "StaticFilesHandler", "comment_sentence": "defined by the static url setting, and serves those files.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "defined by the static url setting and serves those files", "final_sentence": "defined by the static url setting and serves those files"}
{"comment_sentence_id": 5448, "class": "OneHotCategorical", "comment_sentence": "tensor 0., 0., 0., 1.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "tensor 0 0 0 1", "final_sentence": "tensor 0 0 0 1"}
{"comment_sentence_id": 1710, "class": "CategoricalIndex", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 5238, "class": "LastNWindowCollector", "comment_sentence": "this layer is not thread safe.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this layer is not thread safe", "final_sentence": "this layer is not thread safe"}
{"comment_sentence_id": 4372, "class": "BatchNorm1d", "comment_sentence": "because the batch normalization is done over the c dimension, computing statistics", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "because the batch normalization is done over the c dimension computing statistics", "final_sentence": "because the batch normalization is done over the c dimension computing statistics"}
{"comment_sentence_id": 3520, "class": "ParseResults", "comment_sentence": "# parsestring returns a parseresults object", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parsestring returns a parseresults object", "final_sentence": "parsestring returns a parseresults object"}
{"comment_sentence_id": 3392, "class": "Option", "comment_sentence": "value is a string, it shows the string instead of the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "value is a string it shows the string instead of the", "final_sentence": "value is a string it shows the string instead of the"}
{"comment_sentence_id": 5360, "class": "MultiLabelMarginLoss", "comment_sentence": "and attr reduce are in the process of being deprecated, and in the meantime,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and attr reduce are in the process of being deprecated and in the meantime", "final_sentence": "and attr reduce are in the process of being deprecated and in the meantime"}
{"comment_sentence_id": 4241, "class": "Adam", "comment_sentence": "parameter groups", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 2092, "class": "PlotAccessor", "comment_sentence": "center", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "center", "final_sentence": "center"}
{"comment_sentence_id": 1666, "class": "CategoricalDtype", "comment_sentence": "examples", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4366, "class": "BatchNorm1d", "comment_sentence": "classes and the conventional notion of momentum.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "classes and the conventional notion of momentum", "final_sentence": "classes and the conventional notion of momentum"}
{"comment_sentence_id": 1553, "class": "AccessorCallableDocumenter", "comment_sentence": "call from the method signature for", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "call from the method signature for", "final_sentence": "call from the method signature for"}
{"comment_sentence_id": 4368, "class": "BatchNorm1d", "comment_sentence": "update rule for running statistics here is", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "update rule for running statistics here is", "final_sentence": "update rule for running statistics here is"}
{"comment_sentence_id": 307, "class": "CustomCacheKeyValidationTests", "comment_sentence": "a custom cache backend that otherwise inherits from a builtin", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a custom cache backend that otherwise inherits from a builtin", "final_sentence": "a custom cache backend that otherwise inherits from a builtin"}
{"comment_sentence_id": 1144, "class": "Struct", "comment_sentence": "attribute style access.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "attribute style access", "final_sentence": "attribute style access"}
{"comment_sentence_id": 546, "class": "MigrationLoader", "comment_sentence": "see", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 2386, "class": "And", "comment_sentence": "suppress backtracking.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "suppress backtracking", "final_sentence": "suppress backtracking"}
{"comment_sentence_id": 1305, "class": "ConfigDict", "comment_sentence": "pot liquids vodka", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot liquids vodka", "final_sentence": "pot liquids vodka"}
{"comment_sentence_id": 5220, "class": "FisherSnedecor", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1050, "class": "DisplayHook", "comment_sentence": "that gets called anytime user code returns a value.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "that gets called anytime user code returns a value", "final_sentence": "that gets called anytime user code returns a value"}
{"comment_sentence_id": 4277, "class": "Adamax", "comment_sentence": "parameter groups", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 3076, "class": "Markup", "comment_sentence": "it to mark it safe without escaping.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "it to mark it safe without escaping", "final_sentence": "it to mark it safe without escaping"}
{"comment_sentence_id": 5491, "class": "QuantWrapper", "comment_sentence": "dequant modules, before convert function quantstub will just be observer,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "dequant modules before convert function quantstub will just be observer", "final_sentence": "dequant modules before convert function quantstub will just be observer"}
{"comment_sentence_id": 1289, "class": "ConfigDict", "comment_sentence": "pot configdict rules potatoes how many potatoes?", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot configdict rules potatoes how many potatoes", "final_sentence": "pot configdict rules potatoes how many potatoes"}
{"comment_sentence_id": 2362, "class": "_BZ2Proxy", "comment_sentence": "a file object argument.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a file object argument", "final_sentence": "a file object argument"}
{"comment_sentence_id": 97, "class": "BaseCommand", "comment_sentence": "1", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 4155, "class": "_OpNamespace", "comment_sentence": "object called my namespace and set it as an attribute on the ops", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "object called my namespace and set it as an attribute on the ops", "final_sentence": "object called my namespace and set it as an attribute on the ops"}
{"comment_sentence_id": 4149, "class": "_OpNamespace", "comment_sentence": "at startup, this operation will not yet be bound into python.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "at startup this operation will not yet be bound into python", "final_sentence": "at startup this operation will not yet be bound into python"}
{"comment_sentence_id": 789, "class": "SpatialRefSysMixin", "comment_sentence": "the spatialrefsysmixin is a class used by the database dependent", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the spatialrefsysmixin is a class used by the database dependent", "final_sentence": "the spatialrefsysmixin is a class used by the database dependent"}
{"comment_sentence_id": 25, "class": "Atomic", "comment_sentence": "ensure that some code runs within a transaction without creating overhead.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "ensure that some code runs within a transaction without creating overhead", "final_sentence": "ensure that some code runs within a transaction without creating overhead"}
{"comment_sentence_id": 5428, "class": "NetModifier", "comment_sentence": "related operators are added to the net.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "related operators are added to the net", "final_sentence": "related operators are added to the net"}
{"comment_sentence_id": 2390, "class": "And", "comment_sentence": "expr and integer id ,name expr name ,integer age", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "expr and integer id name expr name integer age", "final_sentence": "expr and integer id name expr name integer age"}
{"comment_sentence_id": 1650, "class": "CategoricalDtype", "comment_sentence": "whether or not this categorical is treated as a ordered categorical.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "whether or not this categorical is treated as a ordered categorical", "final_sentence": "whether or not this categorical is treated as a ordered categorical"}
{"comment_sentence_id": 1871, "class": "Holiday", "comment_sentence": "for observance.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "for observance", "final_sentence": "for observance"}
{"comment_sentence_id": 3394, "class": "Option", "comment_sentence": "this is particularly useful for dynamic options.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this is particularly useful for dynamic options", "final_sentence": "this is particularly useful for dynamic options"}
{"comment_sentence_id": 1723, "class": "CategoricalIndex", "comment_sentence": "if not given here or in dtype , the resulting", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if not given here or in dtype the resulting", "final_sentence": "if not given here or in dtype the resulting"}
{"comment_sentence_id": 11, "class": "Archive", "comment_sentence": "the external api class that encapsulates an archive implementation.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the external api class that encapsulates an archive implementation", "final_sentence": "the external api class that encapsulates an archive implementation"}
{"comment_sentence_id": 96, "class": "BaseCommand", "comment_sentence": "as follows", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "as follows", "final_sentence": "as follows"}
{"comment_sentence_id": 1176, "class": "UserMagics", "comment_sentence": "use this class to isolate the magics defined dynamically by the user into", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "use this class to isolate the magics defined dynamically by the user into", "final_sentence": "use this class to isolate the magics defined dynamically by the user into"}
{"comment_sentence_id": 3401, "class": "Option", "comment_sentence": "if set to true the prompt will be the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if set to true the prompt will be the", "final_sentence": "if set to true the prompt will be the"}
{"comment_sentence_id": 5931, "class": "InvalidHeader", "comment_sentence": "the header value provided was somehow invalid.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the header value provided was somehow invalid", "final_sentence": "the header value provided was somehow invalid"}
{"comment_sentence_id": 2502, "class": "Context_", "comment_sentence": "be created by hand.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "be created by hand", "final_sentence": "be created by hand"}
{"comment_sentence_id": 2426, "class": "Bucket", "comment_sentence": "to automatically reject outdated cache material.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "to automatically reject outdated cache material", "final_sentence": "to automatically reject outdated cache material"}
{"comment_sentence_id": 294, "class": "ConsoleDirective", "comment_sentence": "unix oriented examples.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "unix oriented examples", "final_sentence": "unix oriented examples"}
{"comment_sentence_id": 3310, "class": "omdict", "comment_sentence": "items.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "items", "final_sentence": "items"}
{"comment_sentence_id": 114, "class": "BaseCommand", "comment_sentence": "commanderror , run from argv will instead print an error", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "commanderror run from argv will instead print an error", "final_sentence": "commanderror run from argv will instead print an error"}
{"comment_sentence_id": 5446, "class": "OneHotCategorical", "comment_sentence": "m onehotcategorical torch^tensor 025, 025, 025, 025", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "m onehotcategorical torch tensor 025 025 025 025", "final_sentence": "m onehotcategorical torch tensor 025 025 025 025"}
{"comment_sentence_id": 4884, "class": "CyclicLR", "comment_sentence": "cyclical learning rate policy clr .", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "cyclical learning rate policy clr", "final_sentence": "cyclical learning rate policy clr"}
{"comment_sentence_id": 2071, "class": "PlotAccessor", "comment_sentence": "if true, boolean values can be plotted.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if true boolean values can be plotted", "final_sentence": "if true boolean values can be plotted"}
{"comment_sentence_id": 2816, "class": "fdspawn", "comment_sentence": "this is like pexpect^spawn but allows you to supply your own open file", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "this is like pexpect spawn but allows you to supply your own open file", "final_sentence": "this is like pexpect spawn but allows you to supply your own open file"}
{"comment_sentence_id": 3162, "class": "MemcachedBytecodeCache", "comment_sentence": "storing the information.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "storing the information", "final_sentence": "storing the information"}
{"comment_sentence_id": 1714, "class": "CategoricalIndex", "comment_sentence": "categories will be replaced with nan.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "categories will be replaced with nan", "final_sentence": "categories will be replaced with nan"}
{"comment_sentence_id": 4351, "class": "BatchNorm1d", "comment_sentence": "the mean and standard deviation are calculated per dimension over", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the mean and standard deviation are calculated per dimension over", "final_sentence": "the mean and standard deviation are calculated per dimension over"}
{"comment_sentence_id": 4110, "class": "TokenStreamIterator", "comment_sentence": "the iterator for tokenstreams.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the iterator for tokenstreams", "final_sentence": "the iterator for tokenstreams"}
{"comment_sentence_id": 5490, "class": "QuantWrapper", "comment_sentence": "this is used by the quantization utility functions to add the quant and", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this is used by the quantization utility functions to add the quant and", "final_sentence": "this is used by the quantization utility functions to add the quant and"}
{"comment_sentence_id": 99, "class": "BaseCommand", "comment_sentence": "and calls its run from argv method.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and calls its run from argv method", "final_sentence": "and calls its run from argv method"}
{"comment_sentence_id": 3192, "class": "MemcachedBytecodeCache", "comment_sentence": "the cache system.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the cache system", "final_sentence": "the cache system"}
{"comment_sentence_id": 5358, "class": "MultiLabelMarginLoss", "comment_sentence": "elements in the output, sum the output will be summed.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "elements in the output sum the output will be summed", "final_sentence": "elements in the output sum the output will be summed"}
{"comment_sentence_id": 5635, "class": "TestBuiltins", "comment_sentence": "tests for torchscript support of python builtin functions.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "tests for torchscript support of python builtin functions", "final_sentence": "tests for torchscript support of python builtin functions"}
{"comment_sentence_id": 3097, "class": "Markup", "comment_sentence": "all methods escape their arguments and return a markup instance.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all methods escape their arguments and return a markup instance", "final_sentence": "all methods escape their arguments and return a markup instance"}
{"comment_sentence_id": 3512, "class": "ParseResults", "comment_sentence": "resultsname see class parserelement^setresultsname", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "resultsname see class parserelement setresultsname", "final_sentence": "resultsname see class parserelement setresultsname"}
{"comment_sentence_id": 2449, "class": "CaseInsensitiveDict", "comment_sentence": "will contain case sensitive keys.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "will contain case sensitive keys", "final_sentence": "will contain case sensitive keys"}
{"comment_sentence_id": 4392, "class": "BatchNorm1d", "comment_sentence": "shape", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "shape", "final_sentence": "shape"}
{"comment_sentence_id": 1563, "class": "Base", "comment_sentence": "get kwargs from breaks to the expected format.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "get kwargs from breaks to the expected format", "final_sentence": "get kwargs from breaks to the expected format"}
{"comment_sentence_id": 1166, "class": "TermColors", "comment_sentence": "this class should be used as a mixin for building color schemes.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this class should be used as a mixin for building color schemes", "final_sentence": "this class should be used as a mixin for building color schemes"}
{"comment_sentence_id": 4281, "class": "Adamax", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 4157, "class": "_OpNamespace", "comment_sentence": "2", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 4473, "class": "BCEWithLogitsLoss", "comment_sentence": "math", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 1101, "class": "Magics", "comment_sentence": "base class for implementing magic functions.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "base class for implementing magic functions", "final_sentence": "base class for implementing magic functions"}
{"comment_sentence_id": 575, "class": "MigrationQuestioner", "comment_sentence": "this base class has a built in noninteractive mode, but the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this base class has a built in noninteractive mode but the", "final_sentence": "this base class has a built in noninteractive mode but the"}
{"comment_sentence_id": 300, "class": "CryptPasswordHasher", "comment_sentence": "password hashing using unix crypt not recommended", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "password hashing using unix crypt not recommended", "final_sentence": "password hashing using unix crypt not recommended"}
{"comment_sentence_id": 1558, "class": "AccessorDocumenter", "comment_sentence": "specialized documenter subclass for accessors.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "specialized documenter subclass for accessors", "final_sentence": "specialized documenter subclass for accessors"}
{"comment_sentence_id": 4362, "class": "BatchNorm1d", "comment_sentence": "keep running estimates, and batch statistics are instead used during", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "keep running estimates and batch statistics are instead used during", "final_sentence": "keep running estimates and batch statistics are instead used during"}
{"comment_sentence_id": 3421, "class": "Option", "comment_sentence": "param count this flag makes an option increment an integer.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param count this flag makes an option increment an integer", "final_sentence": "param count this flag makes an option increment an integer"}
{"comment_sentence_id": 3417, "class": "Option", "comment_sentence": "multiple times and recorded.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "multiple times and recorded", "final_sentence": "multiple times and recorded"}
{"comment_sentence_id": 1333, "class": "ConfigDict", "comment_sentence": "valueerror invalid value for config potatoes moo", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "valueerror invalid value for config potatoes moo", "final_sentence": "valueerror invalid value for config potatoes moo"}
{"comment_sentence_id": 3419, "class": "Option", "comment_sentence": "in how it works but supports arbitrary number of", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "in how it works but supports arbitrary number of", "final_sentence": "in how it works but supports arbitrary number of"}
{"comment_sentence_id": 5368, "class": "MultiLabelMarginLoss", "comment_sentence": "if attr reduction is none , then math n .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if attr reduction is none then math n", "final_sentence": "if attr reduction is none then math n"}
{"comment_sentence_id": 3403, "class": "Option", "comment_sentence": "param confirmation prompt if set then the value will need to be confirmed", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "param confirmation prompt if set then the value will need to be confirmed", "final_sentence": "param confirmation prompt if set then the value will need to be confirmed"}
{"comment_sentence_id": 5472, "class": "Poisson", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 5442, "class": "OneHotCategorical", "comment_sentence": "and it will be normalized to sum to 1.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and it will be normalized to sum to 1", "final_sentence": "and it will be normalized to sum to 1"}
{"comment_sentence_id": 3315, "class": "omdict", "comment_sentence": "standard dict methods interact with the first value associated with a given", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "standard dict methods interact with the first value associated with a given", "final_sentence": "standard dict methods interact with the first value associated with a given"}
{"comment_sentence_id": 1648, "class": "CategoricalDtype", "comment_sentence": "must be unique, and must not contain any nulls.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "must be unique and must not contain any nulls", "final_sentence": "must be unique and must not contain any nulls"}
{"comment_sentence_id": 2850, "class": "FileSystemLoader", "comment_sentence": "in folders on the file system and is the preferred way to load them.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "in folders on the file system and is the preferred way to load them", "final_sentence": "in folders on the file system and is the preferred way to load them"}
{"comment_sentence_id": 123, "class": "BaseCommand", "comment_sentence": "a short description of the command, which will be printed in", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a short description of the command which will be printed in", "final_sentence": "a short description of the command which will be printed in"}
{"comment_sentence_id": 2055, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 3261, "class": "NotAny", "comment_sentence": "a null token list.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a null token list", "final_sentence": "a null token list"}
{"comment_sentence_id": 5468, "class": "Poisson", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5564, "class": "StackTransform", "comment_sentence": "component wise to each submatrix at dim", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "component wise to each submatrix at dim", "final_sentence": "component wise to each submatrix at dim"}
{"comment_sentence_id": 3425, "class": "Option", "comment_sentence": "context.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "context", "final_sentence": "context"}
{"comment_sentence_id": 101, "class": "BaseCommand", "comment_sentence": "the run from argv method calls create parser to get", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the run from argv method calls create parser to get", "final_sentence": "the run from argv method calls create parser to get"}
{"comment_sentence_id": 3522, "class": "ParseResults", "comment_sentence": "def test s, fn repr", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "def test s fn repr", "final_sentence": "def test s fn repr"}
{"comment_sentence_id": 2065, "class": "PlotAccessor", "comment_sentence": "xerr dataframe, series, array like, dict and str", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "xerr dataframe series array like dict and str", "final_sentence": "xerr dataframe series array like dict and str"}
{"comment_sentence_id": 112, "class": "BaseCommand", "comment_sentence": "4", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "4", "final_sentence": "4"}
{"comment_sentence_id": 4273, "class": "Adamax", "comment_sentence": "implements adamax algorithm a variant of adam based on infinity norm .", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "implements adamax algorithm a variant of adam based on infinity norm", "final_sentence": "implements adamax algorithm a variant of adam based on infinity norm"}
{"comment_sentence_id": 4883, "class": "CyclicLR", "comment_sentence": "sets the learning rate of each parameter group according to", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "sets the learning rate of each parameter group according to", "final_sentence": "sets the learning rate of each parameter group according to"}
{"comment_sentence_id": 3330, "class": "omdict", "comment_sentence": "new methods have also been added to omdict.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "new methods have also been added to omdict", "final_sentence": "new methods have also been added to omdict"}
{"comment_sentence_id": 2510, "class": "Context_", "comment_sentence": "the template context supports read only dict operations get ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the template context supports read only dict operations get", "final_sentence": "the template context supports read only dict operations get"}
{"comment_sentence_id": 4398, "class": "BatchNorm1d", "comment_sentence": "# without learnable parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "without learnable parameters", "final_sentence": "without learnable parameters"}
{"comment_sentence_id": 1596, "class": "BooleanArray", "comment_sentence": "attributes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 2061, "class": "PlotAccessor", "comment_sentence": "table.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "table", "final_sentence": "table"}
{"comment_sentence_id": 118, "class": "BaseCommand", "comment_sentence": "all of their logic in handle , or perform some additional", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all of their logic in handle or perform some additional", "final_sentence": "all of their logic in handle or perform some additional"}
{"comment_sentence_id": 2358, "class": "_BZ2Proxy", "comment_sentence": "support for r bz2 and w bz2 modes.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "support for r bz2 and w bz2 modes", "final_sentence": "support for r bz2 and w bz2 modes"}
{"comment_sentence_id": 298, "class": "Context", "comment_sentence": "a stack container for variable context", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a stack container for variable context", "final_sentence": "a stack container for variable context"}
{"comment_sentence_id": 1704, "class": "CategoricalIndex", "comment_sentence": "categoricalindex, like categorical, can only take on a limited,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "categoricalindex like categorical can only take on a limited", "final_sentence": "categoricalindex like categorical can only take on a limited"}
{"comment_sentence_id": 4275, "class": "Adamax", "comment_sentence": "arguments", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 1324, "class": "ConfigDict", "comment_sentence": "valueerror invalid value for config tags 1 .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "valueerror invalid value for config tags 1", "final_sentence": "valueerror invalid value for config tags 1"}
{"comment_sentence_id": 1301, "class": "ConfigDict", "comment_sentence": "colors , liquids , tags , , ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "colors liquids tags", "final_sentence": "colors liquids tags"}
{"comment_sentence_id": 5637, "class": "TestQuantizedLinear", "comment_sentence": "tests the correctness of the quantized linear and linear relu op.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "tests the correctness of the quantized linear and linear relu op", "final_sentence": "tests the correctness of the quantized linear and linear relu op"}
{"comment_sentence_id": 2053, "class": "PlotAccessor", "comment_sentence": "specify relative alignments for bar plot layout.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "specify relative alignments for bar plot layout", "final_sentence": "specify relative alignments for bar plot layout"}
{"comment_sentence_id": 1309, "class": "ConfigDict", "comment_sentence": "pot^walk liquids^vodka", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot walk liquids vodka", "final_sentence": "pot walk liquids vodka"}
{"comment_sentence_id": 1281, "class": "ConfigDict", "comment_sentence": "to be dictionaries or lists of items that match the rules defined.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "to be dictionaries or lists of items that match the rules defined", "final_sentence": "to be dictionaries or lists of items that match the rules defined"}
{"comment_sentence_id": 1569, "class": "BaseInterfaceTests", "comment_sentence": "tests that the basic interface is satisfied.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "tests that the basic interface is satisfied", "final_sentence": "tests that the basic interface is satisfied"}
{"comment_sentence_id": 3267, "class": "NotAny", "comment_sentence": "boolean term optional not ident", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "boolean term optional not ident", "final_sentence": "boolean term optional not ident"}
{"comment_sentence_id": 4220, "class": "Adadelta", "comment_sentence": "numerical stability default 1e 6", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "numerical stability default 1e 6", "final_sentence": "numerical stability default 1e 6"}
{"comment_sentence_id": 2455, "class": "CaseInsensitiveDict", "comment_sentence": "list cid accept # true", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "list cid accept true", "final_sentence": "list cid accept true"}
{"comment_sentence_id": 4247, "class": "Adam", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 5364, "class": "MultiLabelMarginLoss", "comment_sentence": "input math c or math n, c where n is the batch size and c", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "input math c or math n c where n is the batch size and c", "final_sentence": "input math c or math n c where n is the batch size and c"}
{"comment_sentence_id": 3269, "class": "NotAny", "comment_sentence": "# operation hierarchy, use infixnotation", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "operation hierarchy use infixnotation", "final_sentence": "operation hierarchy use infixnotation"}
{"comment_sentence_id": 3663, "class": "PipError", "comment_sentence": "base pip exception", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "base pip exception", "final_sentence": "base pip exception"}
{"comment_sentence_id": 3510, "class": "ParseResults", "comment_sentence": "by list index results 0 , results 1 , etc", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "by list index results 0 results 1 etc", "final_sentence": "by list index results 0 results 1 etc"}
{"comment_sentence_id": 1303, "class": "ConfigDict", "comment_sentence": "pot potatoes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot potatoes", "final_sentence": "pot potatoes"}
{"comment_sentence_id": 2389, "class": "And", "comment_sentence": "name expr oneormore word alphas", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "name expr oneormore word alphas", "final_sentence": "name expr oneormore word alphas"}
{"comment_sentence_id": 1652, "class": "CategoricalDtype", "comment_sentence": "used in operations that combine categoricals, eg astype, and will resolve to", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "used in operations that combine categoricals eg astype and will resolve to", "final_sentence": "used in operations that combine categoricals eg astype and will resolve to"}
{"comment_sentence_id": 2057, "class": "PlotAccessor", "comment_sentence": "table bool, series or dataframe, default false", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "table bool series or dataframe default false", "final_sentence": "table bool series or dataframe default false"}
{"comment_sentence_id": 5354, "class": "MultiLabelMarginLoss", "comment_sentence": "reduction string, optional specifies the reduction to apply to the output", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "reduction string optional specifies the reduction to apply to the output", "final_sentence": "reduction string optional specifies the reduction to apply to the output"}
{"comment_sentence_id": 5343, "class": "MultiLabelMarginLoss", "comment_sentence": "is set to false , the losses are instead summed for each minibatch.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "is set to false the losses are instead summed for each minibatch", "final_sentence": "is set to false the losses are instead summed for each minibatch"}
{"comment_sentence_id": 1718, "class": "CategoricalIndex", "comment_sentence": "if the categories are not given here and also not in dtype , they", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if the categories are not given here and also not in dtype they", "final_sentence": "if the categories are not given here and also not in dtype they"}
{"comment_sentence_id": 4218, "class": "Adadelta", "comment_sentence": "of squared gradients default 09", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "of squared gradients default 09", "final_sentence": "of squared gradients default 09"}
{"comment_sentence_id": 1500, "class": "VCardSet", "comment_sentence": "add a lines to a vcard, ensuring vcard exists", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "add a lines to a vcard ensuring vcard exists", "final_sentence": "add a lines to a vcard ensuring vcard exists"}
{"comment_sentence_id": 602, "class": "MultiValueDict", "comment_sentence": "simon", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "simon", "final_sentence": "simon"}
{"comment_sentence_id": 1287, "class": "ConfigDict", "comment_sentence": "values of the type specified.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "values of the type specified", "final_sentence": "values of the type specified"}
{"comment_sentence_id": 1295, "class": "ConfigDict", "comment_sentence": "vodka liters , int, 12", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "vodka liters int 12", "final_sentence": "vodka liters int 12"}
{"comment_sentence_id": 4376, "class": "BatchNorm1d", "comment_sentence": "math n, c, l or math l from input of size math n, l", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "math n c l or math l from input of size math n l", "final_sentence": "math n c l or math l from input of size math n l"}
{"comment_sentence_id": 4162, "class": "_OpNamespace", "comment_sentence": "3", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 5342, "class": "MultiLabelMarginLoss", "comment_sentence": "if the field attr size average", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 5561, "class": "StackedLSTMWithDropout", "comment_sentence": "necessary for iterating through self^layers and dropout support", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "necessary for iterating through self layers and dropout support", "final_sentence": "necessary for iterating through self layers and dropout support"}
{"comment_sentence_id": 3516, "class": "ParseResults", "comment_sentence": "integer^setresultsname month", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "integer setresultsname month", "final_sentence": "integer setresultsname month"}
{"comment_sentence_id": 5939, "class": "PreparedRequest", "comment_sentence": "r req^prepare", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "r req prepare", "final_sentence": "r req prepare"}
{"comment_sentence_id": 2447, "class": "CaseInsensitiveDict", "comment_sentence": "case of the last key to be set, and iter instance ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "case of the last key to be set and iter instance", "final_sentence": "case of the last key to be set and iter instance"}
{"comment_sentence_id": 1496, "class": "Util", "comment_sentence": "utility functions for builds", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "utility functions for builds", "final_sentence": "utility functions for builds"}
{"comment_sentence_id": 5325, "class": "MultiLabelMarginLoss", "comment_sentence": "for each sample in the mini batch", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for each sample in the mini batch", "final_sentence": "for each sample in the mini batch"}
{"comment_sentence_id": 3084, "class": "Markup", "comment_sentence": "markup hello &lt em&gt world&lt em&gt !", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "markup hello lt em gt world lt em gt", "final_sentence": "markup hello lt em gt world lt em gt"}
{"comment_sentence_id": 292, "class": "ConsoleDirective", "comment_sentence": "a restructuredtext directive which renders a two tab code block in which", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a restructuredtext directive which renders a two tab code block in which", "final_sentence": "a restructuredtext directive which renders a two tab code block in which"}
{"comment_sentence_id": 2387, "class": "And", "comment_sentence": "example", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5350, "class": "MultiLabelMarginLoss", "comment_sentence": "on attr size average .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "on attr size average", "final_sentence": "on attr size average"}
{"comment_sentence_id": 19, "class": "Atomic", "comment_sentence": "decorated function in the instance itself, used as a context manager.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "decorated function in the instance itself used as a context manager", "final_sentence": "decorated function in the instance itself used as a context manager"}
{"comment_sentence_id": 1313, "class": "ConfigDict", "comment_sentence": "pot colors ^append red", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot colors append red", "final_sentence": "pot colors append red"}
{"comment_sentence_id": 2500, "class": "Context_", "comment_sentence": "creating instances is neither supported nor useful as it s created", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "creating instances is neither supported nor useful as it s created", "final_sentence": "creating instances is neither supported nor useful as it s created"}
{"comment_sentence_id": 1177, "class": "UserMagics", "comment_sentence": "their own class.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "their own class", "final_sentence": "their own class"}
{"comment_sentence_id": 3296, "class": "NotMyLock", "comment_sentence": "raise notmylock", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "raise notmylock", "final_sentence": "raise notmylock"}
{"comment_sentence_id": 1317, "class": "ConfigDict", "comment_sentence": "red , blue , red , red", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "red blue red red", "final_sentence": "red blue red red"}
{"comment_sentence_id": 4378, "class": "BatchNorm1d", "comment_sentence": "default 1e 5", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "default 1e 5", "final_sentence": "default 1e 5"}
{"comment_sentence_id": 4151, "class": "_OpNamespace", "comment_sentence": "following sequence of magic tricks will occur", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "following sequence of magic tricks will occur", "final_sentence": "following sequence of magic tricks will occur"}
{"comment_sentence_id": 1327, "class": "ConfigDict", "comment_sentence": "invalidkeyerror invalid key for config evil", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "invalidkeyerror invalid key for config evil", "final_sentence": "invalidkeyerror invalid key for config evil"}
{"comment_sentence_id": 329, "class": "Dumpdata", "comment_sentence": "tests for dumpdata management command.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "tests for dumpdata management command", "final_sentence": "tests for dumpdata management command"}
{"comment_sentence_id": 2817, "class": "fdspawn", "comment_sentence": "descriptor.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "descriptor", "final_sentence": "descriptor"}
{"comment_sentence_id": 1654, "class": "CategoricalDtype", "comment_sentence": "attributes", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 4166, "class": "_OpNamespace", "comment_sentence": "operation will already exist .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "operation will already exist", "final_sentence": "operation will already exist"}
{"comment_sentence_id": 3328, "class": "omdict", "comment_sentence": "key parameter has been added to these methods", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "key parameter has been added to these methods", "final_sentence": "key parameter has been added to these methods"}
{"comment_sentence_id": 2506, "class": "Context_", "comment_sentence": "template code only.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "template code only", "final_sentence": "template code only"}
{"comment_sentence_id": 5224, "class": "FisherSnedecor", "comment_sentence": "args", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 27, "class": "Atomic", "comment_sentence": "connection.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "connection", "final_sentence": "connection"}
{"comment_sentence_id": 106, "class": "BaseCommand", "comment_sentence": "3", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 4253, "class": "Adam", "comment_sentence": "on the convergence of adam and beyond", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "on the convergence of adam and beyond", "final_sentence": "on the convergence of adam and beyond"}
{"comment_sentence_id": 2069, "class": "PlotAccessor", "comment_sentence": "labels with right in the legend.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "labels with right in the legend", "final_sentence": "labels with right in the legend"}
{"comment_sentence_id": 1163, "class": "TermColors", "comment_sentence": "also defines a nocolor escape which is just the null", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "also defines a nocolor escape which is just the null", "final_sentence": "also defines a nocolor escape which is just the null"}
{"comment_sentence_id": 515, "class": "MigrationGraph", "comment_sentence": "for these instead, the code to load them in here should examine the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for these instead the code to load them in here should examine the", "final_sentence": "for these instead the code to load them in here should examine the"}
{"comment_sentence_id": 4159, "class": "_OpNamespace", "comment_sentence": "the my namespace object, which will retrieve the operation via", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the my namespace object which will retrieve the operation via", "final_sentence": "the my namespace object which will retrieve the operation via"}
{"comment_sentence_id": 120, "class": "BaseCommand", "comment_sentence": "specialized methods as needed.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "specialized methods as needed", "final_sentence": "specialized methods as needed"}
{"comment_sentence_id": 1554, "class": "AccessorCallableDocumenter", "comment_sentence": "callable accessors like series^plot", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "callable accessors like series plot", "final_sentence": "callable accessors like series plot"}
{"comment_sentence_id": 916, "class": "Audio", "comment_sentence": "parameters", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 29, "class": "Atomic", "comment_sentence": "this allows reentrancy even if the same atomicwrapper is reused.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "this allows reentrancy even if the same atomicwrapper is reused", "final_sentence": "this allows reentrancy even if the same atomicwrapper is reused"}
{"comment_sentence_id": 1285, "class": "ConfigDict", "comment_sentence": "rules in place of the default value.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "rules in place of the default value", "final_sentence": "rules in place of the default value"}
{"comment_sentence_id": 1112, "class": "Magics", "comment_sentence": "use the method decorators @line magic and @cell magic to decorate", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "use the method decorators @line magic and @cell magic to decorate", "final_sentence": "use the method decorators @line magic and @cell magic to decorate"}
{"comment_sentence_id": 520, "class": "MigrationGraph", "comment_sentence": "a node should be a tuple app path, migration name .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a node should be a tuple app path migration name", "final_sentence": "a node should be a tuple app path migration name"}
{"comment_sentence_id": 5890, "class": "UploadTaskGroupBuilder", "comment_sentence": "a simple class to upload checkpoints.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a simple class to upload checkpoints", "final_sentence": "a simple class to upload checkpoints"}
{"comment_sentence_id": 4298, "class": "AdaptiveMaxPool3d", "comment_sentence": "the number of output features is equal to the number of input planes.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "the number of output features is equal to the number of input planes", "final_sentence": "the number of output features is equal to the number of input planes"}
{"comment_sentence_id": 3322, "class": "omdict", "comment_sentence": "clear , copy , update , fromkeys , len", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "clear copy update fromkeys len", "final_sentence": "clear copy update fromkeys len"}
{"comment_sentence_id": 1600, "class": "BooleanArray", "comment_sentence": "returns", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 517, "class": "MigrationGraph", "comment_sentence": "or not present, it should ignore the replaced ones, load in just the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "or not present it should ignore the replaced ones load in just the", "final_sentence": "or not present it should ignore the replaced ones load in just the"}
{"comment_sentence_id": 2360, "class": "_BZ2Proxy", "comment_sentence": "a workaround for a limitation in bz2 module s bz2file", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a workaround for a limitation in bz2 module s bz2file", "final_sentence": "a workaround for a limitation in bz2 module s bz2file"}
{"comment_sentence_id": 592, "class": "MultiPartParser", "comment_sentence": "a rfc2388 multipart form data parser.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a rfc2388 multipart form data parser", "final_sentence": "a rfc2388 multipart form data parser"}
{"comment_sentence_id": 4244, "class": "Adam", "comment_sentence": "running averages of gradient and its square default 09, 0999", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "running averages of gradient and its square default 09 0999", "final_sentence": "running averages of gradient and its square default 09 0999"}
{"comment_sentence_id": 4239, "class": "Adam", "comment_sentence": "arguments", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 2391, "class": "And", "comment_sentence": "# more easily written as", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "more easily written as", "final_sentence": "more easily written as"}
{"comment_sentence_id": 552, "class": "MigrationLoader", "comment_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "any dependency pointers to the replaced migrations are re pointed to the", "final_sentence": "any dependency pointers to the replaced migrations are re pointed to the"}
{"comment_sentence_id": 94, "class": "BaseCommand", "comment_sentence": "if you are interested in overriding customizing various aspects of", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "if you are interested in overriding customizing various aspects of", "final_sentence": "if you are interested in overriding customizing various aspects of"}
{"comment_sentence_id": 2383, "class": "And", "comment_sentence": "expressions may be separated by whitespace.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "expressions may be separated by whitespace", "final_sentence": "expressions may be separated by whitespace"}
{"comment_sentence_id": 1161, "class": "TermColors", "comment_sentence": "this class defines the escape sequences for all the standard ansi?", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "this class defines the escape sequences for all the standard ansi", "final_sentence": "this class defines the escape sequences for all the standard ansi"}
{"comment_sentence_id": 4242, "class": "Adam", "comment_sentence": "lr float, optional learning rate default 1e 3", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "lr float optional learning rate default 1e 3", "final_sentence": "lr float optional learning rate default 1e 3"}
{"comment_sentence_id": 1060, "class": "GeoJSON", "comment_sentence": "scalar types none, number, string are not allowed, only dict containers.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "scalar types none number string are not allowed only dict containers", "final_sentence": "scalar types none number string are not allowed only dict containers"}
{"comment_sentence_id": 2418, "class": "BaseCommand_", "comment_sentence": "a cli command.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a cli command", "final_sentence": "a cli command"}
{"comment_sentence_id": 1070, "class": "HistoryAccessor", "comment_sentence": "ipython shells use", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "ipython shells use", "final_sentence": "ipython shells use"}
{"comment_sentence_id": 5492, "class": "QuantWrapper", "comment_sentence": "it observes the input tensor, after convert , quantstub", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "it observes the input tensor after convert quantstub", "final_sentence": "it observes the input tensor after convert quantstub"}
{"comment_sentence_id": 62, "class": "AutoFieldMeta", "comment_sentence": "metaclass to maintain backward inheritance compatibility for autofield.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "metaclass to maintain backward inheritance compatibility for autofield", "final_sentence": "metaclass to maintain backward inheritance compatibility for autofield"}
{"comment_sentence_id": 4238, "class": "Adam", "comment_sentence": "it has been proposed in adam a method for stochastic optimization .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "it has been proposed in adam a method for stochastic optimization", "final_sentence": "it has been proposed in adam a method for stochastic optimization"}
{"comment_sentence_id": 3318, "class": "omdict", "comment_sentence": "object can be replaced with an omdict object and all interaction will", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "object can be replaced with an omdict object and all interaction will", "final_sentence": "object can be replaced with an omdict object and all interaction will"}
{"comment_sentence_id": 2090, "class": "PlotAccessor", "comment_sentence": "from 0 left bottom end to 1 right top end .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "from 0 left bottom end to 1 right top end", "final_sentence": "from 0 left bottom end to 1 right top end"}
{"comment_sentence_id": 3477, "class": "PacifyFlushWrapper", "comment_sentence": "other cleanup code, and the case where the underlying file is not a broken", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "other cleanup code and the case where the underlying file is not a broken", "final_sentence": "other cleanup code and the case where the underlying file is not a broken"}
{"comment_sentence_id": 2931, "class": "HashMissing", "comment_sentence": "a hash was needed for a requirement but is absent.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "a hash was needed for a requirement but is absent", "final_sentence": "a hash was needed for a requirement but is absent"}
{"comment_sentence_id": 601, "class": "MultiValueDict", "comment_sentence": "d name", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "d name", "final_sentence": "d name"}
{"comment_sentence_id": 5213, "class": "ExternalInitializer", "comment_sentence": "executed.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "executed", "final_sentence": "executed"}
{"comment_sentence_id": 4116, "class": "TreeBuilder", "comment_sentence": "base treebuilder implementation", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "base treebuilder implementation", "final_sentence": "base treebuilder implementation"}
{"comment_sentence_id": 3475, "class": "PacifyFlushWrapper", "comment_sentence": "sys^stdout and sys^stderr .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "sys stdout and sys stderr", "final_sentence": "sys stdout and sys stderr"}
{"comment_sentence_id": 23, "class": "Atomic", "comment_sentence": "and rolls back the transaction or to the savepoint on exceptions.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "and rolls back the transaction or to the savepoint on exceptions", "final_sentence": "and rolls back the transaction or to the savepoint on exceptions"}
{"comment_sentence_id": 4356, "class": "BatchNorm1d", "comment_sentence": "also by default, during training this layer keeps running estimates of its", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "also by default during training this layer keeps running estimates of its", "final_sentence": "also by default during training this layer keeps running estimates of its"}
{"comment_sentence_id": 2081, "class": "PlotAccessor", "comment_sentence": "options to pass to matplotlib plotting method.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "options to pass to matplotlib plotting method", "final_sentence": "options to pass to matplotlib plotting method"}
{"comment_sentence_id": 588, "class": "ModelSignal", "comment_sentence": "signal subclass that allows the sender to be lazily specified as a string", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "signal subclass that allows the sender to be lazily specified as a string", "final_sentence": "signal subclass that allows the sender to be lazily specified as a string"}
{"comment_sentence_id": 2087, "class": "PlotAccessor", "comment_sentence": "see matplotlib documentation online for more on this subject", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "see matplotlib documentation online for more on this subject", "final_sentence": "see matplotlib documentation online for more on this subject"}
{"comment_sentence_id": 3320, "class": "omdict", "comment_sentence": "all dict methods that retain parity with omdict are", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "all dict methods that retain parity with omdict are", "final_sentence": "all dict methods that retain parity with omdict are"}
{"comment_sentence_id": 1146, "class": "Struct", "comment_sentence": "style access.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "style access", "final_sentence": "style access"}
{"comment_sentence_id": 2067, "class": "PlotAccessor", "comment_sentence": "mark right bool, default true", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "mark right bool default true", "final_sentence": "mark right bool default true"}
{"comment_sentence_id": 4106, "class": "TarFile", "comment_sentence": "the tarfile class provides an interface to tar archives.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "the tarfile class provides an interface to tar archives", "final_sentence": "the tarfile class provides an interface to tar archives"}
{"comment_sentence_id": 1116, "class": "Magics", "comment_sentence": "initialization.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "initialization", "final_sentence": "initialization"}
{"comment_sentence_id": 1114, "class": "Magics", "comment_sentence": "use the class decorator @magics class to ensure that the magic", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "use the class decorator @magics class to ensure that the magic", "final_sentence": "use the class decorator @magics class to ensure that the magic"}
{"comment_sentence_id": 50, "class": "AtomicTests", "comment_sentence": "tests for the atomic decorator and context manager.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "tests for the atomic decorator and context manager", "final_sentence": "tests for the atomic decorator and context manager"}
{"comment_sentence_id": 4886, "class": "CyclicLR", "comment_sentence": "rate between two boundaries with a constant frequency, as detailed in", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "rate between two boundaries with a constant frequency as detailed in", "final_sentence": "rate between two boundaries with a constant frequency as detailed in"}
{"comment_sentence_id": 918, "class": "Audio", "comment_sentence": "can be one of", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "can be one of", "final_sentence": "can be one of"}
{"comment_sentence_id": 1322, "class": "ConfigDict", "comment_sentence": "pot tags ^append z invalid", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "pot tags append z invalid", "final_sentence": "pot tags append z invalid"}
{"comment_sentence_id": 5376, "class": "MultiLabelMarginLoss", "comment_sentence": "tensor 08500", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "tensor 08500", "final_sentence": "tensor 08500"}
{"comment_sentence_id": 4251, "class": "Adam", "comment_sentence": "adam a method for stochastic optimization", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "adam a method for stochastic optimization", "final_sentence": "adam a method for stochastic optimization"}
{"comment_sentence_id": 5123, "class": "EmbeddingBag", "comment_sentence": "tensor 08861, 54350, 00523 ,", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "tensor 08861 54350 00523", "final_sentence": "tensor 08861 54350 00523"}
{"comment_sentence_id": 2571, "class": "Environment", "comment_sentence": "instances of this class may be modified if", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "instances of this class may be modified if", "final_sentence": "instances of this class may be modified if"}
{"comment_sentence_id": 5260, "class": "LBFGS", "comment_sentence": "default 20", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "default 20", "final_sentence": "default 20"}
{"comment_sentence_id": 3312, "class": "omdict", "comment_sentence": "dictionary, self.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "dictionary self", "final_sentence": "dictionary self"}
{"comment_sentence_id": 582, "class": "MigrationWriter", "comment_sentence": "take a migration instance and is able to produce the contents", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "take a migration instance and is able to produce the contents", "final_sentence": "take a migration instance and is able to produce the contents"}
{"comment_sentence_id": 55, "class": "AtomicTests", "comment_sentence": "syntax and the bulk of the tests use the context manager syntax.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "syntax and the bulk of the tests use the context manager syntax", "final_sentence": "syntax and the bulk of the tests use the context manager syntax"}
{"comment_sentence_id": 1, "class": "AccessMixin", "comment_sentence": "abstract cbv mixin that gives access mixins the same customizable", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "abstract cbv mixin that gives access mixins the same customizable", "final_sentence": "abstract cbv mixin that gives access mixins the same customizable"}
{"comment_sentence_id": 1656, "class": "CategoricalDtype", "comment_sentence": "ordered", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "ordered", "final_sentence": "ordered"}
{"comment_sentence_id": 1670, "class": "CategoricalDtype", "comment_sentence": "1 b", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "1 b", "final_sentence": "1 b"}
{"comment_sentence_id": 68, "class": "AutoFieldMeta", "comment_sentence": "a new flag needs", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "a new flag needs", "final_sentence": "a new flag needs"}
{"comment_sentence_id": 5450, "class": "OneHotCategorical", "comment_sentence": "probs tensor event probabilities", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "probs tensor event probabilities", "final_sentence": "probs tensor event probabilities"}
{"comment_sentence_id": 4300, "class": "AdaptiveMaxPool3d", "comment_sentence": "output size the target output size of the image of the form d x h x w.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "output size the target output size of the image of the form d x h x w", "final_sentence": "output size the target output size of the image of the form d x h x w"}
{"comment_sentence_id": 1148, "class": "Struct", "comment_sentence": "intelligent merging.", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "intelligent merging", "final_sentence": "intelligent merging"}
{"comment_sentence_id": 2049, "class": "PlotAccessor", "comment_sentence": "colorbar bool, optional", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "colorbar bool optional", "final_sentence": "colorbar bool optional"}
{"comment_sentence_id": 4142, "class": "ZipResourceFinder", "comment_sentence": "resource finder for resources in ^zip files.", "partition": 1, "instance_type": 1, "category": "Summary", "pre_sentence": "resource finder for resources in zip files", "final_sentence": "resource finder for resources in zip files"}
{"comment_sentence_id": 5495, "class": "QuantWrapper", "comment_sentence": "for dequantstub .", "partition": 1, "instance_type": 0, "category": "Summary", "pre_sentence": "for dequantstub", "final_sentence": "for dequantstub"}

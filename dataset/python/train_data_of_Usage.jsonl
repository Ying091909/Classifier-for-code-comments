{"comment_sentence_id": 1666, "class": "CategoricalDtype", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 3532, "class": "ParseResults", "comment_sentence": "list result 1999 , , 12 , , 31", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "list result 1999 12 31", "final_sentence": "list result 1999 12 31"}
{"comment_sentence_id": 2276, "class": "StringArray", "comment_sentence": "stringarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "stringarray", "final_sentence": "stringarray"}
{"comment_sentence_id": 1306, "class": "ConfigDict", "comment_sentence": "123", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 3810, "class": "Retry", "comment_sentence": "retries retry connect 5, read 2, redirect 5", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "retries retry connect 5 read 2 redirect 5", "final_sentence": "retries retry connect 5 read 2 redirect 5"}
{"comment_sentence_id": 5429, "class": "NetModifier", "comment_sentence": "example usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example usage", "final_sentence": "example usage"}
{"comment_sentence_id": 101, "class": "BaseCommand", "comment_sentence": "the run from argv method calls create parser to get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the run from argv method calls create parser to get", "final_sentence": "the run from argv method calls create parser to get"}
{"comment_sentence_id": 1520, "class": "VCardStore", "comment_sentence": "vcs^get vcard d@evil^com is none", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs get vcard d@evil com is none", "final_sentence": "vcs get vcard d@evil com is none"}
{"comment_sentence_id": 5770, "class": "Unfold", "comment_sentence": "inp torch^randn 1, 3, 10, 12", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "inp torch randn 1 3 10 12", "final_sentence": "inp torch randn 1 3 10 12"}
{"comment_sentence_id": 5607, "class": "Task", "comment_sentence": "of the task have finished.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "of the task have finished", "final_sentence": "of the task have finished"}
{"comment_sentence_id": 1901, "class": "IntegerArray", "comment_sentence": "int array", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "int array", "final_sentence": "int array"}
{"comment_sentence_id": 1483, "class": "StorageBackedLongs", "comment_sentence": "sbl^save", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sbl save", "final_sentence": "sbl save"}
{"comment_sentence_id": 4035, "class": "SkipTo", "comment_sentence": "string data skipto sep, ignore quotedstring", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "string data skipto sep ignore quotedstring", "final_sentence": "string data skipto sep ignore quotedstring"}
{"comment_sentence_id": 3509, "class": "ParseResults", "comment_sentence": "as a list len results", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "as a list len results", "final_sentence": "as a list len results"}
{"comment_sentence_id": 1192, "class": "YouTubeVideo", "comment_sentence": "display vid", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "display vid", "final_sentence": "display vid"}
{"comment_sentence_id": 5659, "class": "TransformerEncoderLayer", "comment_sentence": "encoder layer nn^transformerencoderlayer d model 512, nhead 8", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "encoder layer nn transformerencoderlayer d model 512 nhead 8", "final_sentence": "encoder layer nn transformerencoderlayer d model 512 nhead 8"}
{"comment_sentence_id": 5471, "class": "Poisson", "comment_sentence": "tensor 3.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 3", "final_sentence": "tensor 3"}
{"comment_sentence_id": 1507, "class": "VCardStore", "comment_sentence": "vcs^add vcards mailpilevcard vcardline fn dude ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs add vcards mailpilevcard vcardline fn dude", "final_sentence": "vcs add vcards mailpilevcard vcardline fn dude"}
{"comment_sentence_id": 3997, "class": "Session", "comment_sentence": "or as a context manager", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "or as a context manager", "final_sentence": "or as a context manager"}
{"comment_sentence_id": 4050, "class": "SkipTo", "comment_sentence": "days open 14", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "days open 14", "final_sentence": "days open 14"}
{"comment_sentence_id": 5221, "class": "FisherSnedecor", "comment_sentence": "m fishersnedecor torch^tensor 10 , torch^tensor 20", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m fishersnedecor torch tensor 10 torch tensor 20", "final_sentence": "m fishersnedecor torch tensor 10 torch tensor 20"}
{"comment_sentence_id": 3324, "class": "omdict", "comment_sentence": "items , keys , values , iteritems , iterkeys , itervalues ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "items keys values iteritems iterkeys itervalues", "final_sentence": "items keys values iteritems iterkeys itervalues"}
{"comment_sentence_id": 3748, "class": "Request", "comment_sentence": "usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 26, "class": "Atomic", "comment_sentence": "a stack of savepoints identifiers is maintained as an attribute of the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "a stack of savepoints identifiers is maintained as an attribute of the", "final_sentence": "a stack of savepoints identifiers is maintained as an attribute of the"}
{"comment_sentence_id": 5598, "class": "Task", "comment_sentence": "ops^copy globl, local", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ops copy globl local", "final_sentence": "ops copy globl local"}
{"comment_sentence_id": 2274, "class": "StringArray", "comment_sentence": "pd^array this is , some text , none, data.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd array this is some text none data", "final_sentence": "pd array this is some text none data"}
{"comment_sentence_id": 5213, "class": "ExternalInitializer", "comment_sentence": "executed.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "executed", "final_sentence": "executed"}
{"comment_sentence_id": 5569, "class": "StackTransform", "comment_sentence": "y t x", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "y t x", "final_sentence": "y t x"}
{"comment_sentence_id": 2452, "class": "CaseInsensitiveDict", "comment_sentence": "cid caseinsensitivedict", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "cid caseinsensitivedict", "final_sentence": "cid caseinsensitivedict"}
{"comment_sentence_id": 486, "class": "Migration", "comment_sentence": "dependencies a list of tuples of app path, migration name", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "dependencies a list of tuples of app path migration name", "final_sentence": "dependencies a list of tuples of app path migration name"}
{"comment_sentence_id": 3541, "class": "ParseResults", "comment_sentence": "year 1999", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "year 1999", "final_sentence": "year 1999"}
{"comment_sentence_id": 2508, "class": "Context_", "comment_sentence": "func contextfunction s get the active context passed as first argument", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "func contextfunction s get the active context passed as first argument", "final_sentence": "func contextfunction s get the active context passed as first argument"}
{"comment_sentence_id": 1226, "class": "_MockPOP3", "comment_sentence": "true, false", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "true false", "final_sentence": "true false"}
{"comment_sentence_id": 488, "class": "Migration", "comment_sentence": "replaces a list of migration names", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "replaces a list of migration names", "final_sentence": "replaces a list of migration names"}
{"comment_sentence_id": 1914, "class": "IntegerArray", "comment_sentence": "length 3, dtype uint16", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "length 3 dtype uint16", "final_sentence": "length 3 dtype uint16"}
{"comment_sentence_id": 2851, "class": "FileSystemLoader", "comment_sentence": "the loader takes the path to the templates as string, or if multiple", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the loader takes the path to the templates as string or if multiple", "final_sentence": "the loader takes the path to the templates as string or if multiple"}
{"comment_sentence_id": 895, "class": "XFrameOptionsMiddleware", "comment_sentence": "by default, set the x frame options header to sameorigin , meaning the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by default set the x frame options header to sameorigin meaning the", "final_sentence": "by default set the x frame options header to sameorigin meaning the"}
{"comment_sentence_id": 1605, "class": "BooleanArray", "comment_sentence": "booleanarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 3523, "class": "ParseResults", "comment_sentence": "print %s %s % s, fn eval s", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "print s s s fn eval s", "final_sentence": "print s s s fn eval s"}
{"comment_sentence_id": 3182, "class": "MemcachedBytecodeCache", "comment_sentence": "if timeout is not provided", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if timeout is not provided", "final_sentence": "if timeout is not provided"}
{"comment_sentence_id": 4318, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 3335, "class": "omdict", "comment_sentence": "the new omdict methods are", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the new omdict methods are", "final_sentence": "the new omdict methods are"}
{"comment_sentence_id": 1069, "class": "HistoryAccessor", "comment_sentence": "this is intended for use by standalone history tools.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this is intended for use by standalone history tools", "final_sentence": "this is intended for use by standalone history tools"}
{"comment_sentence_id": 3995, "class": "Session", "comment_sentence": "s^get https httpbin^org get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s get https httpbin org get", "final_sentence": "s get https httpbin org get"}
{"comment_sentence_id": 1227, "class": "_MockPOP3", "comment_sentence": "msg subject for msg in pm", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "msg subject for msg in pm", "final_sentence": "msg subject for msg in pm"}
{"comment_sentence_id": 3037, "class": "InvalidVersion", "comment_sentence": "an invalid version was found, users should refer to pep 440.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "an invalid version was found users should refer to pep 440", "final_sentence": "an invalid version was found users should refer to pep 440"}
{"comment_sentence_id": 28, "class": "Atomic", "comment_sentence": "none denotes the absence of a savepoint.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "none denotes the absence of a savepoint", "final_sentence": "none denotes the absence of a savepoint"}
{"comment_sentence_id": 5015, "class": "DiagonalTensor", "comment_sentence": "example in the numpy documentation.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example in the numpy documentation", "final_sentence": "example in the numpy documentation"}
{"comment_sentence_id": 755, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "comments genericrelation comment", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "comments genericrelation comment", "final_sentence": "comments genericrelation comment"}
{"comment_sentence_id": 1904, "class": "IntegerArray", "comment_sentence": "length 3, dtype int32", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "length 3 dtype int32", "final_sentence": "length 3 dtype int32"}
{"comment_sentence_id": 235, "class": "BoundWidget", "comment_sentence": "span class radio radio^tag span", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "span class radio radio tag span", "final_sentence": "span class radio radio tag span"}
{"comment_sentence_id": 4053, "class": "SkipTo", "comment_sentence": "sev cosmetic", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sev cosmetic", "final_sentence": "sev cosmetic"}
{"comment_sentence_id": 1229, "class": "_MockPOP3", "comment_sentence": "pm^get msg size evil , pm^get msg size good", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm get msg size evil pm get msg size good", "final_sentence": "pm get msg size evil pm get msg size good"}
{"comment_sentence_id": 3053, "class": "LockFailed", "comment_sentence": "try", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "try", "final_sentence": "try"}
{"comment_sentence_id": 609, "class": "MultiValueDict", "comment_sentence": "nonexistent", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "nonexistent", "final_sentence": "nonexistent"}
{"comment_sentence_id": 2940, "class": "HebrewProber", "comment_sentence": "with the scores of the two sbcharsetprobers to produce a final answer.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with the scores of the two sbcharsetprobers to produce a final answer", "final_sentence": "with the scores of the two sbcharsetprobers to produce a final answer"}
{"comment_sentence_id": 4311, "class": "AdaptiveMaxPool3d", "comment_sentence": "output m input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output m input", "final_sentence": "output m input"}
{"comment_sentence_id": 3704, "class": "PrefixLoader", "comment_sentence": "loader prefixloader", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loader prefixloader", "final_sentence": "loader prefixloader"}
{"comment_sentence_id": 4965, "class": "CyclicLR", "comment_sentence": "optimizer torch^optim.sgd model^parameters , lr 01, momentum 09", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09", "final_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09"}
{"comment_sentence_id": 4038, "class": "SkipTo", "comment_sentence": "string data sev sep", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "string data sev sep", "final_sentence": "string data sev sep"}
{"comment_sentence_id": 2409, "class": "Argument", "comment_sentence": "they generally", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "they generally", "final_sentence": "they generally"}
{"comment_sentence_id": 3530, "class": "ParseResults", "comment_sentence": "test result^dump , str", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test result dump str", "final_sentence": "test result dump str"}
{"comment_sentence_id": 3535, "class": "ParseResults", "comment_sentence": "result^day 31", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "result day 31", "final_sentence": "result day 31"}
{"comment_sentence_id": 1761, "class": "CategoricalIndex", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1319, "class": "ConfigDict", "comment_sentence": "0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "0", "final_sentence": "0"}
{"comment_sentence_id": 4310, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 8, 9, 10", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 1 64 8 9 10", "final_sentence": "input torch randn 1 64 8 9 10"}
{"comment_sentence_id": 4157, "class": "_OpNamespace", "comment_sentence": "2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 3269, "class": "NotAny", "comment_sentence": "# operation hierarchy, use infixnotation", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "operation hierarchy use infixnotation", "final_sentence": "operation hierarchy use infixnotation"}
{"comment_sentence_id": 602, "class": "MultiValueDict", "comment_sentence": "simon", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "simon", "final_sentence": "simon"}
{"comment_sentence_id": 2286, "class": "StringArray", "comment_sentence": "booleanarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "booleanarray", "final_sentence": "booleanarray"}
{"comment_sentence_id": 4795, "class": "Conv3d", "comment_sentence": "# non square kernels and unequal stride and with padding", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "non square kernels and unequal stride and with padding", "final_sentence": "non square kernels and unequal stride and with padding"}
{"comment_sentence_id": 1762, "class": "CategoricalIndex", "comment_sentence": "pd^categoricalindex a , b , c , a , b , c", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd categoricalindex a b c a b c", "final_sentence": "pd categoricalindex a b c a b c"}
{"comment_sentence_id": 1902, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 237, "class": "BoundWidget", "comment_sentence": "% endfor %", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "endfor", "final_sentence": "endfor"}
{"comment_sentence_id": 959, "class": "Audio", "comment_sentence": "framerate 44100", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "framerate 44100", "final_sentence": "framerate 44100"}
{"comment_sentence_id": 1288, "class": "ConfigDict", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 3188, "class": "MemcachedBytecodeCache", "comment_sentence": "if the item does not", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if the item does not", "final_sentence": "if the item does not"}
{"comment_sentence_id": 1505, "class": "VCardStore", "comment_sentence": "this will", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this will", "final_sentence": "this will"}
{"comment_sentence_id": 4045, "class": "SkipTo", "comment_sentence": "days open 6", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "days open 6", "final_sentence": "days open 6"}
{"comment_sentence_id": 1329, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 4964, "class": "CyclicLR", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 896, "class": "XFrameOptionsMiddleware", "comment_sentence": "response can only be loaded on a frame within the same site.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response can only be loaded on a frame within the same site", "final_sentence": "response can only be loaded on a frame within the same site"}
{"comment_sentence_id": 3331, "class": "omdict", "comment_sentence": "methods with list in their", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "methods with list in their", "final_sentence": "methods with list in their"}
{"comment_sentence_id": 1907, "class": "IntegerArray", "comment_sentence": "pd^array 1, none, 3 , dtype int32", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd array 1 none 3 dtype int32", "final_sentence": "pd array 1 none 3 dtype int32"}
{"comment_sentence_id": 1340, "class": "ConfigDict", "comment_sentence": "isinstance pot liquids , configdict", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "isinstance pot liquids configdict", "final_sentence": "isinstance pot liquids configdict"}
{"comment_sentence_id": 4049, "class": "SkipTo", "comment_sentence": "94 , cosmetic , spelling error on login log n , 14", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "94 cosmetic spelling error on login log n 14", "final_sentence": "94 cosmetic spelling error on login log n 14"}
{"comment_sentence_id": 3520, "class": "ParseResults", "comment_sentence": "# parsestring returns a parseresults object", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "parsestring returns a parseresults object", "final_sentence": "parsestring returns a parseresults object"}
{"comment_sentence_id": 107, "class": "BaseCommand", "comment_sentence": "the execute method attempts to carry out the command by", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the execute method attempts to carry out the command by", "final_sentence": "the execute method attempts to carry out the command by"}
{"comment_sentence_id": 5293, "class": "Module", "comment_sentence": "import torch^nn.functional as f", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "import torch nn functional as f", "final_sentence": "import torch nn functional as f"}
{"comment_sentence_id": 5894, "class": "UseOptimizer", "comment_sentence": "with useoptimizer optim", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with useoptimizer optim", "final_sentence": "with useoptimizer optim"}
{"comment_sentence_id": 3339, "class": "omdict", "comment_sentence": "allitems , allkeys , allvalues , lists , listitems ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "allitems allkeys allvalues lists listitems", "final_sentence": "allitems allkeys allvalues lists listitems"}
{"comment_sentence_id": 1480, "class": "StorageBackedLongs", "comment_sentence": "1 in sbl", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1 in sbl", "final_sentence": "1 in sbl"}
{"comment_sentence_id": 5597, "class": "Task", "comment_sentence": "with ops^loop 100", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with ops loop 100", "final_sentence": "with ops loop 100"}
{"comment_sentence_id": 1304, "class": "ConfigDict", "comment_sentence": "123", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 1481, "class": "StorageBackedLongs", "comment_sentence": "TRUE", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 3707, "class": "PrefixLoader", "comment_sentence": "by loading app1 index^html the file from the app1 package is loaded,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by loading app1 index html the file from the app1 package is loaded", "final_sentence": "by loading app1 index html the file from the app1 package is loaded"}
{"comment_sentence_id": 3521, "class": "ParseResults", "comment_sentence": "result date str^parsestring 1999 12 31", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "result date str parsestring 1999 12 31", "final_sentence": "result date str parsestring 1999 12 31"}
{"comment_sentence_id": 5893, "class": "UseOptimizer", "comment_sentence": "example usage with brew", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example usage with brew", "final_sentence": "example usage with brew"}
{"comment_sentence_id": 5373, "class": "MultiLabelMarginLoss", "comment_sentence": "y torch^longtensor 3, 0, 1, 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "y torch longtensor 3 0 1 1", "final_sentence": "y torch longtensor 3 0 1 1"}
{"comment_sentence_id": 5117, "class": "EmbeddingBag", "comment_sentence": "# an embedding module containing 10 tensors of size 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "an embedding module containing 10 tensors of size 3", "final_sentence": "an embedding module containing 10 tensors of size 3"}
{"comment_sentence_id": 4159, "class": "_OpNamespace", "comment_sentence": "the my namespace object, which will retrieve the operation via", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the my namespace object which will retrieve the operation via", "final_sentence": "the my namespace object which will retrieve the operation via"}
{"comment_sentence_id": 1222, "class": "_MockPOP3", "comment_sentence": "2, 123456", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "2 123456", "final_sentence": "2 123456"}
{"comment_sentence_id": 233, "class": "BoundWidget", "comment_sentence": "label for radio^id for label", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "label for radio id for label", "final_sentence": "label for radio id for label"}
{"comment_sentence_id": 5371, "class": "MultiLabelMarginLoss", "comment_sentence": "x torch^floattensor 01, 02, 04, 08", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "x torch floattensor 01 02 04 08", "final_sentence": "x torch floattensor 01 02 04 08"}
{"comment_sentence_id": 3267, "class": "NotAny", "comment_sentence": "boolean term optional not ident", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "boolean term optional not ident", "final_sentence": "boolean term optional not ident"}
{"comment_sentence_id": 5599, "class": "Task", "comment_sentence": "with ops^task instance exit", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with ops task instance exit", "final_sentence": "with ops task instance exit"}
{"comment_sentence_id": 5519, "class": "SGD", "comment_sentence": "optimizer torch^optim.sgd model^parameters , lr 01, momentum 09", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09", "final_sentence": "optimizer torch optim sgd model parameters lr 01 momentum 09"}
{"comment_sentence_id": 483, "class": "Migration", "comment_sentence": "it will have one or more", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it will have one or more", "final_sentence": "it will have one or more"}
{"comment_sentence_id": 4969, "class": "CyclicLR", "comment_sentence": "for batch in data loader", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for batch in data loader", "final_sentence": "for batch in data loader"}
{"comment_sentence_id": 388, "class": "Individual", "comment_sentence": "corresponding raw id widget won t have a magnifying glass link to select", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "corresponding raw id widget won t have a magnifying glass link to select", "final_sentence": "corresponding raw id widget won t have a magnifying glass link to select"}
{"comment_sentence_id": 5940, "class": "PreparedRequest", "comment_sentence": "r", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "r", "final_sentence": "r"}
{"comment_sentence_id": 2457, "class": "CaseInsensitiveDict", "comment_sentence": "value of a content encoding response header, regardless", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "value of a content encoding response header regardless", "final_sentence": "value of a content encoding response header regardless"}
{"comment_sentence_id": 108, "class": "BaseCommand", "comment_sentence": "calling the handle method with the parsed arguments any", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "calling the handle method with the parsed arguments any", "final_sentence": "calling the handle method with the parsed arguments any"}
{"comment_sentence_id": 4501, "class": "BCEWithLogitsLoss", "comment_sentence": "criterion output, target # log sigmoid 0999", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "criterion output target log sigmoid 0999", "final_sentence": "criterion output target log sigmoid 0999"}
{"comment_sentence_id": 3340, "class": "omdict", "comment_sentence": "iterallitems , iterallkeys , iterallvalues , iterlists ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "iterallitems iterallkeys iterallvalues iterlists", "final_sentence": "iterallitems iterallkeys iterallvalues iterlists"}
{"comment_sentence_id": 1323, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 600, "class": "MultiValueDict", "comment_sentence": "d multivaluedict name adrian , simon , position developer", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "d multivaluedict name adrian simon position developer", "final_sentence": "d multivaluedict name adrian simon position developer"}
{"comment_sentence_id": 2411, "class": "Argument", "comment_sentence": "and are required by default.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "and are required by default", "final_sentence": "and are required by default"}
{"comment_sentence_id": 2328, "class": "StringMethods", "comment_sentence": "s^str.split", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s str split", "final_sentence": "s str split"}
{"comment_sentence_id": 898, "class": "XFrameOptionsMiddleware", "comment_sentence": "response from being loaded in a frame in any site, set x frame options in", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response from being loaded in a frame in any site set x frame options in", "final_sentence": "response from being loaded in a frame in any site set x frame options in"}
{"comment_sentence_id": 5014, "class": "DiagonalTensor", "comment_sentence": "it is based on the diagonalarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it is based on the diagonalarray", "final_sentence": "it is based on the diagonalarray"}
{"comment_sentence_id": 4794, "class": "Conv3d", "comment_sentence": "m nn^conv3d 16, 33, 3, stride 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn conv3d 16 33 3 stride 2", "final_sentence": "m nn conv3d 16 33 3 stride 2"}
{"comment_sentence_id": 1577, "class": "BooleanArray", "comment_sentence": "booleanarray implements kleene logic sometimes called three value", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "booleanarray implements kleene logic sometimes called three value", "final_sentence": "booleanarray implements kleene logic sometimes called three value"}
{"comment_sentence_id": 3524, "class": "ParseResults", "comment_sentence": "test list result", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test list result", "final_sentence": "test list result"}
{"comment_sentence_id": 608, "class": "MultiValueDict", "comment_sentence": "d^get lastname , nonexistent", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "d get lastname nonexistent", "final_sentence": "d get lastname nonexistent"}
{"comment_sentence_id": 5764, "class": "Unfold", "comment_sentence": "output unfold input", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output unfold input", "final_sentence": "output unfold input"}
{"comment_sentence_id": 5299, "class": "Module", "comment_sentence": "self^conv2 nn^conv2d 20, 20, 5", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "self conv2 nn conv2d 20 20 5", "final_sentence": "self conv2 nn conv2d 20 20 5"}
{"comment_sentence_id": 1771, "class": "CategoricalIndex", "comment_sentence": "ci", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ci", "final_sentence": "ci"}
{"comment_sentence_id": 4308, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 5x7x9", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "target output size of 5x7x9", "final_sentence": "target output size of 5x7x9"}
{"comment_sentence_id": 4026, "class": "SkipTo", "comment_sentence": "# severity description days open", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "severity description days open", "final_sentence": "severity description days open"}
{"comment_sentence_id": 3994, "class": "Session", "comment_sentence": "s requests^session", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s requests session", "final_sentence": "s requests session"}
{"comment_sentence_id": 4642, "class": "BuildType", "comment_sentence": "if cmakecache^txt does not exist,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if cmakecache txt does not exist", "final_sentence": "if cmakecache txt does not exist"}
{"comment_sentence_id": 5944, "class": "PreparedRequest", "comment_sentence": "response 200", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response 200", "final_sentence": "response 200"}
{"comment_sentence_id": 3097, "class": "Markup", "comment_sentence": "all methods escape their arguments and return a markup instance.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "all methods escape their arguments and return a markup instance", "final_sentence": "all methods escape their arguments and return a markup instance"}
{"comment_sentence_id": 5369, "class": "MultiLabelMarginLoss", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 4792, "class": "Conv3d", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 3271, "class": "NotAny", "comment_sentence": "# integers that are followed by .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integers that are followed by", "final_sentence": "integers that are followed by"}
{"comment_sentence_id": 4052, "class": "SkipTo", "comment_sentence": "issue num 94", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "issue num 94", "final_sentence": "issue num 94"}
{"comment_sentence_id": 2459, "class": "CaseInsensitiveDict", "comment_sentence": "if the constructor, ^update , or equality comparison", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if the constructor update or equality comparison", "final_sentence": "if the constructor update or equality comparison"}
{"comment_sentence_id": 4966, "class": "CyclicLR", "comment_sentence": "scheduler torch^optim.lr scheduler^cycliclr optimizer, base lr 001, max lr 01", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "scheduler torch optim lr scheduler cycliclr optimizer base lr 001 max lr 01", "final_sentence": "scheduler torch optim lr scheduler cycliclr optimizer base lr 001 max lr 01"}
{"comment_sentence_id": 1326, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 3999, "class": "Session", "comment_sentence": "s^get https httpbin^org get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "s get https httpbin org get", "final_sentence": "s get https httpbin org get"}
{"comment_sentence_id": 4533, "class": "BCEWithLogitsLoss", "comment_sentence": "pos weight tensor, optional a weight of positive examples.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pos weight tensor optional a weight of positive examples", "final_sentence": "pos weight tensor optional a weight of positive examples"}
{"comment_sentence_id": 1230, "class": "_MockPOP3", "comment_sentence": "47, 51", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "47 51", "final_sentence": "47 51"}
{"comment_sentence_id": 219, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "this is considered by many to be the most secure algorithm but you", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this is considered by many to be the most secure algorithm but you", "final_sentence": "this is considered by many to be the most secure algorithm but you"}
{"comment_sentence_id": 1187, "class": "YouTubeVideo", "comment_sentence": "do", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "do", "final_sentence": "do"}
{"comment_sentence_id": 1310, "class": "ConfigDict", "comment_sentence": "123", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 5595, "class": "Task", "comment_sentence": "with ops^task instance init", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with ops task instance init", "final_sentence": "with ops task instance init"}
{"comment_sentence_id": 4312, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x7x7 cube", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "target output size of 7x7x7 cube", "final_sentence": "target output size of 7x7x7 cube"}
{"comment_sentence_id": 4146, "class": "_OpNamespace", "comment_sentence": "to", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to", "final_sentence": "to"}
{"comment_sentence_id": 5296, "class": "Module", "comment_sentence": "super model, self .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "super model self", "final_sentence": "super model self"}
{"comment_sentence_id": 1986, "class": "PlotAccessor", "comment_sentence": "option plotting^backend .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "option plotting backend", "final_sentence": "option plotting backend"}
{"comment_sentence_id": 899, "class": "XFrameOptionsMiddleware", "comment_sentence": "your project s django settings to deny .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "your project s django settings to deny", "final_sentence": "your project s django settings to deny"}
{"comment_sentence_id": 5376, "class": "MultiLabelMarginLoss", "comment_sentence": "tensor 08500", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 08500", "final_sentence": "tensor 08500"}
{"comment_sentence_id": 5302, "class": "Module", "comment_sentence": "return f^relu self^conv2 x", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "return f relu self conv2 x", "final_sentence": "return f relu self conv2 x"}
{"comment_sentence_id": 3752, "class": "Request", "comment_sentence": "preparedrequest get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "preparedrequest get", "final_sentence": "preparedrequest get"}
{"comment_sentence_id": 4967, "class": "CyclicLR", "comment_sentence": "data loader torch^utils.data^dataloader .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "data loader torch utils data dataloader", "final_sentence": "data loader torch utils data dataloader"}
{"comment_sentence_id": 5124, "class": "EmbeddingBag", "comment_sentence": "11306, 25798, 10044", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "11306 25798 10044", "final_sentence": "11306 25798 10044"}
{"comment_sentence_id": 110, "class": "BaseCommand", "comment_sentence": "output and, if the command is intended to produce a block of", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output and if the command is intended to produce a block of", "final_sentence": "output and if the command is intended to produce a block of"}
{"comment_sentence_id": 5430, "class": "NetModifier", "comment_sentence": "modifier somenetmodifier opts", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "modifier somenetmodifier opts", "final_sentence": "modifier somenetmodifier opts"}
{"comment_sentence_id": 4313, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 7", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn adaptivemaxpool3d 7", "final_sentence": "m nn adaptivemaxpool3d 7"}
{"comment_sentence_id": 518, "class": "MigrationGraph", "comment_sentence": "replacing migration, and repoint any dependencies that pointed to the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "replacing migration and repoint any dependencies that pointed to the", "final_sentence": "replacing migration and repoint any dependencies that pointed to the"}
{"comment_sentence_id": 1522, "class": "VCardStore", "comment_sentence": "vcs^del vcards vcs^find vcards guy", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs del vcards vcs find vcards guy", "final_sentence": "vcs del vcards vcs find vcards guy"}
{"comment_sentence_id": 1510, "class": "VCardStore", "comment_sentence": "vcards can be looked up directly by e mail.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcards can be looked up directly by e mail", "final_sentence": "vcards can be looked up directly by e mail"}
{"comment_sentence_id": 3539, "class": "ParseResults", "comment_sentence": "day 31", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "day 31", "final_sentence": "day 31"}
{"comment_sentence_id": 1516, "class": "VCardStore", "comment_sentence": "vcs^find vcards guy 0 ^fn", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs find vcards guy 0 fn", "final_sentence": "vcs find vcards guy 0 fn"}
{"comment_sentence_id": 1338, "class": "ConfigDict", "comment_sentence": "how many potatoes?", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "how many potatoes", "final_sentence": "how many potatoes"}
{"comment_sentence_id": 2453, "class": "CaseInsensitiveDict", "comment_sentence": "cid accept application json", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "cid accept application json", "final_sentence": "cid accept application json"}
{"comment_sentence_id": 5116, "class": "EmbeddingBag", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1879, "class": "IntegerArray", "comment_sentence": "we represent an integerarray with 2 numpy arrays", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "we represent an integerarray with 2 numpy arrays", "final_sentence": "we represent an integerarray with 2 numpy arrays"}
{"comment_sentence_id": 114, "class": "BaseCommand", "comment_sentence": "commanderror , run from argv will instead print an error", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "commanderror run from argv will instead print an error", "final_sentence": "commanderror run from argv will instead print an error"}
{"comment_sentence_id": 1774, "class": "CategoricalIndex", "comment_sentence": "c", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "c", "final_sentence": "c"}
{"comment_sentence_id": 1485, "class": "StorageBackedLongs", "comment_sentence": "TRUE", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 5902, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 2885, "class": "FollowedBy", "comment_sentence": "name.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "name", "final_sentence": "name"}
{"comment_sentence_id": 5900, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 1219, "class": "_MockPOP3", "comment_sentence": "pm pop3mailbox localhost , user a , password b ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm pop3mailbox localhost user a password b", "final_sentence": "pm pop3mailbox localhost user a password b"}
{"comment_sentence_id": 756, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "post^comments is a reversegenericmanytoonedescriptor instance.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "post comments is a reversegenericmanytoonedescriptor instance", "final_sentence": "post comments is a reversegenericmanytoonedescriptor instance"}
{"comment_sentence_id": 5895, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 3514, "class": "ParseResults", "comment_sentence": "integer word nums", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer word nums", "final_sentence": "integer word nums"}
{"comment_sentence_id": 5223, "class": "FisherSnedecor", "comment_sentence": "tensor 02453", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 02453", "final_sentence": "tensor 02453"}
{"comment_sentence_id": 1336, "class": "ConfigDict", "comment_sentence": "configvalueerror invalid value for config colors 4 green", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "configvalueerror invalid value for config colors 4 green", "final_sentence": "configvalueerror invalid value for config colors 4 green"}
{"comment_sentence_id": 3992, "class": "Session", "comment_sentence": "basic usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "basic usage", "final_sentence": "basic usage"}
{"comment_sentence_id": 389, "class": "Individual", "comment_sentence": "related instances rendering will be called programmatically in this case .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "related instances rendering will be called programmatically in this case", "final_sentence": "related instances rendering will be called programmatically in this case"}
{"comment_sentence_id": 3705, "class": "PrefixLoader", "comment_sentence": "app1 packageloader mypackage^app1 ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "app1 packageloader mypackage app1", "final_sentence": "app1 packageloader mypackage app1"}
{"comment_sentence_id": 3079, "class": "Markup", "comment_sentence": "markup hello, em world em !", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "markup hello em world em", "final_sentence": "markup hello em world em"}
{"comment_sentence_id": 4043, "class": "SkipTo", "comment_sentence": "prints", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 3812, "class": "Retry", "comment_sentence": "response http^request get , http example^com", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response http request get http example com", "final_sentence": "response http request get http example com"}
{"comment_sentence_id": 1768, "class": "CategoricalIndex", "comment_sentence": "ordered categoricalindex can have a min and max value.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ordered categoricalindex can have a min and max value", "final_sentence": "ordered categoricalindex can have a min and max value"}
{"comment_sentence_id": 5370, "class": "MultiLabelMarginLoss", "comment_sentence": "loss nn^multilabelmarginloss", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "loss nn multilabelmarginloss", "final_sentence": "loss nn multilabelmarginloss"}
{"comment_sentence_id": 3508, "class": "ParseResults", "comment_sentence": "the parsed data", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the parsed data", "final_sentence": "the parsed data"}
{"comment_sentence_id": 236, "class": "BoundWidget", "comment_sentence": "label", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "label", "final_sentence": "label"}
{"comment_sentence_id": 5778, "class": "Unfold", "comment_sentence": "tensor 19073e 06", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 19073e 06", "final_sentence": "tensor 19073e 06"}
{"comment_sentence_id": 3337, "class": "omdict", "comment_sentence": "getlist , add , addlist , set , setlist , setdefaultlist ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "getlist add addlist set setlist setdefaultlist", "final_sentence": "getlist add addlist set setlist setdefaultlist"}
{"comment_sentence_id": 5684, "class": "Unfold", "comment_sentence": "and math represent arbitrary spatial dimensions.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "and math represent arbitrary spatial dimensions", "final_sentence": "and math represent arbitrary spatial dimensions"}
{"comment_sentence_id": 5466, "class": "Poisson", "comment_sentence": "math", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 691, "class": "Permission", "comment_sentence": "the permission system is used by the django admin site, but may also be", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the permission system is used by the django admin site but may also be", "final_sentence": "the permission system is used by the django admin site but may also be"}
{"comment_sentence_id": 694, "class": "Permission", "comment_sentence": "the add permission limits the user s ability to view the add form", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the add permission limits the user s ability to view the add form", "final_sentence": "the add permission limits the user s ability to view the add form"}
{"comment_sentence_id": 3089, "class": "Markup", "comment_sentence": "class foo", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "class foo", "final_sentence": "class foo"}
{"comment_sentence_id": 962, "class": "Audio", "comment_sentence": "audio data,rate framerate", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "audio data rate framerate", "final_sentence": "audio data rate framerate"}
{"comment_sentence_id": 1519, "class": "VCardStore", "comment_sentence": "vcs^del vcards vcs^get vcard d@evil^com", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs del vcards vcs get vcard d@evil com", "final_sentence": "vcs del vcards vcs get vcard d@evil com"}
{"comment_sentence_id": 1906, "class": "IntegerArray", "comment_sentence": "they are capitalized.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "they are capitalized", "final_sentence": "they are capitalized"}
{"comment_sentence_id": 115, "class": "BaseCommand", "comment_sentence": "message to stderr .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "message to stderr", "final_sentence": "message to stderr"}
{"comment_sentence_id": 693, "class": "Permission", "comment_sentence": "the django admin site uses permissions as follows", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the django admin site uses permissions as follows", "final_sentence": "the django admin site uses permissions as follows"}
{"comment_sentence_id": 1114, "class": "Magics", "comment_sentence": "use the class decorator @magics class to ensure that the magic", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "use the class decorator @magics class to ensure that the magic", "final_sentence": "use the class decorator @magics class to ensure that the magic"}
{"comment_sentence_id": 4150, "class": "_OpNamespace", "comment_sentence": "instead, the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "instead the", "final_sentence": "instead the"}
{"comment_sentence_id": 3517, "class": "ParseResults", "comment_sentence": "integer^setresultsname day", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer setresultsname day", "final_sentence": "integer setresultsname day"}
{"comment_sentence_id": 1478, "class": "StorageBackedLongs", "comment_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00", "final_sentence": "storage sbl x01 x00 x00 x00 x00 x00 x00 x00"}
{"comment_sentence_id": 4152, "class": "_OpNamespace", "comment_sentence": "1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1", "final_sentence": "1"}
{"comment_sentence_id": 1238, "class": "_MockPOP3", "comment_sentence": "keyerror .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "keyerror", "final_sentence": "keyerror"}
{"comment_sentence_id": 1236, "class": "_MockPOP3", "comment_sentence": "pm invalid key", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm invalid key", "final_sentence": "pm invalid key"}
{"comment_sentence_id": 2387, "class": "And", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1987, "class": "PlotAccessor", "comment_sentence": "by default, matplotlib is used.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by default matplotlib is used", "final_sentence": "by default matplotlib is used"}
{"comment_sentence_id": 1112, "class": "Magics", "comment_sentence": "use the method decorators @line magic and @cell magic to decorate", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "use the method decorators @line magic and @cell magic to decorate", "final_sentence": "use the method decorators @line magic and @cell magic to decorate"}
{"comment_sentence_id": 3750, "class": "Request", "comment_sentence": "req requests^request get , https httpbin^org get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "req requests request get https httpbin org get", "final_sentence": "req requests request get https httpbin org get"}
{"comment_sentence_id": 3511, "class": "ParseResults", "comment_sentence": "by attribute results.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by attribute results", "final_sentence": "by attribute results"}
{"comment_sentence_id": 3055, "class": "LockFailed", "comment_sentence": "except lockerror", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "except lockerror", "final_sentence": "except lockerror"}
{"comment_sentence_id": 1116, "class": "Magics", "comment_sentence": "initialization.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "initialization", "final_sentence": "initialization"}
{"comment_sentence_id": 1220, "class": "_MockPOP3", "comment_sentence": "conn cls mockpop3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "conn cls mockpop3", "final_sentence": "conn cls mockpop3"}
{"comment_sentence_id": 4499, "class": "BCEWithLogitsLoss", "comment_sentence": "pos weight torch^ones 64 # all weights are equal to 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pos weight torch ones 64 all weights are equal to 1", "final_sentence": "pos weight torch ones 64 all weights are equal to 1"}
{"comment_sentence_id": 1300, "class": "ConfigDict", "comment_sentence": "sorted pot^keys , sorted pot^values", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sorted pot keys sorted pot values", "final_sentence": "sorted pot keys sorted pot values"}
{"comment_sentence_id": 5606, "class": "Task", "comment_sentence": "the mul will only execute once, after all the instances", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the mul will only execute once after all the instances", "final_sentence": "the mul will only execute once after all the instances"}
{"comment_sentence_id": 3330, "class": "omdict", "comment_sentence": "new methods have also been added to omdict.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "new methods have also been added to omdict", "final_sentence": "new methods have also been added to omdict"}
{"comment_sentence_id": 1216, "class": "_MockPOP3", "comment_sentence": "pm pop3mailbox localhost , user bad , conn cls mockpop3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm pop3mailbox localhost user bad conn cls mockpop3", "final_sentence": "pm pop3mailbox localhost user bad conn cls mockpop3"}
{"comment_sentence_id": 2558, "class": "Distribution", "comment_sentence": "either way, it must have some metadata, so that s all that s needed", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "either way it must have some metadata so that s all that s needed", "final_sentence": "either way it must have some metadata so that s all that s needed"}
{"comment_sentence_id": 1292, "class": "ConfigDict", "comment_sentence": ", int, 99 ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "int 99", "final_sentence": "int 99"}
{"comment_sentence_id": 2506, "class": "Context_", "comment_sentence": "template code only.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "template code only", "final_sentence": "template code only"}
{"comment_sentence_id": 3804, "class": "ResponseNotChunked", "comment_sentence": "response needs to be chunked in order to read it as chunks.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "response needs to be chunked in order to read it as chunks", "final_sentence": "response needs to be chunked in order to read it as chunks"}
{"comment_sentence_id": 2858, "class": "FileSystemLoader", "comment_sentence": "to follow symbolic links, set the followlinks parameter to true", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to follow symbolic links set the followlinks parameter to true", "final_sentence": "to follow symbolic links set the followlinks parameter to true"}
{"comment_sentence_id": 4498, "class": "BCEWithLogitsLoss", "comment_sentence": "output torch^full 10, 64 , 0999 # a prediction logit", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output torch full 10 64 0999 a prediction logit", "final_sentence": "output torch full 10 64 0999 a prediction logit"}
{"comment_sentence_id": 3536, "class": "ParseResults", "comment_sentence": "month in result true", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "month in result true", "final_sentence": "month in result true"}
{"comment_sentence_id": 3512, "class": "ParseResults", "comment_sentence": "resultsname see class parserelement^setresultsname", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "resultsname see class parserelement setresultsname", "final_sentence": "resultsname see class parserelement setresultsname"}
{"comment_sentence_id": 4042, "class": "SkipTo", "comment_sentence": "print tkt^dump", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "print tkt dump", "final_sentence": "print tkt dump"}
{"comment_sentence_id": 966, "class": "Audio", "comment_sentence": "audio dataleft, dataright ,rate framerate", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "audio dataleft dataright rate framerate", "final_sentence": "audio dataleft dataright rate framerate"}
{"comment_sentence_id": 1913, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 1765, "class": "CategoricalIndex", "comment_sentence": "c pd^categorical a , b , c , a , b , c", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "c pd categorical a b c a b c", "final_sentence": "c pd categorical a b c a b c"}
{"comment_sentence_id": 5122, "class": "EmbeddingBag", "comment_sentence": "embedding sum input, offsets", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "embedding sum input offsets", "final_sentence": "embedding sum input offsets"}
{"comment_sentence_id": 5012, "class": "DiagonalTensor", "comment_sentence": "this class has limited utility and is mostly useful for verifying that the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this class has limited utility and is mostly useful for verifying that the", "final_sentence": "this class has limited utility and is mostly useful for verifying that the"}
{"comment_sentence_id": 2878, "class": "FollowedBy", "comment_sentence": "followedby does not advance the parsing position within", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "followedby does not advance the parsing position within", "final_sentence": "followedby does not advance the parsing position within"}
{"comment_sentence_id": 5013, "class": "DiagonalTensor", "comment_sentence": "dispatch mechanism works as expected.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "dispatch mechanism works as expected", "final_sentence": "dispatch mechanism works as expected"}
{"comment_sentence_id": 4031, "class": "SkipTo", "comment_sentence": "sep suppress", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sep suppress", "final_sentence": "sep suppress"}
{"comment_sentence_id": 1341, "class": "ConfigDict", "comment_sentence": "TRUE", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 3263, "class": "NotAny", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 1198, "class": "YouTubeVideo", "comment_sentence": "when converting the notebook using nbconvert, a jpeg representation of the video", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "when converting the notebook using nbconvert a jpeg representation of the video", "final_sentence": "when converting the notebook using nbconvert a jpeg representation of the video"}
{"comment_sentence_id": 1514, "class": "VCardStore", "comment_sentence": "TRUE", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "TRUE", "final_sentence": "TRUE"}
{"comment_sentence_id": 4546, "class": "BCEWithLogitsLoss", "comment_sentence": "output^backward", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output backward", "final_sentence": "output backward"}
{"comment_sentence_id": 1191, "class": "YouTubeVideo", "comment_sentence": "vid youtubevideo abc , start 30", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vid youtubevideo abc start 30", "final_sentence": "vid youtubevideo abc start 30"}
{"comment_sentence_id": 18, "class": "Atomic", "comment_sentence": "when it s used as a decorator, call wraps the execution of the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "when it s used as a decorator call wraps the execution of the", "final_sentence": "when it s used as a decorator call wraps the execution of the"}
{"comment_sentence_id": 3296, "class": "NotMyLock", "comment_sentence": "raise notmylock", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "raise notmylock", "final_sentence": "raise notmylock"}
{"comment_sentence_id": 3099, "class": "Markup", "comment_sentence": "markup em foo &amp bar em", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "markup em foo amp bar em", "final_sentence": "markup em foo amp bar em"}
{"comment_sentence_id": 5605, "class": "Task", "comment_sentence": "to globl once.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to globl once", "final_sentence": "to globl once"}
{"comment_sentence_id": 4482, "class": "BCEWithLogitsLoss", "comment_sentence": "it s possible to trade off recall and precision by adding weights to positive examples.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "it s possible to trade off recall and precision by adding weights to positive examples", "final_sentence": "it s possible to trade off recall and precision by adding weights to positive examples"}
{"comment_sentence_id": 1506, "class": "VCardStore", "comment_sentence": "# create a file for the card on disk, using a random name.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "create a file for the card on disk using a random name", "final_sentence": "create a file for the card on disk using a random name"}
{"comment_sentence_id": 1607, "class": "BooleanArray", "comment_sentence": "length 3, dtype boolean", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "length 3 dtype boolean", "final_sentence": "length 3 dtype boolean"}
{"comment_sentence_id": 2891, "class": "FollowedBy", "comment_sentence": "oneormore attr expr ^parsestring shape square color black posn upper left ^pprint", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "oneormore attr expr parsestring shape square color black posn upper left pprint", "final_sentence": "oneormore attr expr parsestring shape square color black posn upper left pprint"}
{"comment_sentence_id": 1674, "class": "CategoricalDtype", "comment_sentence": "categories 2, object b a", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "categories 2 object b a", "final_sentence": "categories 2 object b a"}
{"comment_sentence_id": 1339, "class": "ConfigDict", "comment_sentence": ", type int , 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "type int 0", "final_sentence": "type int 0"}
{"comment_sentence_id": 100, "class": "BaseCommand", "comment_sentence": "2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "2", "final_sentence": "2"}
{"comment_sentence_id": 2852, "class": "FileSystemLoader", "comment_sentence": "locations are wanted a list of them which is then looked up in the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "locations are wanted a list of them which is then looked up in the", "final_sentence": "locations are wanted a list of them which is then looked up in the"}
{"comment_sentence_id": 5566, "class": "StackTransform", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5689, "class": "Unfold", "comment_sentence": "math c times prod text kernel size is the total number of values", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "math c times prod text kernel size is the total number of values", "final_sentence": "math c times prod text kernel size is the total number of values"}
{"comment_sentence_id": 5700, "class": "Unfold", "comment_sentence": "gives all values within a certain block.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "gives all values within a certain block", "final_sentence": "gives all values within a certain block"}
{"comment_sentence_id": 4058, "class": "SkipTo", "comment_sentence": "sev minor", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sev minor", "final_sentence": "sev minor"}
{"comment_sentence_id": 1199, "class": "YouTubeVideo", "comment_sentence": "will be inserted in the document.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "will be inserted in the document", "final_sentence": "will be inserted in the document"}
{"comment_sentence_id": 5593, "class": "Task", "comment_sentence": "with ops^task init", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with ops task init", "final_sentence": "with ops task init"}
{"comment_sentence_id": 1231, "class": "_MockPOP3", "comment_sentence": "pm^get bytes evil", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm get bytes evil", "final_sentence": "pm get bytes evil"}
{"comment_sentence_id": 1218, "class": "_MockPOP3", "comment_sentence": "accesserror", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "accesserror", "final_sentence": "accesserror"}
{"comment_sentence_id": 3326, "class": "omdict", "comment_sentence": "added parameters are optional, existing use remains unaffected.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "added parameters are optional existing use remains unaffected", "final_sentence": "added parameters are optional existing use remains unaffected"}
{"comment_sentence_id": 974, "class": "Audio", "comment_sentence": "audio data b raw wav data.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "audio data b raw wav data", "final_sentence": "audio data b raw wav data"}
{"comment_sentence_id": 3701, "class": "PrefixLoader", "comment_sentence": "the prefix is delimited from the template by a slash per", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the prefix is delimited from the template by a slash per", "final_sentence": "the prefix is delimited from the template by a slash per"}
{"comment_sentence_id": 3525, "class": "ParseResults", "comment_sentence": "test result 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test result 0", "final_sentence": "test result 0"}
{"comment_sentence_id": 5301, "class": "Module", "comment_sentence": "x f^relu self^conv1 x", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "x f relu self conv1 x", "final_sentence": "x f relu self conv1 x"}
{"comment_sentence_id": 897, "class": "XFrameOptionsMiddleware", "comment_sentence": "to prevent the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to prevent the", "final_sentence": "to prevent the"}
{"comment_sentence_id": 5469, "class": "Poisson", "comment_sentence": "m poisson torch^tensor 4", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m poisson torch tensor 4", "final_sentence": "m poisson torch tensor 4"}
{"comment_sentence_id": 4051, "class": "SkipTo", "comment_sentence": "desc spelling error on login log n", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "desc spelling error on login log n", "final_sentence": "desc spelling error on login log n"}
{"comment_sentence_id": 1523, "class": "VCardStore", "comment_sentence": "vcs^find vcards guy", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs find vcards guy", "final_sentence": "vcs find vcards guy"}
{"comment_sentence_id": 4044, "class": "SkipTo", "comment_sentence": "101 , critical , intermittent system crash , 6", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "101 critical intermittent system crash 6", "final_sentence": "101 critical intermittent system crash 6"}
{"comment_sentence_id": 1302, "class": "ConfigDict", "comment_sentence": "pot potatoes pot liquids vodka 123", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pot potatoes pot liquids vodka 123", "final_sentence": "pot potatoes pot liquids vodka 123"}
{"comment_sentence_id": 2826, "class": "FileMetadata", "comment_sentence": "metadata filemetadata path to pkg info", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "metadata filemetadata path to pkg info", "final_sentence": "metadata filemetadata path to pkg info"}
{"comment_sentence_id": 696, "class": "Permission", "comment_sentence": "the change permission limits a user s ability to view the change", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the change permission limits a user s ability to view the change", "final_sentence": "the change permission limits a user s ability to view the change"}
{"comment_sentence_id": 1237, "class": "_MockPOP3", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1294, "class": "ConfigDict", "comment_sentence": "water liters , int, 0 ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "water liters int 0", "final_sentence": "water liters int 0"}
{"comment_sentence_id": 3176, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface for the client passed to the constructor is this", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the minimal interface for the client passed to the constructor is this", "final_sentence": "the minimal interface for the client passed to the constructor is this"}
{"comment_sentence_id": 5723, "class": "Unfold", "comment_sentence": "replicated across all spatial dimensions.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "replicated across all spatial dimensions", "final_sentence": "replicated across all spatial dimensions"}
{"comment_sentence_id": 1235, "class": "_MockPOP3", "comment_sentence": "from", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "from", "final_sentence": "from"}
{"comment_sentence_id": 2832, "class": "FileMetadata", "comment_sentence": "metadata filemetadata path to pkg info", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "metadata filemetadata path to pkg info", "final_sentence": "metadata filemetadata path to pkg info"}
{"comment_sentence_id": 4039, "class": "SkipTo", "comment_sentence": "string data desc sep", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "string data desc sep", "final_sentence": "string data desc sep"}
{"comment_sentence_id": 3273, "class": "NotAny", "comment_sentence": "integer word nums char .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer word nums char", "final_sentence": "integer word nums char"}
{"comment_sentence_id": 3338, "class": "omdict", "comment_sentence": "poplist , popvalue , popvalues , popitem , poplistitem ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "poplist popvalue popvalues popitem poplistitem", "final_sentence": "poplist popvalue popvalues popitem poplistitem"}
{"comment_sentence_id": 112, "class": "BaseCommand", "comment_sentence": "4", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "4", "final_sentence": "4"}
{"comment_sentence_id": 1217, "class": "_MockPOP3", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 2504, "class": "Context_", "comment_sentence": "modifications on attr parent must not", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "modifications on attr parent must not", "final_sentence": "modifications on attr parent must not"}
{"comment_sentence_id": 3083, "class": "Markup", "comment_sentence": "markup^escape hello, em world em !", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "markup escape hello em world em", "final_sentence": "markup escape hello em world em"}
{"comment_sentence_id": 232, "class": "BoundWidget", "comment_sentence": "% for radio in myform^beatles %", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for radio in myform beatles", "final_sentence": "for radio in myform beatles"}
{"comment_sentence_id": 4971, "class": "CyclicLR", "comment_sentence": "scheduler^step", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "scheduler step", "final_sentence": "scheduler step"}
{"comment_sentence_id": 1751, "class": "CategoricalIndex", "comment_sentence": "if an explicit ordered true is given but no categories and the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if an explicit ordered true is given but no categories and the", "final_sentence": "if an explicit ordered true is given but no categories and the"}
{"comment_sentence_id": 3528, "class": "ParseResults", "comment_sentence": "test month in result", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test month in result", "final_sentence": "test month in result"}
{"comment_sentence_id": 1668, "class": "CategoricalDtype", "comment_sentence": "pd^series a , b , a , c , dtype t", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd series a b a c dtype t", "final_sentence": "pd series a b a c dtype t"}
{"comment_sentence_id": 1232, "class": "_MockPOP3", "comment_sentence": "from test@mailpile^is nsubject msg 1 n noh, hi!", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "from test@mailpile is nsubject msg 1 n noh hi", "final_sentence": "from test@mailpile is nsubject msg 1 n noh hi"}
{"comment_sentence_id": 4544, "class": "BCEWithLogitsLoss", "comment_sentence": "target torch^empty 3 ^random 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "target torch empty 3 random 2", "final_sentence": "target torch empty 3 random 2"}
{"comment_sentence_id": 3334, "class": "omdict", "comment_sentence": "the same key.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the same key", "final_sentence": "the same key"}
{"comment_sentence_id": 1193, "class": "YouTubeVideo", "comment_sentence": "to calculate seconds from time as hours, minutes, seconds use", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to calculate seconds from time as hours minutes seconds use", "final_sentence": "to calculate seconds from time as hours minutes seconds use"}
{"comment_sentence_id": 1321, "class": "ConfigDict", "comment_sentence": "123", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "123", "final_sentence": "123"}
{"comment_sentence_id": 698, "class": "Permission", "comment_sentence": "the delete permission limits the ability to delete an object.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "the delete permission limits the ability to delete an object", "final_sentence": "the delete permission limits the ability to delete an object"}
{"comment_sentence_id": 2391, "class": "And", "comment_sentence": "# more easily written as", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "more easily written as", "final_sentence": "more easily written as"}
{"comment_sentence_id": 2892, "class": "FollowedBy", "comment_sentence": "prints", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 1195, "class": "YouTubeVideo", "comment_sentence": "start int timedelta hours 1, minutes 46, seconds 40 ^total seconds", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "start int timedelta hours 1 minutes 46 seconds 40 total seconds", "final_sentence": "start int timedelta hours 1 minutes 46 seconds 40 total seconds"}
{"comment_sentence_id": 99, "class": "BaseCommand", "comment_sentence": "and calls its run from argv method.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "and calls its run from argv method", "final_sentence": "and calls its run from argv method"}
{"comment_sentence_id": 3518, "class": "ParseResults", "comment_sentence": "# equivalent form", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "equivalent form", "final_sentence": "equivalent form"}
{"comment_sentence_id": 1670, "class": "CategoricalDtype", "comment_sentence": "1 b", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1 b", "final_sentence": "1 b"}
{"comment_sentence_id": 4396, "class": "BatchNorm1d", "comment_sentence": "# with learnable parameters", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with learnable parameters", "final_sentence": "with learnable parameters"}
{"comment_sentence_id": 3703, "class": "PrefixLoader", "comment_sentence": "something else", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "something else", "final_sentence": "something else"}
{"comment_sentence_id": 5899, "class": "UseOptimizer", "comment_sentence": "weight weight optim", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "weight weight optim", "final_sentence": "weight weight optim"}
{"comment_sentence_id": 1903, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 2857, "class": "FileSystemLoader", "comment_sentence": "by setting the encoding parameter to something else.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by setting the encoding parameter to something else", "final_sentence": "by setting the encoding parameter to something else"}
{"comment_sentence_id": 5590, "class": "Task", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5300, "class": "Module", "comment_sentence": "def forward self, x", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "def forward self x", "final_sentence": "def forward self x"}
{"comment_sentence_id": 4047, "class": "SkipTo", "comment_sentence": "issue num 101", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "issue num 101", "final_sentence": "issue num 101"}
{"comment_sentence_id": 103, "class": "BaseCommand", "comment_sentence": "any environment changes requested by options like", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "any environment changes requested by options like", "final_sentence": "any environment changes requested by options like"}
{"comment_sentence_id": 1508, "class": "VCardStore", "comment_sentence": "vcardline email d@evil^com ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcardline email d@evil com", "final_sentence": "vcardline email d@evil com"}
{"comment_sentence_id": 4541, "class": "BCEWithLogitsLoss", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 20, "class": "Atomic", "comment_sentence": "when it s used as a context manager, enter creates a transaction or a", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "when it s used as a context manager enter creates a transaction or a", "final_sentence": "when it s used as a context manager enter creates a transaction or a"}
{"comment_sentence_id": 2455, "class": "CaseInsensitiveDict", "comment_sentence": "list cid accept # true", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "list cid accept true", "final_sentence": "list cid accept true"}
{"comment_sentence_id": 3180, "class": "MemcachedBytecodeCache", "comment_sentence": "value is a string and", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "value is a string and", "final_sentence": "value is a string and"}
{"comment_sentence_id": 4640, "class": "BuildType", "comment_sentence": "if attr cmake build type env", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if attr cmake build type env", "final_sentence": "if attr cmake build type env"}
{"comment_sentence_id": 1877, "class": "IntegerArray", "comment_sentence": "integerarray is currently experimental, and its api or internal", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integerarray is currently experimental and its api or internal", "final_sentence": "integerarray is currently experimental and its api or internal"}
{"comment_sentence_id": 975, "class": "Audio", "comment_sentence": ".", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 4024, "class": "SkipTo", "comment_sentence": "report", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "report", "final_sentence": "report"}
{"comment_sentence_id": 109, "class": "BaseCommand", "comment_sentence": "output produced by handle will be printed to standard", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output produced by handle will be printed to standard", "final_sentence": "output produced by handle will be printed to standard"}
{"comment_sentence_id": 4793, "class": "Conv3d", "comment_sentence": "# with square kernels and equal stride", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with square kernels and equal stride", "final_sentence": "with square kernels and equal stride"}
{"comment_sentence_id": 2881, "class": "FollowedBy", "comment_sentence": "followedby", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "followedby", "final_sentence": "followedby"}
{"comment_sentence_id": 2927, "class": "Getattr", "comment_sentence": "get an attribute or item from an expression that is a ascii only", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "get an attribute or item from an expression that is a ascii only", "final_sentence": "get an attribute or item from an expression that is a ascii only"}
{"comment_sentence_id": 1071, "class": "HistoryAccessor", "comment_sentence": "historymanager, below, which is a subclass of this.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "historymanager below which is a subclass of this", "final_sentence": "historymanager below which is a subclass of this"}
{"comment_sentence_id": 1333, "class": "ConfigDict", "comment_sentence": "valueerror invalid value for config potatoes moo", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "valueerror invalid value for config potatoes moo", "final_sentence": "valueerror invalid value for config potatoes moo"}
{"comment_sentence_id": 4398, "class": "BatchNorm1d", "comment_sentence": "# without learnable parameters", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "without learnable parameters", "final_sentence": "without learnable parameters"}
{"comment_sentence_id": 4395, "class": "BatchNorm1d", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 2270, "class": "StringArray", "comment_sentence": "a stringarray.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "a stringarray", "final_sentence": "a stringarray"}
{"comment_sentence_id": 1113, "class": "Magics", "comment_sentence": "individual methods as magic functions, and", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "individual methods as magic functions and", "final_sentence": "individual methods as magic functions and"}
{"comment_sentence_id": 3184, "class": "MemcachedBytecodeCache", "comment_sentence": "provided it s an integer with the number of seconds the cache", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "provided it s an integer with the number of seconds the cache", "final_sentence": "provided it s an integer with the number of seconds the cache"}
{"comment_sentence_id": 1767, "class": "CategoricalIndex", "comment_sentence": "categoricalindex a , b , c , a , b , c , categories a , b , c , ordered false, dtype category # noqa", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa", "final_sentence": "categoricalindex a b c a b c categories a b c ordered false dtype category noqa"}
{"comment_sentence_id": 3809, "class": "Retry", "comment_sentence": "retries can be defined as a default for a pool", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "retries can be defined as a default for a pool", "final_sentence": "retries can be defined as a default for a pool"}
{"comment_sentence_id": 3077, "class": "Markup", "comment_sentence": "to escape the text, use the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "to escape the text use the", "final_sentence": "to escape the text use the"}
{"comment_sentence_id": 4309, "class": "AdaptiveMaxPool3d", "comment_sentence": "m nn^adaptivemaxpool3d 5,7,9", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m nn adaptivemaxpool3d 5 7 9", "final_sentence": "m nn adaptivemaxpool3d 5 7 9"}
{"comment_sentence_id": 2825, "class": "FileMetadata", "comment_sentence": "usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 4037, "class": "SkipTo", "comment_sentence": "ticket expr integer issue num sep", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ticket expr integer issue num sep", "final_sentence": "ticket expr integer issue num sep"}
{"comment_sentence_id": 2890, "class": "FollowedBy", "comment_sentence": "attr expr group label suppress oneormore data word, stopon label ^setparseaction ^join", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "attr expr group label suppress oneormore data word stopon label setparseaction join", "final_sentence": "attr expr group label suppress oneormore data word stopon label setparseaction join"}
{"comment_sentence_id": 3336, "class": "omdict", "comment_sentence": "load , size , reverse ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "load size reverse", "final_sentence": "load size reverse"}
{"comment_sentence_id": 4543, "class": "BCEWithLogitsLoss", "comment_sentence": "input torch^randn 3, requires grad true", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 3 requires grad true", "final_sentence": "input torch randn 3 requires grad true"}
{"comment_sentence_id": 5470, "class": "Poisson", "comment_sentence": "m^sample", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "m sample", "final_sentence": "m sample"}
{"comment_sentence_id": 1479, "class": "StorageBackedLongs", "comment_sentence": "sbl storagebackedlongs storage, sbl", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "sbl storagebackedlongs storage sbl", "final_sentence": "sbl storagebackedlongs storage sbl"}
{"comment_sentence_id": 610, "class": "MultiValueDict", "comment_sentence": "d^setlist lastname , holovaty , willison", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "d setlist lastname holovaty willison", "final_sentence": "d setlist lastname holovaty willison"}
{"comment_sentence_id": 3261, "class": "NotAny", "comment_sentence": "a null token list.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "a null token list", "final_sentence": "a null token list"}
{"comment_sentence_id": 2456, "class": "CaseInsensitiveDict", "comment_sentence": "for example, headers content encoding will return the", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for example headers content encoding will return the", "final_sentence": "for example headers content encoding will return the"}
{"comment_sentence_id": 5592, "class": "Task", "comment_sentence": "with node trainer , task name my task , num instances 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with node trainer task name my task num instances 2", "final_sentence": "with node trainer task name my task num instances 2"}
{"comment_sentence_id": 3322, "class": "omdict", "comment_sentence": "clear , copy , update , fromkeys , len", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "clear copy update fromkeys len", "final_sentence": "clear copy update fromkeys len"}
{"comment_sentence_id": 2883, "class": "FollowedBy", "comment_sentence": "if any results names are defined", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "if any results names are defined", "final_sentence": "if any results names are defined"}
{"comment_sentence_id": 4689, "class": "ConstantPad3d", "comment_sentence": "# using different paddings for different sides", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "using different paddings for different sides", "final_sentence": "using different paddings for different sides"}
{"comment_sentence_id": 4400, "class": "BatchNorm1d", "comment_sentence": "input torch^randn 20, 100", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 20 100", "final_sentence": "input torch randn 20 100"}
{"comment_sentence_id": 105, "class": "BaseCommand", "comment_sentence": "passing the parsed arguments.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "passing the parsed arguments", "final_sentence": "passing the parsed arguments"}
{"comment_sentence_id": 4670, "class": "ConstantPad3d", "comment_sentence": "for n dimensional padding, use func torch^nn.functional^pad .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for n dimensional padding use func torch nn functional pad", "final_sentence": "for n dimensional padding use func torch nn functional pad"}
{"comment_sentence_id": 3013, "class": "InstalledDistribution", "comment_sentence": "instantiated., or uses a passed in metadata instance useful for when", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "instantiated or uses a passed in metadata instance useful for when", "final_sentence": "instantiated or uses a passed in metadata instance useful for when"}
{"comment_sentence_id": 1909, "class": "IntegerArray", "comment_sentence": "1, nan, 3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "1 nan 3", "final_sentence": "1 nan 3"}
{"comment_sentence_id": 2853, "class": "FileSystemLoader", "comment_sentence": "given order", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "given order", "final_sentence": "given order"}
{"comment_sentence_id": 2390, "class": "And", "comment_sentence": "expr and integer id ,name expr name ,integer age", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "expr and integer id name expr name integer age", "final_sentence": "expr and integer id name expr name integer age"}
{"comment_sentence_id": 3677, "class": "PoolManager", "comment_sentence": "manager poolmanager num pools 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "manager poolmanager num pools 2", "final_sentence": "manager poolmanager num pools 2"}
{"comment_sentence_id": 1225, "class": "_MockPOP3", "comment_sentence": "evil in pm, bogon in pm", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "evil in pm bogon in pm", "final_sentence": "evil in pm bogon in pm"}
{"comment_sentence_id": 3332, "class": "omdict", "comment_sentence": "name interact with lists of values, and methods with all in their name", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "name interact with lists of values and methods with all in their name", "final_sentence": "name interact with lists of values and methods with all in their name"}
{"comment_sentence_id": 3533, "class": "ParseResults", "comment_sentence": "result 0 1999", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "result 0 1999", "final_sentence": "result 0 1999"}
{"comment_sentence_id": 2882, "class": "FollowedBy", "comment_sentence": "always returns a null token list.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "always returns a null token list", "final_sentence": "always returns a null token list"}
{"comment_sentence_id": 3516, "class": "ParseResults", "comment_sentence": "integer^setresultsname month", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integer setresultsname month", "final_sentence": "integer setresultsname month"}
{"comment_sentence_id": 2287, "class": "StringArray", "comment_sentence": "true, na, false", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "true na false", "final_sentence": "true na false"}
{"comment_sentence_id": 98, "class": "BaseCommand", "comment_sentence": "django admin or manage^py loads the command class", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "django admin or manage py loads the command class", "final_sentence": "django admin or manage py loads the command class"}
{"comment_sentence_id": 1513, "class": "VCardStore", "comment_sentence": "vcs^get vcard nosuch@email^address is none", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcs get vcard nosuch@email address is none", "final_sentence": "vcs get vcard nosuch@email address is none"}
{"comment_sentence_id": 1764, "class": "CategoricalIndex", "comment_sentence": "categoricalindex can also be instantiated from a categorical", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "categoricalindex can also be instantiated from a categorical", "final_sentence": "categoricalindex can also be instantiated from a categorical"}
{"comment_sentence_id": 5602, "class": "Task", "comment_sentence": "ops^mul globl, globl , globl", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ops mul globl globl globl", "final_sentence": "ops mul globl globl globl"}
{"comment_sentence_id": 1228, "class": "_MockPOP3", "comment_sentence": "msg 1 , msg 2", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "msg 1 msg 2", "final_sentence": "msg 1 msg 2"}
{"comment_sentence_id": 4136, "class": "UnlockError", "comment_sentence": "pass", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 1766, "class": "CategoricalIndex", "comment_sentence": "pd^categoricalindex c", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pd categoricalindex c", "final_sentence": "pd categoricalindex c"}
{"comment_sentence_id": 1223, "class": "_MockPOP3", "comment_sentence": "pm^iterkeys", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pm iterkeys", "final_sentence": "pm iterkeys"}
{"comment_sentence_id": 2284, "class": "StringArray", "comment_sentence": "for comparison methods, this returns a class pandas^booleanarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for comparison methods this returns a class pandas booleanarray", "final_sentence": "for comparison methods this returns a class pandas booleanarray"}
{"comment_sentence_id": 4314, "class": "AdaptiveMaxPool3d", "comment_sentence": "input torch^randn 1, 64, 10, 9, 8", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "input torch randn 1 64 10 9 8", "final_sentence": "input torch randn 1 64 10 9 8"}
{"comment_sentence_id": 1337, "class": "ConfigDict", "comment_sentence": "pot^rules potatoes", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pot rules potatoes", "final_sentence": "pot rules potatoes"}
{"comment_sentence_id": 4502, "class": "BCEWithLogitsLoss", "comment_sentence": "tensor 03135", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "tensor 03135", "final_sentence": "tensor 03135"}
{"comment_sentence_id": 230, "class": "BoundWidget", "comment_sentence": "for example, the following can be used in a", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "for example the following can be used in a", "final_sentence": "for example the following can be used in a"}
{"comment_sentence_id": 2831, "class": "FileMetadata", "comment_sentence": "usage", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 1912, "class": "IntegerArray", "comment_sentence": "integerarray", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "integerarray", "final_sentence": "integerarray"}
{"comment_sentence_id": 484, "class": "Migration", "comment_sentence": "of the following attributes", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "of the following attributes", "final_sentence": "of the following attributes"}
{"comment_sentence_id": 5896, "class": "UseOptimizer", "comment_sentence": "with useoptimizer weight weight optim", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with useoptimizer weight weight optim", "final_sentence": "with useoptimizer weight weight optim"}
{"comment_sentence_id": 957, "class": "Audio", "comment_sentence": "# generate a sound", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "generate a sound", "final_sentence": "generate a sound"}
{"comment_sentence_id": 1308, "class": "ConfigDict", "comment_sentence": "99", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "99", "final_sentence": "99"}
{"comment_sentence_id": 5468, "class": "Poisson", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 5768, "class": "Unfold", "comment_sentence": "torch^size 2, 30, 4", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "torch size 2 30 4", "final_sentence": "torch size 2 30 4"}
{"comment_sentence_id": 4316, "class": "AdaptiveMaxPool3d", "comment_sentence": "# target output size of 7x9x8", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "target output size of 7x9x8", "final_sentence": "target output size of 7x9x8"}
{"comment_sentence_id": 1115, "class": "Magics", "comment_sentence": "methods are properly registered at the instance level upon instance", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "methods are properly registered at the instance level upon instance", "final_sentence": "methods are properly registered at the instance level upon instance"}
{"comment_sentence_id": 5760, "class": "Unfold", "comment_sentence": "output math n, c times prod text kernel size , l as described above", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "output math n c times prod text kernel size l as described above", "final_sentence": "output math n c times prod text kernel size l as described above"}
{"comment_sentence_id": 234, "class": "BoundWidget", "comment_sentence": "radio^choice label", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "radio choice label", "final_sentence": "radio choice label"}
{"comment_sentence_id": 5601, "class": "Task", "comment_sentence": "with ops^task exit", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with ops task exit", "final_sentence": "with ops task exit"}
{"comment_sentence_id": 3387, "class": "Option", "comment_sentence": "all other parameters are passed onwards to the parameter constructor.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "all other parameters are passed onwards to the parameter constructor", "final_sentence": "all other parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 3054, "class": "LockFailed", "comment_sentence": "raise lockfailed", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "raise lockfailed", "final_sentence": "raise lockfailed"}
{"comment_sentence_id": 5567, "class": "StackTransform", "comment_sentence": "x torch^stack torch^range 1, 10 , torch^range 1, 10 , dim 1", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "x torch stack torch range 1 10 torch range 1 10 dim 1", "final_sentence": "x torch stack torch range 1 10 torch range 1 10 dim 1"}
{"comment_sentence_id": 874, "class": "VariableWrapper", "comment_sentence": "cursor^execute as is.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "cursor execute as is", "final_sentence": "cursor execute as is"}
{"comment_sentence_id": 1883, "class": "IntegerArray", "comment_sentence": "func pandas^array with one of the integer dtypes see examples .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "func pandas array with one of the integer dtypes see examples", "final_sentence": "func pandas array with one of the integer dtypes see examples"}
{"comment_sentence_id": 4033, "class": "SkipTo", "comment_sentence": "# ignore quoted strings, so that a character inside a quoted string does not match", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ignore quoted strings so that a character inside a quoted string does not match", "final_sentence": "ignore quoted strings so that a character inside a quoted string does not match"}
{"comment_sentence_id": 3998, "class": "Session", "comment_sentence": "with requests^session as s", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "with requests session as s", "final_sentence": "with requests session as s"}
{"comment_sentence_id": 697, "class": "Permission", "comment_sentence": "list, view the change form and change an object.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "list view the change form and change an object", "final_sentence": "list view the change form and change an object"}
{"comment_sentence_id": 231, "class": "BoundWidget", "comment_sentence": "template", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "template", "final_sentence": "template"}
{"comment_sentence_id": 695, "class": "Permission", "comment_sentence": "and add an object.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "and add an object", "final_sentence": "and add an object"}
{"comment_sentence_id": 3531, "class": "ParseResults", "comment_sentence": "prints", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "prints", "final_sentence": "prints"}
{"comment_sentence_id": 106, "class": "BaseCommand", "comment_sentence": "3", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 2461, "class": "CaseInsensitiveDict", "comment_sentence": "behavior is undefined.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "behavior is undefined", "final_sentence": "behavior is undefined"}
{"comment_sentence_id": 2392, "class": "And", "comment_sentence": "expr integer id name expr name integer age", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "expr integer id name expr name integer age", "final_sentence": "expr integer id name expr name integer age"}
{"comment_sentence_id": 1515, "class": "VCardStore", "comment_sentence": "or they can be found using searches.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "or they can be found using searches", "final_sentence": "or they can be found using searches"}
{"comment_sentence_id": 5772, "class": "Unfold", "comment_sentence": "inp unf torch^nn.functional^unfold inp, 4, 5", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "inp unf torch nn functional unfold inp 4 5", "final_sentence": "inp unf torch nn functional unfold inp 4 5"}
{"comment_sentence_id": 2884, "class": "FollowedBy", "comment_sentence": "in the lookahead expression, those will be returned for access by", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "in the lookahead expression those will be returned for access by", "final_sentence": "in the lookahead expression those will be returned for access by"}
{"comment_sentence_id": 1316, "class": "ConfigDict", "comment_sentence": "pot colors", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "pot colors", "final_sentence": "pot colors"}
{"comment_sentence_id": 5431, "class": "NetModifier", "comment_sentence": "modifier net", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "modifier net", "final_sentence": "modifier net"}
{"comment_sentence_id": 1290, "class": "ConfigDict", "comment_sentence": ", int , 0 ,", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "int 0", "final_sentence": "int 0"}
{"comment_sentence_id": 3101, "class": "Markup", "comment_sentence": "markup em hello em &lt foo&gt", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "markup em hello em lt foo gt", "final_sentence": "markup em hello em lt foo gt"}
{"comment_sentence_id": 4307, "class": "AdaptiveMaxPool3d", "comment_sentence": "examples", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 873, "class": "VariableWrapper", "comment_sentence": "this can be used generally for any other object that should be passed into", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "this can be used generally for any other object that should be passed into", "final_sentence": "this can be used generally for any other object that should be passed into"}
{"comment_sentence_id": 4155, "class": "_OpNamespace", "comment_sentence": "object called my namespace and set it as an attribute on the ops", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "object called my namespace and set it as an attribute on the ops", "final_sentence": "object called my namespace and set it as an attribute on the ops"}
{"comment_sentence_id": 3510, "class": "ParseResults", "comment_sentence": "by list index results 0 , results 1 , etc", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "by list index results 0 results 1 etc", "final_sentence": "by list index results 0 results 1 etc"}
{"comment_sentence_id": 1512, "class": "VCardStore", "comment_sentence": "u dude", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "u dude", "final_sentence": "u dude"}
{"comment_sentence_id": 1504, "class": "VCardStore", "comment_sentence": "# vcards are added to the collection using add vcard.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "vcards are added to the collection using add vcard", "final_sentence": "vcards are added to the collection using add vcard"}
{"comment_sentence_id": 4166, "class": "_OpNamespace", "comment_sentence": "operation will already exist .", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "operation will already exist", "final_sentence": "operation will already exist"}
{"comment_sentence_id": 5118, "class": "EmbeddingBag", "comment_sentence": "embedding sum nn^embeddingbag 10, 3, mode sum", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "embedding sum nn embeddingbag 10 3 mode sum", "final_sentence": "embedding sum nn embeddingbag 10 3 mode sum"}
{"comment_sentence_id": 3328, "class": "omdict", "comment_sentence": "key parameter has been added to these methods", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "key parameter has been added to these methods", "final_sentence": "key parameter has been added to these methods"}
{"comment_sentence_id": 5941, "class": "PreparedRequest", "comment_sentence": "preparedrequest get", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "preparedrequest get", "final_sentence": "preparedrequest get"}
{"comment_sentence_id": 3529, "class": "ParseResults", "comment_sentence": "test minutes in result", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "test minutes in result", "final_sentence": "test minutes in result"}
{"comment_sentence_id": 753, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "in the example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "in the example", "final_sentence": "in the example"}
{"comment_sentence_id": 5904, "class": "UseOptimizer", "comment_sentence": "brew^func", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "brew func", "final_sentence": "brew func"}
{"comment_sentence_id": 1905, "class": "IntegerArray", "comment_sentence": "string aliases for the dtypes are also available.", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "string aliases for the dtypes are also available", "final_sentence": "string aliases for the dtypes are also available"}
{"comment_sentence_id": 5594, "class": "Task", "comment_sentence": "globl ops^const 0", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "globl ops const 0", "final_sentence": "globl ops const 0"}
{"comment_sentence_id": 1332, "class": "ConfigDict", "comment_sentence": "traceback most recent call last", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "traceback most recent call last", "final_sentence": "traceback most recent call last"}
{"comment_sentence_id": 1070, "class": "HistoryAccessor", "comment_sentence": "ipython shells use", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "ipython shells use", "final_sentence": "ipython shells use"}
{"comment_sentence_id": 1186, "class": "YouTubeVideo", "comment_sentence": "eg to embed the video from https www^youtube.com watch?v foo , you would", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "eg to embed the video from https www youtube com watch v foo you would", "final_sentence": "eg to embed the video from https www youtube com watch v foo you would"}
{"comment_sentence_id": 2886, "class": "FollowedBy", "comment_sentence": "example", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3680, "class": "PoolManager", "comment_sentence": "r manager^request get , http yahoo^com", "partition": 0, "instance_type": 1, "category": "Usage", "pre_sentence": "r manager request get http yahoo com", "final_sentence": "r manager request get http yahoo com"}
{"comment_sentence_id": 2236, "class": "SQLTable", "comment_sentence": "do better type conversions.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "do better type conversions", "final_sentence": "do better type conversions"}
{"comment_sentence_id": 5450, "class": "OneHotCategorical", "comment_sentence": "probs tensor event probabilities", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "probs tensor event probabilities", "final_sentence": "probs tensor event probabilities"}
{"comment_sentence_id": 5076, "class": "EmbeddingBag", "comment_sentence": "the words in the mini batch.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the words in the mini batch", "final_sentence": "the words in the mini batch"}
{"comment_sentence_id": 4759, "class": "Conv3d", "comment_sentence": "default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 0", "final_sentence": "default 0"}
{"comment_sentence_id": 2061, "class": "PlotAccessor", "comment_sentence": "table.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "table", "final_sentence": "table"}
{"comment_sentence_id": 3853, "class": "Retry", "comment_sentence": "by default, we only retry on methods which are considered to be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by default we only retry on methods which are considered to be", "final_sentence": "by default we only retry on methods which are considered to be"}
{"comment_sentence_id": 2215, "class": "SelectNSeries", "comment_sentence": "returns", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "returns", "final_sentence": "returns"}
{"comment_sentence_id": 4672, "class": "ConstantPad3d", "comment_sentence": "padding int, tuple the size of the padding.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding int tuple the size of the padding", "final_sentence": "padding int tuple the size of the padding"}
{"comment_sentence_id": 1084, "class": "InteractiveShellApp", "comment_sentence": "meth init extensions", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "meth init extensions", "final_sentence": "meth init extensions"}
{"comment_sentence_id": 594, "class": "MultiPartParser", "comment_sentence": "and returns a tuple of multivaluedict post , multivaluedict files .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and returns a tuple of multivaluedict post multivaluedict files", "final_sentence": "and returns a tuple of multivaluedict post multivaluedict files"}
{"comment_sentence_id": 4888, "class": "CyclicLR", "comment_sentence": "the distance between the two boundaries can be scaled on a per iteration", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the distance between the two boundaries can be scaled on a per iteration", "final_sentence": "the distance between the two boundaries can be scaled on a per iteration"}
{"comment_sentence_id": 3744, "class": "Request", "comment_sentence": "take place.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "take place", "final_sentence": "take place"}
{"comment_sentence_id": 3983, "class": "SafeFileCache", "comment_sentence": "not be accessible or writable.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "not be accessible or writable", "final_sentence": "not be accessible or writable"}
{"comment_sentence_id": 407, "class": "ListMixin", "comment_sentence": "a base class which provides complete list interface.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a base class which provides complete list interface", "final_sentence": "a base class which provides complete list interface"}
{"comment_sentence_id": 751, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "accessor to the related objects manager on the one to many relation created", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "accessor to the related objects manager on the one to many relation created", "final_sentence": "accessor to the related objects manager on the one to many relation created"}
{"comment_sentence_id": 1271, "class": "ConfigDict", "comment_sentence": "a structured way what variables exist, what their legal values are,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a structured way what variables exist what their legal values are", "final_sentence": "a structured way what variables exist what their legal values are"}
{"comment_sentence_id": 11, "class": "Archive", "comment_sentence": "the external api class that encapsulates an archive implementation.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the external api class that encapsulates an archive implementation", "final_sentence": "the external api class that encapsulates an archive implementation"}
{"comment_sentence_id": 5083, "class": "EmbeddingBag", "comment_sentence": "mean computes the average of the values", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mean computes the average of the values", "final_sentence": "mean computes the average of the values"}
{"comment_sentence_id": 2621, "class": "Environment", "comment_sentence": "the default is false , which causes a single newline,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the default is false which causes a single newline", "final_sentence": "the default is false which causes a single newline"}
{"comment_sentence_id": 2441, "class": "CaseInsensitiveDict", "comment_sentence": "implements all methods and operations of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements all methods and operations of", "final_sentence": "implements all methods and operations of"}
{"comment_sentence_id": 4147, "class": "_OpNamespace", "comment_sentence": "call this op, the user will write torch^ops.my namespace^my op .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "call this op the user will write torch ops my namespace my op", "final_sentence": "call this op the user will write torch ops my namespace my op"}
{"comment_sentence_id": 5236, "class": "LastNWindowCollector", "comment_sentence": "if you have complex data,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if you have complex data", "final_sentence": "if you have complex data"}
{"comment_sentence_id": 3746, "class": "Request", "comment_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request", "final_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request"}
{"comment_sentence_id": 945, "class": "Audio", "comment_sentence": "autoplay bool", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "autoplay bool", "final_sentence": "autoplay bool"}
{"comment_sentence_id": 4717, "class": "Conv3d", "comment_sentence": "attr stride controls the stride for the cross correlation.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr stride controls the stride for the cross correlation", "final_sentence": "attr stride controls the stride for the cross correlation"}
{"comment_sentence_id": 5645, "class": "TransformerEncoderLayer", "comment_sentence": "lukasz kaiser, and illia polosukhin.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lukasz kaiser and illia polosukhin", "final_sentence": "lukasz kaiser and illia polosukhin"}
{"comment_sentence_id": 3841, "class": "Retry", "comment_sentence": "loops.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "loops", "final_sentence": "loops"}
{"comment_sentence_id": 1574, "class": "BooleanArray", "comment_sentence": "this is a pandas extension array for boolean data, under the hood", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a pandas extension array for boolean data under the hood", "final_sentence": "this is a pandas extension array for boolean data under the hood"}
{"comment_sentence_id": 3421, "class": "Option", "comment_sentence": "param count this flag makes an option increment an integer.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param count this flag makes an option increment an integer", "final_sentence": "param count this flag makes an option increment an integer"}
{"comment_sentence_id": 1138, "class": "Obj", "comment_sentence": "namespace to hold arbitrary information.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "namespace to hold arbitrary information", "final_sentence": "namespace to hold arbitrary information"}
{"comment_sentence_id": 5091, "class": "EmbeddingBag", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 1273, "class": "ConfigDict", "comment_sentence": "each variable definition expects three values", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each variable definition expects three values", "final_sentence": "each variable definition expects three values"}
{"comment_sentence_id": 2937, "class": "HebrewProber", "comment_sentence": "fact some kind of hebrew, logical or visual.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fact some kind of hebrew logical or visual", "final_sentence": "fact some kind of hebrew logical or visual"}
{"comment_sentence_id": 4662, "class": "Caffe2OperatorTestCase", "comment_sentence": "run backward method will be executed.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "run backward method will be executed", "final_sentence": "run backward method will be executed"}
{"comment_sentence_id": 3788, "class": "RequiresPythonCache", "comment_sentence": "cache a candidate s requires python information.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cache a candidate s requires python information", "final_sentence": "cache a candidate s requires python information"}
{"comment_sentence_id": 5726, "class": "Unfold", "comment_sentence": "note", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 5514, "class": "SGD", "comment_sentence": "momentum float, optional momentum factor default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "momentum float optional momentum factor default 0", "final_sentence": "momentum float optional momentum factor default 0"}
{"comment_sentence_id": 3845, "class": "Retry", "comment_sentence": "set to false to disable and imply raise on redirect false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to false to disable and imply raise on redirect false", "final_sentence": "set to false to disable and imply raise on redirect false"}
{"comment_sentence_id": 307, "class": "CustomCacheKeyValidationTests", "comment_sentence": "a custom cache backend that otherwise inherits from a builtin", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a custom cache backend that otherwise inherits from a builtin", "final_sentence": "a custom cache backend that otherwise inherits from a builtin"}
{"comment_sentence_id": 5681, "class": "Unfold", "comment_sentence": "extracts sliding local blocks from a batched input tensor.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "extracts sliding local blocks from a batched input tensor", "final_sentence": "extracts sliding local blocks from a batched input tensor"}
{"comment_sentence_id": 3227, "class": "MethodDispatcher", "comment_sentence": "on initiation, keys that are lists, sets or tuples are converted to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on initiation keys that are lists sets or tuples are converted to", "final_sentence": "on initiation keys that are lists sets or tuples are converted to"}
{"comment_sentence_id": 4885, "class": "CyclicLR", "comment_sentence": "the policy cycles the learning", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the policy cycles the learning", "final_sentence": "the policy cycles the learning"}
{"comment_sentence_id": 4503, "class": "BCEWithLogitsLoss", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 2619, "class": "Environment", "comment_sentence": "keep trailing newline", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "keep trailing newline", "final_sentence": "keep trailing newline"}
{"comment_sentence_id": 916, "class": "Audio", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4638, "class": "BuildType", "comment_sentence": "checks build type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "checks build type", "final_sentence": "checks build type"}
{"comment_sentence_id": 1459, "class": "MailpileJinjaLoader", "comment_sentence": "and plugin system to find template files.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and plugin system to find template files", "final_sentence": "and plugin system to find template files"}
{"comment_sentence_id": 2258, "class": "StringArray", "comment_sentence": "where the elements are python strings.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "where the elements are python strings", "final_sentence": "where the elements are python strings"}
{"comment_sentence_id": 3859, "class": "Retry", "comment_sentence": "a set of integer http status codes that we should force a retry on.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a set of integer http status codes that we should force a retry on", "final_sentence": "a set of integer http status codes that we should force a retry on"}
{"comment_sentence_id": 859, "class": "UniqueAnchor", "comment_sentence": "this is a model that can be used as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a model that can be used as", "final_sentence": "this is a model that can be used as"}
{"comment_sentence_id": 5102, "class": "EmbeddingBag", "comment_sentence": "attr offsets is required to be a 1d tensor containing the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr offsets is required to be a 1d tensor containing the", "final_sentence": "attr offsets is required to be a 1d tensor containing the"}
{"comment_sentence_id": 1735, "class": "CategoricalIndex", "comment_sentence": "categories", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categories", "final_sentence": "categories"}
{"comment_sentence_id": 4512, "class": "BCEWithLogitsLoss", "comment_sentence": "if the field attr size average", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 1599, "class": "BooleanArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 814, "class": "TemplateDoesNotExist", "comment_sentence": "tried", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tried", "final_sentence": "tried"}
{"comment_sentence_id": 3862, "class": "Retry", "comment_sentence": "by default, this is disabled with none .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by default this is disabled with none", "final_sentence": "by default this is disabled with none"}
{"comment_sentence_id": 3843, "class": "Retry", "comment_sentence": "308", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "308", "final_sentence": "308"}
{"comment_sentence_id": 5021, "class": "DiagonalTensor", "comment_sentence": "the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the", "final_sentence": "the"}
{"comment_sentence_id": 4732, "class": "Conv3d", "comment_sentence": "its own set of filters, of size", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "its own set of filters of size", "final_sentence": "its own set of filters of size"}
{"comment_sentence_id": 3877, "class": "Retry", "comment_sentence": "exhausted, to raise a maxretryerror, or to return a response with a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "exhausted to raise a maxretryerror or to return a response with a", "final_sentence": "exhausted to raise a maxretryerror or to return a response with a"}
{"comment_sentence_id": 890, "class": "XFrameOptionsDecoratorsTests", "comment_sentence": "tests for the x frame options decorators.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for the x frame options decorators", "final_sentence": "tests for the x frame options decorators"}
{"comment_sentence_id": 4777, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 5639, "class": "TestYellowFin", "comment_sentence": "yellowfin an automatic tuner for momentum sgd", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "yellowfin an automatic tuner for momentum sgd", "final_sentence": "yellowfin an automatic tuner for momentum sgd"}
{"comment_sentence_id": 1162, "class": "TermColors", "comment_sentence": "colors in terminals.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "colors in terminals", "final_sentence": "colors in terminals"}
{"comment_sentence_id": 4678, "class": "ConstantPad3d", "comment_sentence": "math text padding front , math text padding back", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math text padding front math text padding back", "final_sentence": "math text padding front math text padding back"}
{"comment_sentence_id": 4747, "class": "Conv3d", "comment_sentence": "in other words, for an input of size math n, c in , d in , h in , w in ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in other words for an input of size math n c in d in h in w in", "final_sentence": "in other words for an input of size math n c in d in h in w in"}
{"comment_sentence_id": 5564, "class": "StackTransform", "comment_sentence": "component wise to each submatrix at dim", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "component wise to each submatrix at dim", "final_sentence": "component wise to each submatrix at dim"}
{"comment_sentence_id": 2645, "class": "Environment", "comment_sentence": "class jinja2^utils.markup .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class jinja2 utils markup", "final_sentence": "class jinja2 utils markup"}
{"comment_sentence_id": 4153, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace will invoke the getattr magic method", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "torch ops my namespace will invoke the getattr magic method", "final_sentence": "torch ops my namespace will invoke the getattr magic method"}
{"comment_sentence_id": 840, "class": "TestImageFieldFile", "comment_sentence": "custom field file class that records whether or not the underlying file", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "custom field file class that records whether or not the underlying file", "final_sentence": "custom field file class that records whether or not the underlying file"}
{"comment_sentence_id": 127, "class": "BaseCommand", "comment_sentence": "statements if true , the output will automatically be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "statements if true the output will automatically be", "final_sentence": "statements if true the output will automatically be"}
{"comment_sentence_id": 4519, "class": "BCEWithLogitsLoss", "comment_sentence": "losses are averaged or summed over observations for each minibatch depending", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "losses are averaged or summed over observations for each minibatch depending", "final_sentence": "losses are averaged or summed over observations for each minibatch depending"}
{"comment_sentence_id": 410, "class": "ListMixin", "comment_sentence": "function get single external self, i", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "function get single external self i", "final_sentence": "function get single external self i"}
{"comment_sentence_id": 2004, "class": "PlotAccessor", "comment_sentence": "kde kernel density estimation plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "kde kernel density estimation plot", "final_sentence": "kde kernel density estimation plot"}
{"comment_sentence_id": 844, "class": "TestRouter", "comment_sentence": "routes to the other database if the model name starts with other .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "routes to the other database if the model name starts with other", "final_sentence": "routes to the other database if the model name starts with other"}
{"comment_sentence_id": 5710, "class": "Unfold", "comment_sentence": "kernel size int or tuple the size of the sliding blocks", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "kernel size int or tuple the size of the sliding blocks", "final_sentence": "kernel size int or tuple the size of the sliding blocks"}
{"comment_sentence_id": 2353, "class": "UnsortedIndexError", "comment_sentence": "subclass of keyerror .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "subclass of keyerror", "final_sentence": "subclass of keyerror"}
{"comment_sentence_id": 3423, "class": "Option", "comment_sentence": "parameter will be pulled from an environment", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameter will be pulled from an environment", "final_sentence": "parameter will be pulled from an environment"}
{"comment_sentence_id": 734, "class": "RawPostDataException", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 1185, "class": "YouTubeVideo", "comment_sentence": "class for embedding a youtube video in an ipython session, based on its video id.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class for embedding a youtube video in an ipython session based on its video id", "final_sentence": "class for embedding a youtube video in an ipython session based on its video id"}
{"comment_sentence_id": 3663, "class": "PipError", "comment_sentence": "base pip exception", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base pip exception", "final_sentence": "base pip exception"}
{"comment_sentence_id": 3242, "class": "Module_six_moves_urllib_request", "comment_sentence": "lazy loading of moved objects in six^moves.urllib request", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lazy loading of moved objects in six moves urllib request", "final_sentence": "lazy loading of moved objects in six moves urllib request"}
{"comment_sentence_id": 1269, "class": "ConfigDict", "comment_sentence": "a sanity checking, self documenting dictionary of program settings.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a sanity checking self documenting dictionary of program settings", "final_sentence": "a sanity checking self documenting dictionary of program settings"}
{"comment_sentence_id": 5444, "class": "OneHotCategorical", "comment_sentence": "attr probs and attr logits .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr probs and attr logits", "final_sentence": "attr probs and attr logits"}
{"comment_sentence_id": 433, "class": "ListMixin", "comment_sentence": "the maximum legal length optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the maximum legal length optional", "final_sentence": "the maximum legal length optional"}
{"comment_sentence_id": 5063, "class": "EmbeddingBag", "comment_sentence": "this scales the output of the embedding before performing a weighted", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this scales the output of the embedding before performing a weighted", "final_sentence": "this scales the output of the embedding before performing a weighted"}
{"comment_sentence_id": 2500, "class": "Context_", "comment_sentence": "creating instances is neither supported nor useful as it s created", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "creating instances is neither supported nor useful as it s created", "final_sentence": "creating instances is neither supported nor useful as it s created"}
{"comment_sentence_id": 3024, "class": "InternalName", "comment_sentence": "this identifier is not available from the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this identifier is not available from the", "final_sentence": "this identifier is not available from the"}
{"comment_sentence_id": 2563, "class": "DocumentErrorTree", "comment_sentence": "implements a dict like class to query errors by indexes following the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements a dict like class to query errors by indexes following the", "final_sentence": "implements a dict like class to query errors by indexes following the"}
{"comment_sentence_id": 745, "class": "RequestFactoryEnvironmentTests", "comment_sentence": "regression tests for #8551 and #17067 ensure that environment variables", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "regression tests for 8551 and 17067 ensure that environment variables", "final_sentence": "regression tests for 8551 and 17067 ensure that environment variables"}
{"comment_sentence_id": 5716, "class": "Unfold", "comment_sentence": "default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 0", "final_sentence": "default 0"}
{"comment_sentence_id": 4784, "class": "Conv3d", "comment_sentence": "the values of these weights are sampled from", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the values of these weights are sampled from", "final_sentence": "the values of these weights are sampled from"}
{"comment_sentence_id": 250, "class": "CacheHandler", "comment_sentence": "ensure only one instance of each alias exists per thread.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ensure only one instance of each alias exists per thread", "final_sentence": "ensure only one instance of each alias exists per thread"}
{"comment_sentence_id": 3857, "class": "Retry", "comment_sentence": "set to a false value to retry on any verb.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to a false value to retry on any verb", "final_sentence": "set to a false value to retry on any verb"}
{"comment_sentence_id": 2046, "class": "PlotAccessor", "comment_sentence": "colormap to select colors from.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "colormap to select colors from", "final_sentence": "colormap to select colors from"}
{"comment_sentence_id": 118, "class": "BaseCommand", "comment_sentence": "all of their logic in handle , or perform some additional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "all of their logic in handle or perform some additional", "final_sentence": "all of their logic in handle or perform some additional"}
{"comment_sentence_id": 1737, "class": "CategoricalIndex", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 341, "class": "ExceptionThatFailsUnpickling", "comment_sentence": "after pickling, this class fails unpickling with an error about incorrect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "after pickling this class fails unpickling with an error about incorrect", "final_sentence": "after pickling this class fails unpickling with an error about incorrect"}
{"comment_sentence_id": 919, "class": "Audio", "comment_sentence": "numpy 1d array containing the desired waveform mono", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "numpy 1d array containing the desired waveform mono", "final_sentence": "numpy 1d array containing the desired waveform mono"}
{"comment_sentence_id": 5587, "class": "Task", "comment_sentence": "be run by a session.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "be run by a session", "final_sentence": "be run by a session"}
{"comment_sentence_id": 72, "class": "AutoFieldMeta", "comment_sentence": "for detecting automatically generated fields.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for detecting automatically generated fields", "final_sentence": "for detecting automatically generated fields"}
{"comment_sentence_id": 5441, "class": "OneHotCategorical", "comment_sentence": "note attr probs must be non negative, finite and have a non zero sum,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note attr probs must be non negative finite and have a non zero sum", "final_sentence": "note attr probs must be non negative finite and have a non zero sum"}
{"comment_sentence_id": 3315, "class": "omdict", "comment_sentence": "standard dict methods interact with the first value associated with a given", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "standard dict methods interact with the first value associated with a given", "final_sentence": "standard dict methods interact with the first value associated with a given"}
{"comment_sentence_id": 4657, "class": "Caffe2OperatorTestCase", "comment_sentence": "this class includes all the information needed to benchmark an operator.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class includes all the information needed to benchmark an operator", "final_sentence": "this class includes all the information needed to benchmark an operator"}
{"comment_sentence_id": 766, "class": "SameAsLookup", "comment_sentence": "so if a and b are the same feature,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "so if a and b are the same feature", "final_sentence": "so if a and b are the same feature"}
{"comment_sentence_id": 5243, "class": "LBFGS", "comment_sentence": "implements l bfgs algorithm, heavily inspired by minfunc", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements l bfgs algorithm heavily inspired by minfunc", "final_sentence": "implements l bfgs algorithm heavily inspired by minfunc"}
{"comment_sentence_id": 1065, "class": "HelpEnd", "comment_sentence": "and obj?", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and obj", "final_sentence": "and obj"}
{"comment_sentence_id": 2604, "class": "Environment", "comment_sentence": "if this is set to true the first newline after a block is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if this is set to true the first newline after a block is", "final_sentence": "if this is set to true the first newline after a block is"}
{"comment_sentence_id": 5708, "class": "Unfold", "comment_sentence": "it is harder to describe, but this link has a nice visualization of what attr dilation does.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does", "final_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does"}
{"comment_sentence_id": 633, "class": "MultiValueField", "comment_sentence": "aggregate the logic of multiple fields.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "aggregate the logic of multiple fields", "final_sentence": "aggregate the logic of multiple fields"}
{"comment_sentence_id": 3612, "class": "Path", "comment_sentence": "file does indeed not exist, then all further checks are", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "file does indeed not exist then all further checks are", "final_sentence": "file does indeed not exist then all further checks are"}
{"comment_sentence_id": 4507, "class": "BCEWithLogitsLoss", "comment_sentence": "size average bool, optional deprecated see attr reduction .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "size average bool optional deprecated see attr reduction", "final_sentence": "size average bool optional deprecated see attr reduction"}
{"comment_sentence_id": 1856, "class": "ExcelFile", "comment_sentence": "acceptable values are none, xlrd , openpyxl or odf .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "acceptable values are none xlrd openpyxl or odf", "final_sentence": "acceptable values are none xlrd openpyxl or odf"}
{"comment_sentence_id": 5086, "class": "EmbeddingBag", "comment_sentence": "sparse bool, optional if true , gradient w^r.t. attr weight matrix will be a sparse tensor.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sparse bool optional if true gradient w r t attr weight matrix will be a sparse tensor", "final_sentence": "sparse bool optional if true gradient w r t attr weight matrix will be a sparse tensor"}
{"comment_sentence_id": 3474, "class": "PacifyFlushWrapper", "comment_sentence": "notably ^flush is always called on", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "notably flush is always called on", "final_sentence": "notably flush is always called on"}
{"comment_sentence_id": 2569, "class": "Environment", "comment_sentence": "important shared variables like configuration, filters, tests,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "important shared variables like configuration filters tests", "final_sentence": "important shared variables like configuration filters tests"}
{"comment_sentence_id": 4711, "class": "Conv3d", "comment_sentence": "in the simplest case, the output value of the layer with input size math n, c in , d, h, w", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in the simplest case the output value of the layer with input size math n c in d h w", "final_sentence": "in the simplest case the output value of the layer with input size math n c in d h w"}
{"comment_sentence_id": 4111, "class": "TokenStreamIterator", "comment_sentence": "iterate over the stream", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "iterate over the stream", "final_sentence": "iterate over the stream"}
{"comment_sentence_id": 5588, "class": "Task", "comment_sentence": "task outputs are fetched by the session at the end of the run.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "task outputs are fetched by the session at the end of the run", "final_sentence": "task outputs are fetched by the session at the end of the run"}
{"comment_sentence_id": 732, "class": "RawPostDataException", "comment_sentence": "multipart post data if it has been accessed via post,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "multipart post data if it has been accessed via post", "final_sentence": "multipart post data if it has been accessed via post"}
{"comment_sentence_id": 2628, "class": "Environment", "comment_sentence": "for more information have a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for more information have a", "final_sentence": "for more information have a"}
{"comment_sentence_id": 2027, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 3837, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 2944, "class": "HebrewProber", "comment_sentence": "it reduces any sequence of such characters to a single space.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it reduces any sequence of such characters to a single space", "final_sentence": "it reduces any sequence of such characters to a single space"}
{"comment_sentence_id": 3829, "class": "Retry", "comment_sentence": "how many connection related errors to retry on.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "how many connection related errors to retry on", "final_sentence": "how many connection related errors to retry on"}
{"comment_sentence_id": 599, "class": "MultiValueDict", "comment_sentence": "same key.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "same key", "final_sentence": "same key"}
{"comment_sentence_id": 1719, "class": "CategoricalIndex", "comment_sentence": "will be inferred from the data .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "will be inferred from the data", "final_sentence": "will be inferred from the data"}
{"comment_sentence_id": 2024, "class": "PlotAccessor", "comment_sentence": "the matplotlib line style per column.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the matplotlib line style per column", "final_sentence": "the matplotlib line style per column"}
{"comment_sentence_id": 2359, "class": "_BZ2Proxy", "comment_sentence": "this is actually", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is actually", "final_sentence": "this is actually"}
{"comment_sentence_id": 3734, "class": "Request", "comment_sentence": "param headers dictionary of headers to send.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param headers dictionary of headers to send", "final_sentence": "param headers dictionary of headers to send"}
{"comment_sentence_id": 5495, "class": "QuantWrapper", "comment_sentence": "for dequantstub .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for dequantstub", "final_sentence": "for dequantstub"}
{"comment_sentence_id": 4522, "class": "BCEWithLogitsLoss", "comment_sentence": "batch element instead and ignores attr size average .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "batch element instead and ignores attr size average", "final_sentence": "batch element instead and ignores attr size average"}
{"comment_sentence_id": 4277, "class": "Adamax", "comment_sentence": "parameter groups", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 5107, "class": "EmbeddingBag", "comment_sentence": "empty bags ie, having 0 length will have", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "empty bags ie having 0 length will have", "final_sentence": "empty bags ie having 0 length will have"}
{"comment_sentence_id": 262, "class": "Client", "comment_sentence": "a class that can act as a client for testing purposes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a class that can act as a client for testing purposes", "final_sentence": "a class that can act as a client for testing purposes"}
{"comment_sentence_id": 2641, "class": "Environment", "comment_sentence": "autoescape", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "autoescape", "final_sentence": "autoescape"}
{"comment_sentence_id": 5428, "class": "NetModifier", "comment_sentence": "related operators are added to the net.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "related operators are added to the net", "final_sentence": "related operators are added to the net"}
{"comment_sentence_id": 4525, "class": "BCEWithLogitsLoss", "comment_sentence": "none mean sum .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none mean sum", "final_sentence": "none mean sum"}
{"comment_sentence_id": 5516, "class": "SGD", "comment_sentence": "dampening float, optional dampening for momentum default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dampening float optional dampening for momentum default 0", "final_sentence": "dampening float optional dampening for momentum default 0"}
{"comment_sentence_id": 3834, "class": "Retry", "comment_sentence": "how many times to retry on read errors.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "how many times to retry on read errors", "final_sentence": "how many times to retry on read errors"}
{"comment_sentence_id": 4767, "class": "Conv3d", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 2655, "class": "Environment", "comment_sentence": "the size of the cache.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the size of the cache", "final_sentence": "the size of the cache"}
{"comment_sentence_id": 1988, "class": "PlotAccessor", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 1874, "class": "IntegerArray", "comment_sentence": "array of integer optional missing values.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "array of integer optional missing values", "final_sentence": "array of integer optional missing values"}
{"comment_sentence_id": 3609, "class": "Path", "comment_sentence": "param exists if set to true, the file or directory needs to exist for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param exists if set to true the file or directory needs to exist for", "final_sentence": "param exists if set to true the file or directory needs to exist for"}
{"comment_sentence_id": 3023, "class": "InternalName", "comment_sentence": "a new identifier for you.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a new identifier for you", "final_sentence": "a new identifier for you"}
{"comment_sentence_id": 1149, "class": "Struct", "comment_sentence": "overloaded operators.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "overloaded operators", "final_sentence": "overloaded operators"}
{"comment_sentence_id": 681, "class": "OverwritingStorage", "comment_sentence": "unused name.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unused name", "final_sentence": "unused name"}
{"comment_sentence_id": 2808, "class": "ExceptionPexpect", "comment_sentence": "base class for all exceptions raised by this module.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base class for all exceptions raised by this module", "final_sentence": "base class for all exceptions raised by this module"}
{"comment_sentence_id": 1502, "class": "VCardStore", "comment_sentence": "this is a disk backed in memory collection of vcards.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a disk backed in memory collection of vcards", "final_sentence": "this is a disk backed in memory collection of vcards"}
{"comment_sentence_id": 4480, "class": "BCEWithLogitsLoss", "comment_sentence": "note that the targets t i should be numbers", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note that the targets t i should be numbers", "final_sentence": "note that the targets t i should be numbers"}
{"comment_sentence_id": 4465, "class": "BCEWithLogitsLoss", "comment_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the unreduced ie with attr reduction set to none loss can be described as", "final_sentence": "the unreduced ie with attr reduction set to none loss can be described as"}
{"comment_sentence_id": 1881, "class": "IntegerArray", "comment_sentence": "mask a boolean array holding a mask on the data, true is missing", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mask a boolean array holding a mask on the data true is missing", "final_sentence": "mask a boolean array holding a mask on the data true is missing"}
{"comment_sentence_id": 3849, "class": "Retry", "comment_sentence": "status forcelist .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "status forcelist", "final_sentence": "status forcelist"}
{"comment_sentence_id": 348, "class": "FakePayload", "comment_sentence": "this makes sure that views can t do anything under the test client", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this makes sure that views can t do anything under the test client", "final_sentence": "this makes sure that views can t do anything under the test client"}
{"comment_sentence_id": 2671, "class": "Environment", "comment_sentence": "for higher performance it s possible to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for higher performance it s possible to", "final_sentence": "for higher performance it s possible to"}
{"comment_sentence_id": 5517, "class": "SGD", "comment_sentence": "nesterov bool, optional enables nesterov momentum default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "nesterov bool optional enables nesterov momentum default false", "final_sentence": "nesterov bool optional enables nesterov momentum default false"}
{"comment_sentence_id": 2956, "class": "HebrewProber", "comment_sentence": "the hebrewprober is not using any language model.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the hebrewprober is not using any language model", "final_sentence": "the hebrewprober is not using any language model"}
{"comment_sentence_id": 923, "class": "Audio", "comment_sentence": "http msdn^microsoft.com en us library windows hardware dn653308 v vs.85 ^aspx", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "http msdn microsoft com en us library windows hardware dn653308 v vs 85 aspx", "final_sentence": "http msdn microsoft com en us library windows hardware dn653308 v vs 85 aspx"}
{"comment_sentence_id": 3035, "class": "InvalidHeaderError", "comment_sentence": "exception for invalid headers.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "exception for invalid headers", "final_sentence": "exception for invalid headers"}
{"comment_sentence_id": 1177, "class": "UserMagics", "comment_sentence": "their own class.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "their own class", "final_sentence": "their own class"}
{"comment_sentence_id": 273, "class": "Client", "comment_sentence": "html rendered to the end user.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "html rendered to the end user", "final_sentence": "html rendered to the end user"}
{"comment_sentence_id": 1570, "class": "BaseInterfaceTests", "comment_sentence": "interface", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "interface", "final_sentence": "interface"}
{"comment_sentence_id": 5740, "class": "Unfold", "comment_sentence": ", padding .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding", "final_sentence": "padding"}
{"comment_sentence_id": 2999, "class": "HTMLParser", "comment_sentence": "html parser", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "html parser", "final_sentence": "html parser"}
{"comment_sentence_id": 3884, "class": "Retry", "comment_sentence": "each call to meth retry^increment .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each call to meth retry increment", "final_sentence": "each call to meth retry increment"}
{"comment_sentence_id": 2491, "class": "CommandError", "comment_sentence": "raised when there is an error in command line arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "raised when there is an error in command line arguments", "final_sentence": "raised when there is an error in command line arguments"}
{"comment_sentence_id": 3790, "class": "Resource", "comment_sentence": "a class representing an in package resource, such as a data file.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a class representing an in package resource such as a data file", "final_sentence": "a class representing an in package resource such as a data file"}
{"comment_sentence_id": 545, "class": "MigrationLoader", "comment_sentence": "inherit from django^db.migrations^migration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "inherit from django db migrations migration", "final_sentence": "inherit from django db migrations migration"}
{"comment_sentence_id": 5696, "class": "Unfold", "comment_sentence": "where math text spatial size is formed by the spatial dimensions", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "where math text spatial size is formed by the spatial dimensions", "final_sentence": "where math text spatial size is formed by the spatial dimensions"}
{"comment_sentence_id": 2029, "class": "PlotAccessor", "comment_sentence": "use log scaling or symlog scaling on y axis.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use log scaling or symlog scaling on y axis", "final_sentence": "use log scaling or symlog scaling on y axis"}
{"comment_sentence_id": 865, "class": "UserCreationForm", "comment_sentence": "a form that creates a user, with no privileges, from the given username and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a form that creates a user with no privileges from the given username and", "final_sentence": "a form that creates a user with no privileges from the given username and"}
{"comment_sentence_id": 2585, "class": "Environment", "comment_sentence": "variable end string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "variable end string", "final_sentence": "variable end string"}
{"comment_sentence_id": 3675, "class": "PoolManager", "comment_sentence": "class urllib3^connectionpool.connectionpool instances.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class urllib3 connectionpool connectionpool instances", "final_sentence": "class urllib3 connectionpool connectionpool instances"}
{"comment_sentence_id": 5326, "class": "MultiLabelMarginLoss", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 3614, "class": "Path", "comment_sentence": "param file okay controls if a file is a possible value.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param file okay controls if a file is a possible value", "final_sentence": "param file okay controls if a file is a possible value"}
{"comment_sentence_id": 2597, "class": "Environment", "comment_sentence": "see also ref line statements .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see also ref line statements", "final_sentence": "see also ref line statements"}
{"comment_sentence_id": 1995, "class": "PlotAccessor", "comment_sentence": "only used if data is a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only used if data is a", "final_sentence": "only used if data is a"}
{"comment_sentence_id": 346, "class": "FakePayload", "comment_sentence": "the network can t be sought and cannot be read outside of its content", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the network can t be sought and cannot be read outside of its content", "final_sentence": "the network can t be sought and cannot be read outside of its content"}
{"comment_sentence_id": 3066, "class": "LRUCache", "comment_sentence": "won t do any harm.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "won t do any harm", "final_sentence": "won t do any harm"}
{"comment_sentence_id": 778, "class": "Serializer", "comment_sentence": "convert a queryset to json.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "convert a queryset to json", "final_sentence": "convert a queryset to json"}
{"comment_sentence_id": 5512, "class": "SGD", "comment_sentence": "parameter groups", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 2614, "class": "Environment", "comment_sentence": "must be one of r ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "must be one of r", "final_sentence": "must be one of r"}
{"comment_sentence_id": 4464, "class": "BCEWithLogitsLoss", "comment_sentence": "we take advantage of the log sum exp trick for numerical stability.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "we take advantage of the log sum exp trick for numerical stability", "final_sentence": "we take advantage of the log sum exp trick for numerical stability"}
{"comment_sentence_id": 3161, "class": "MemcachedBytecodeCache", "comment_sentence": "this class implements a bytecode cache that uses a memcache cache for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class implements a bytecode cache that uses a memcache cache for", "final_sentence": "this class implements a bytecode cache that uses a memcache cache for"}
{"comment_sentence_id": 3782, "class": "RequirementUninstaller", "comment_sentence": "if the inner block", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the inner block", "final_sentence": "if the inner block"}
{"comment_sentence_id": 4279, "class": "Adamax", "comment_sentence": "betas tuple float, float , optional coefficients used for computing", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "betas tuple float float optional coefficients used for computing", "final_sentence": "betas tuple float float optional coefficients used for computing"}
{"comment_sentence_id": 930, "class": "Audio", "comment_sentence": "dependent.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dependent", "final_sentence": "dependent"}
{"comment_sentence_id": 4677, "class": "ConstantPad3d", "comment_sentence": "math text padding top , math text padding bottom ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math text padding top math text padding bottom", "final_sentence": "math text padding top math text padding bottom"}
{"comment_sentence_id": 3830, "class": "Retry", "comment_sentence": "these are errors raised before the request is sent to the remote server,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "these are errors raised before the request is sent to the remote server", "final_sentence": "these are errors raised before the request is sent to the remote server"}
{"comment_sentence_id": 871, "class": "VariableWrapper", "comment_sentence": "an adapter class for cursor variables that prevents the wrapped object", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an adapter class for cursor variables that prevents the wrapped object", "final_sentence": "an adapter class for cursor variables that prevents the wrapped object"}
{"comment_sentence_id": 5578, "class": "Subset", "comment_sentence": "arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 4377, "class": "BatchNorm1d", "comment_sentence": "eps a value added to the denominator for numerical stability.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "eps a value added to the denominator for numerical stability", "final_sentence": "eps a value added to the denominator for numerical stability"}
{"comment_sentence_id": 1711, "class": "CategoricalIndex", "comment_sentence": "data array like 1 dimensional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "data array like 1 dimensional", "final_sentence": "data array like 1 dimensional"}
{"comment_sentence_id": 2025, "class": "PlotAccessor", "comment_sentence": "logx bool or sym , default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "logx bool or sym default false", "final_sentence": "logx bool or sym default false"}
{"comment_sentence_id": 816, "class": "TemplateDoesNotExist", "comment_sentence": "this", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this", "final_sentence": "this"}
{"comment_sentence_id": 3625, "class": "Path", "comment_sentence": "param allow dash if this is set to true , a single dash to indicate", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param allow dash if this is set to true a single dash to indicate", "final_sentence": "param allow dash if this is set to true a single dash to indicate"}
{"comment_sentence_id": 3735, "class": "Request", "comment_sentence": "param files dictionary of filename fileobject files to multipart upload.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param files dictionary of filename fileobject files to multipart upload", "final_sentence": "param files dictionary of filename fileobject files to multipart upload"}
{"comment_sentence_id": 4521, "class": "BCEWithLogitsLoss", "comment_sentence": "when attr reduce is false , returns a loss per", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when attr reduce is false returns a loss per", "final_sentence": "when attr reduce is false returns a loss per"}
{"comment_sentence_id": 4538, "class": "BCEWithLogitsLoss", "comment_sentence": "output scalar.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "output scalar", "final_sentence": "output scalar"}
{"comment_sentence_id": 3876, "class": "Retry", "comment_sentence": "param bool raise on redirect whether, if the number of redirects is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param bool raise on redirect whether if the number of redirects is", "final_sentence": "param bool raise on redirect whether if the number of redirects is"}
{"comment_sentence_id": 5651, "class": "TransformerEncoderLayer", "comment_sentence": "in a different way during application.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in a different way during application", "final_sentence": "in a different way during application"}
{"comment_sentence_id": 5647, "class": "TransformerEncoderLayer", "comment_sentence": "attention is all you need.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attention is all you need", "final_sentence": "attention is all you need"}
{"comment_sentence_id": 5729, "class": "Unfold", "comment_sentence": "class torch^nn.unfold extracts the values in the local blocks by", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class torch nn unfold extracts the values in the local blocks by", "final_sentence": "class torch nn unfold extracts the values in the local blocks by"}
{"comment_sentence_id": 227, "class": "BoundWidget", "comment_sentence": "a container class used for iterating over widgets.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a container class used for iterating over widgets", "final_sentence": "a container class used for iterating over widgets"}
{"comment_sentence_id": 1871, "class": "Holiday", "comment_sentence": "for observance.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for observance", "final_sentence": "for observance"}
{"comment_sentence_id": 2667, "class": "Environment", "comment_sentence": "if", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if", "final_sentence": "if"}
{"comment_sentence_id": 4535, "class": "BCEWithLogitsLoss", "comment_sentence": "shape", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "shape", "final_sentence": "shape"}
{"comment_sentence_id": 5082, "class": "EmbeddingBag", "comment_sentence": "into consideration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "into consideration", "final_sentence": "into consideration"}
{"comment_sentence_id": 1650, "class": "CategoricalDtype", "comment_sentence": "whether or not this categorical is treated as a ordered categorical.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether or not this categorical is treated as a ordered categorical", "final_sentence": "whether or not this categorical is treated as a ordered categorical"}
{"comment_sentence_id": 397, "class": "InputStreamExhausted", "comment_sentence": "no more reads are allowed from this device.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "no more reads are allowed from this device", "final_sentence": "no more reads are allowed from this device"}
{"comment_sentence_id": 4241, "class": "Adam", "comment_sentence": "parameter groups", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 3827, "class": "Retry", "comment_sentence": "set to false to disable and imply raise on redirect false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to false to disable and imply raise on redirect false", "final_sentence": "set to false to disable and imply raise on redirect false"}
{"comment_sentence_id": 5752, "class": "Unfold", "comment_sentence": "when the divisor tensor contains no zero elements, then", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when the divisor tensor contains no zero elements then", "final_sentence": "when the divisor tensor contains no zero elements then"}
{"comment_sentence_id": 4757, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 3858, "class": "Retry", "comment_sentence": "param iterable status forcelist", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param iterable status forcelist", "final_sentence": "param iterable status forcelist"}
{"comment_sentence_id": 3478, "class": "PacifyFlushWrapper", "comment_sentence": "pipe, all calls and attributes are proxied.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pipe all calls and attributes are proxied", "final_sentence": "pipe all calls and attributes are proxied"}
{"comment_sentence_id": 5703, "class": "Unfold", "comment_sentence": "attr stride controls the stride for the sliding blocks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr stride controls the stride for the sliding blocks", "final_sentence": "attr stride controls the stride for the sliding blocks"}
{"comment_sentence_id": 4369, "class": "BatchNorm1d", "comment_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t", "final_sentence": "math hat x text new 1 text momentum times hat x text momentum times x t"}
{"comment_sentence_id": 2028, "class": "PlotAccessor", "comment_sentence": "logy bool or sym default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "logy bool or sym default false", "final_sentence": "logy bool or sym default false"}
{"comment_sentence_id": 764, "class": "SameAsLookup", "comment_sentence": "it tests actual geometric", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it tests actual geometric", "final_sentence": "it tests actual geometric"}
{"comment_sentence_id": 4468, "class": "BCEWithLogitsLoss", "comment_sentence": "l n w n left y n cdot log sigma x n", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "l n w n left y n cdot log sigma x n", "final_sentence": "l n w n left y n cdot log sigma x n"}
{"comment_sentence_id": 1593, "class": "BooleanArray", "comment_sentence": "indicates missing .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "indicates missing", "final_sentence": "indicates missing"}
{"comment_sentence_id": 5565, "class": "StackTransform", "comment_sentence": "in a way compatible with func torch^stack .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in a way compatible with func torch stack", "final_sentence": "in a way compatible with func torch stack"}
{"comment_sentence_id": 126, "class": "BaseCommand", "comment_sentence": "a boolean indicating whether the command outputs sql", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a boolean indicating whether the command outputs sql", "final_sentence": "a boolean indicating whether the command outputs sql"}
{"comment_sentence_id": 2285, "class": "StringArray", "comment_sentence": "pd^array a , none, c , dtype string a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pd array a none c dtype string a", "final_sentence": "pd array a none c dtype string a"}
{"comment_sentence_id": 1597, "class": "BooleanArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 3780, "class": "RequirementUninstaller", "comment_sentence": "a context manager to remove a package for the inner block.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a context manager to remove a package for the inner block", "final_sentence": "a context manager to remove a package for the inner block"}
{"comment_sentence_id": 746, "class": "RequestFactoryEnvironmentTests", "comment_sentence": "are set correctly in requestfactory.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "are set correctly in requestfactory", "final_sentence": "are set correctly in requestfactory"}
{"comment_sentence_id": 670, "class": "Operation", "comment_sentence": "as actually performing it against a live database.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as actually performing it against a live database", "final_sentence": "as actually performing it against a live database"}
{"comment_sentence_id": 2647, "class": "Environment", "comment_sentence": "be a callable that is passed the template name and has to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "be a callable that is passed the template name and has to", "final_sentence": "be a callable that is passed the template name and has to"}
{"comment_sentence_id": 2224, "class": "SetopCheck", "comment_sentence": "this is called to decorate the set operations of intervalindex", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is called to decorate the set operations of intervalindex", "final_sentence": "this is called to decorate the set operations of intervalindex"}
{"comment_sentence_id": 414, "class": "ListMixin", "comment_sentence": "same as above, but for use within the class optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "same as above but for use within the class optional", "final_sentence": "same as above but for use within the class optional"}
{"comment_sentence_id": 3793, "class": "Resource", "comment_sentence": "class resourcefinder which manages the resource.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class resourcefinder which manages the resource", "final_sentence": "class resourcefinder which manages the resource"}
{"comment_sentence_id": 5101, "class": "EmbeddingBag", "comment_sentence": "it will be treated as a concatenation of multiple bags sequences .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it will be treated as a concatenation of multiple bags sequences", "final_sentence": "it will be treated as a concatenation of multiple bags sequences"}
{"comment_sentence_id": 1658, "class": "CategoricalDtype", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 5890, "class": "UploadTaskGroupBuilder", "comment_sentence": "a simple class to upload checkpoints.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a simple class to upload checkpoints", "final_sentence": "a simple class to upload checkpoints"}
{"comment_sentence_id": 2448, "class": "CaseInsensitiveDict", "comment_sentence": "keys , items , iterkeys , and iteritems", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "keys items iterkeys and iteritems", "final_sentence": "keys items iterkeys and iteritems"}
{"comment_sentence_id": 2583, "class": "Environment", "comment_sentence": "the string marking the beginning of a print statement.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the beginning of a print statement", "final_sentence": "the string marking the beginning of a print statement"}
{"comment_sentence_id": 2602, "class": "Environment", "comment_sentence": "versionadded 22", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionadded 22", "final_sentence": "versionadded 22"}
{"comment_sentence_id": 1758, "class": "CategoricalIndex", "comment_sentence": "see the user guide", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see the user guide", "final_sentence": "see the user guide"}
{"comment_sentence_id": 3840, "class": "Retry", "comment_sentence": "limit this to avoid infinite redirect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "limit this to avoid infinite redirect", "final_sentence": "limit this to avoid infinite redirect"}
{"comment_sentence_id": 1722, "class": "CategoricalIndex", "comment_sentence": "categorical.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categorical", "final_sentence": "categorical"}
{"comment_sentence_id": 912, "class": "Audio", "comment_sentence": "create an audio object.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "create an audio object", "final_sentence": "create an audio object"}
{"comment_sentence_id": 5719, "class": "Unfold", "comment_sentence": "neighborhood.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "neighborhood", "final_sentence": "neighborhood"}
{"comment_sentence_id": 3842, "class": "Retry", "comment_sentence": "a redirect is a http response with a status code 301, 302, 303, 307 or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a redirect is a http response with a status code 301 302 303 307 or", "final_sentence": "a redirect is a http response with a status code 301 302 303 307 or"}
{"comment_sentence_id": 1095, "class": "IPythonInputSplitter", "comment_sentence": "an input splitter that recognizes all of ipython s special syntax.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an input splitter that recognizes all of ipython s special syntax", "final_sentence": "an input splitter that recognizes all of ipython s special syntax"}
{"comment_sentence_id": 5654, "class": "TransformerEncoderLayer", "comment_sentence": "nhead the number of heads in the multiheadattention models required .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "nhead the number of heads in the multiheadattention models required", "final_sentence": "nhead the number of heads in the multiheadattention models required"}
{"comment_sentence_id": 4221, "class": "Adadelta", "comment_sentence": "lr float, optional coefficient that scale delta before it is applied", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lr float optional coefficient that scale delta before it is applied", "final_sentence": "lr float optional coefficient that scale delta before it is applied"}
{"comment_sentence_id": 5209, "class": "ExceptionWrapper", "comment_sentence": "wraps an exception plus traceback to communicate across threads", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "wraps an exception plus traceback to communicate across threads", "final_sentence": "wraps an exception plus traceback to communicate across threads"}
{"comment_sentence_id": 505, "class": "MigrationGraph", "comment_sentence": "each migration is a node, and each dependency is an edge.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each migration is a node and each dependency is an edge", "final_sentence": "each migration is a node and each dependency is an edge"}
{"comment_sentence_id": 5103, "class": "EmbeddingBag", "comment_sentence": "starting index positions of each bag in attr input .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "starting index positions of each bag in attr input", "final_sentence": "starting index positions of each bag in attr input"}
{"comment_sentence_id": 1997, "class": "PlotAccessor", "comment_sentence": "kind str", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "kind str", "final_sentence": "kind str"}
{"comment_sentence_id": 5577, "class": "Subset", "comment_sentence": "subset of a dataset at specified indices.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "subset of a dataset at specified indices", "final_sentence": "subset of a dataset at specified indices"}
{"comment_sentence_id": 931, "class": "Audio", "comment_sentence": "url unicode", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "url unicode", "final_sentence": "url unicode"}
{"comment_sentence_id": 2011, "class": "PlotAccessor", "comment_sentence": "use index bool, default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use index bool default true", "final_sentence": "use index bool default true"}
{"comment_sentence_id": 5751, "class": "Unfold", "comment_sentence": "divisor fold unfold input ones", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "divisor fold unfold input ones", "final_sentence": "divisor fold unfold input ones"}
{"comment_sentence_id": 2008, "class": "PlotAccessor", "comment_sentence": "scatter scatter plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "scatter scatter plot", "final_sentence": "scatter scatter plot"}
{"comment_sentence_id": 3868, "class": "Retry", "comment_sentence": "backoff factor 2 number of total retries 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "backoff factor 2 number of total retries 1", "final_sentence": "backoff factor 2 number of total retries 1"}
{"comment_sentence_id": 2383, "class": "And", "comment_sentence": "expressions may be separated by whitespace.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "expressions may be separated by whitespace", "final_sentence": "expressions may be separated by whitespace"}
{"comment_sentence_id": 4765, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 2640, "class": "Environment", "comment_sentence": "none implicitly into an empty string here.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none implicitly into an empty string here", "final_sentence": "none implicitly into an empty string here"}
{"comment_sentence_id": 1734, "class": "CategoricalIndex", "comment_sentence": "codes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "codes", "final_sentence": "codes"}
{"comment_sentence_id": 471, "class": "ManagementForm", "comment_sentence": "keep track of how many form instances are displayed on the page.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "keep track of how many form instances are displayed on the page", "final_sentence": "keep track of how many form instances are displayed on the page"}
{"comment_sentence_id": 1743, "class": "CategoricalIndex", "comment_sentence": "set categories", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set categories", "final_sentence": "set categories"}
{"comment_sentence_id": 4486, "class": "BCEWithLogitsLoss", "comment_sentence": "l n,c w n,c left p c y n,c cdot log sigma x n,c", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "l n c w n c left p c y n c cdot log sigma x n c", "final_sentence": "l n c w n c left p c y n c cdot log sigma x n c"}
{"comment_sentence_id": 3665, "class": "PoolManager", "comment_sentence": "allows for arbitrary requests while transparently keeping track of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "allows for arbitrary requests while transparently keeping track of", "final_sentence": "allows for arbitrary requests while transparently keeping track of"}
{"comment_sentence_id": 4890, "class": "CyclicLR", "comment_sentence": "cyclical learning rate policy changes the learning rate after every batch.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cyclical learning rate policy changes the learning rate after every batch", "final_sentence": "cyclical learning rate policy changes the learning rate after every batch"}
{"comment_sentence_id": 4240, "class": "Adam", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 4353, "class": "BatchNorm1d", "comment_sentence": "of size c where c is the input size .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of size c where c is the input size", "final_sentence": "of size c where c is the input size"}
{"comment_sentence_id": 5705, "class": "Unfold", "comment_sentence": "sides for attr padding number of points for each dimension before", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sides for attr padding number of points for each dimension before", "final_sentence": "sides for attr padding number of points for each dimension before"}
{"comment_sentence_id": 2326, "class": "StringMethods", "comment_sentence": "methods, with some inspiration from r s stringr package.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "methods with some inspiration from r s stringr package", "final_sentence": "methods with some inspiration from r s stringr package"}
{"comment_sentence_id": 3835, "class": "Retry", "comment_sentence": "these errors are raised after the request was sent to the server, so the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "these errors are raised after the request was sent to the server so the", "final_sentence": "these errors are raised after the request was sent to the server so the"}
{"comment_sentence_id": 5559, "class": "SharedCache", "comment_sentence": "dictionary from multiprocessing handles to storageweakref", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dictionary from multiprocessing handles to storageweakref", "final_sentence": "dictionary from multiprocessing handles to storageweakref"}
{"comment_sentence_id": 3867, "class": "Retry", "comment_sentence": "urllib3 will sleep for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "urllib3 will sleep for", "final_sentence": "urllib3 will sleep for"}
{"comment_sentence_id": 5653, "class": "TransformerEncoderLayer", "comment_sentence": "d model the number of expected features in the input required .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "d model the number of expected features in the input required", "final_sentence": "d model the number of expected features in the input required"}
{"comment_sentence_id": 2230, "class": "SQLiteTable", "comment_sentence": "patch the sqltable for fallback support.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "patch the sqltable for fallback support", "final_sentence": "patch the sqltable for fallback support"}
{"comment_sentence_id": 4718, "class": "Conv3d", "comment_sentence": "attr padding controls the amount of implicit zero paddings on both", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr padding controls the amount of implicit zero paddings on both", "final_sentence": "attr padding controls the amount of implicit zero paddings on both"}
{"comment_sentence_id": 5340, "class": "MultiLabelMarginLoss", "comment_sentence": "note that for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note that for", "final_sentence": "note that for"}
{"comment_sentence_id": 3629, "class": "Path", "comment_sentence": "the default is none which", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the default is none which", "final_sentence": "the default is none which"}
{"comment_sentence_id": 1718, "class": "CategoricalIndex", "comment_sentence": "if the categories are not given here and also not in dtype , they", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the categories are not given here and also not in dtype they", "final_sentence": "if the categories are not given here and also not in dtype they"}
{"comment_sentence_id": 4476, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname sum l , & text if reduction text sum .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "operatorname sum l text if reduction text sum", "final_sentence": "operatorname sum l text if reduction text sum"}
{"comment_sentence_id": 2021, "class": "PlotAccessor", "comment_sentence": "legend bool or reverse", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "legend bool or reverse", "final_sentence": "legend bool or reverse"}
{"comment_sentence_id": 1851, "class": "ExcelFile", "comment_sentence": "path^local.localpath ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "path local localpath", "final_sentence": "path local localpath"}
{"comment_sentence_id": 2340, "class": "TestDatetimelikeSubtype", "comment_sentence": "tests specific to intervalindex with datetime like subtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests specific to intervalindex with datetime like subtype", "final_sentence": "tests specific to intervalindex with datetime like subtype"}
{"comment_sentence_id": 863, "class": "UpdateError", "comment_sentence": "occurs if django tries to update a session that was deleted.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "occurs if django tries to update a session that was deleted", "final_sentence": "occurs if django tries to update a session that was deleted"}
{"comment_sentence_id": 2237, "class": "SQLTable", "comment_sentence": "also holds various flags needed to avoid having to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "also holds various flags needed to avoid having to", "final_sentence": "also holds various flags needed to avoid having to"}
{"comment_sentence_id": 4478, "class": "BCEWithLogitsLoss", "comment_sentence": "this is used for measuring the error of a reconstruction in for example", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is used for measuring the error of a reconstruction in for example", "final_sentence": "this is used for measuring the error of a reconstruction in for example"}
{"comment_sentence_id": 4870, "class": "ConvReLU3d", "comment_sentence": "a convrelu3d module is a fused module of conv3d and relu", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a convrelu3d module is a fused module of conv3d and relu", "final_sentence": "a convrelu3d module is a fused module of conv3d and relu"}
{"comment_sentence_id": 5736, "class": "Unfold", "comment_sentence": "class torch^nn.unfold instances created with the same", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class torch nn unfold instances created with the same", "final_sentence": "class torch nn unfold instances created with the same"}
{"comment_sentence_id": 5100, "class": "EmbeddingBag", "comment_sentence": "if attr input is 1d of shape n ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr input is 1d of shape n", "final_sentence": "if attr input is 1d of shape n"}
{"comment_sentence_id": 257, "class": "ChunkIter", "comment_sentence": "given a file like object as the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "given a file like object as the", "final_sentence": "given a file like object as the"}
{"comment_sentence_id": 4391, "class": "BatchNorm1d", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 4223, "class": "Adadelta", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 893, "class": "XFrameOptionsMiddleware", "comment_sentence": "do not set the header if it s already set or if the response contains", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "do not set the header if it s already set or if the response contains", "final_sentence": "do not set the header if it s already set or if the response contains"}
{"comment_sentence_id": 3807, "class": "Retry", "comment_sentence": "each retry attempt will create a new retry object with updated values, so", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each retry attempt will create a new retry object with updated values so", "final_sentence": "each retry attempt will create a new retry object with updated values so"}
{"comment_sentence_id": 3395, "class": "Option", "comment_sentence": "param show envvar controls if an environment variable should be shown on", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param show envvar controls if an environment variable should be shown on", "final_sentence": "param show envvar controls if an environment variable should be shown on"}
{"comment_sentence_id": 4871, "class": "ConvReLU3d", "comment_sentence": "we adopt the same interface as class torch^nn.quantized^conv3d .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "we adopt the same interface as class torch nn quantized conv3d", "final_sentence": "we adopt the same interface as class torch nn quantized conv3d"}
{"comment_sentence_id": 5892, "class": "UseOptimizer", "comment_sentence": "context class to allow setting the current context.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "context class to allow setting the current context", "final_sentence": "context class to allow setting the current context"}
{"comment_sentence_id": 4723, "class": "Conv3d", "comment_sentence": "attr in channels and attr out channels must both be divisible by", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr in channels and attr out channels must both be divisible by", "final_sentence": "attr in channels and attr out channels must both be divisible by"}
{"comment_sentence_id": 4761, "class": "Conv3d", "comment_sentence": "accepted values zeros and circular default zeros", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "accepted values zeros and circular default zeros", "final_sentence": "accepted values zeros and circular default zeros"}
{"comment_sentence_id": 3668, "class": "PoolManager", "comment_sentence": "number of connection pools to cache before discarding the least", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "number of connection pools to cache before discarding the least", "final_sentence": "number of connection pools to cache before discarding the least"}
{"comment_sentence_id": 431, "class": "ListMixin", "comment_sentence": "the minimum legal length optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the minimum legal length optional", "final_sentence": "the minimum legal length optional"}
{"comment_sentence_id": 4735, "class": "Conv3d", "comment_sentence": "a single int in which case the same value is used for the depth, height and width dimension", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a single int in which case the same value is used for the depth height and width dimension", "final_sentence": "a single int in which case the same value is used for the depth height and width dimension"}
{"comment_sentence_id": 5325, "class": "MultiLabelMarginLoss", "comment_sentence": "for each sample in the mini batch", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for each sample in the mini batch", "final_sentence": "for each sample in the mini batch"}
{"comment_sentence_id": 5366, "class": "MultiLabelMarginLoss", "comment_sentence": "target math c or math n, c , label targets padded by 1 ensuring same shape as the input.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "target math c or math n c label targets padded by 1 ensuring same shape as the input", "final_sentence": "target math c or math n c label targets padded by 1 ensuring same shape as the input"}
{"comment_sentence_id": 947, "class": "Audio", "comment_sentence": "default is false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default is false", "final_sentence": "default is false"}
{"comment_sentence_id": 3411, "class": "Option", "comment_sentence": "auto detection.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "auto detection", "final_sentence": "auto detection"}
{"comment_sentence_id": 5342, "class": "MultiLabelMarginLoss", "comment_sentence": "if the field attr size average", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 304, "class": "CustomArticleAdmin", "comment_sentence": "tests various hooks for using custom templates and contexts.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests various hooks for using custom templates and contexts", "final_sentence": "tests various hooks for using custom templates and contexts"}
{"comment_sentence_id": 1733, "class": "CategoricalIndex", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 5511, "class": "SGD", "comment_sentence": "params iterable iterable of parameters to optimize or dicts defining", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "params iterable iterable of parameters to optimize or dicts defining", "final_sentence": "params iterable iterable of parameters to optimize or dicts defining"}
{"comment_sentence_id": 2608, "class": "Environment", "comment_sentence": "lstrip blocks", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lstrip blocks", "final_sentence": "lstrip blocks"}
{"comment_sentence_id": 1148, "class": "Struct", "comment_sentence": "intelligent merging.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "intelligent merging", "final_sentence": "intelligent merging"}
{"comment_sentence_id": 2062, "class": "PlotAccessor", "comment_sentence": "yerr dataframe, series, array like, dict and str", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "yerr dataframe series array like dict and str", "final_sentence": "yerr dataframe series array like dict and str"}
{"comment_sentence_id": 2612, "class": "Environment", "comment_sentence": "newline sequence", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "newline sequence", "final_sentence": "newline sequence"}
{"comment_sentence_id": 3864, "class": "Retry", "comment_sentence": "a backoff factor to apply between attempts after the second try", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a backoff factor to apply between attempts after the second try", "final_sentence": "a backoff factor to apply between attempts after the second try"}
{"comment_sentence_id": 3854, "class": "Retry", "comment_sentence": "idempotent multiple requests with the same parameters end with the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "idempotent multiple requests with the same parameters end with the", "final_sentence": "idempotent multiple requests with the same parameters end with the"}
{"comment_sentence_id": 655, "class": "MultiWidget", "comment_sentence": "in addition to the values added by widget^get context , this widget", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in addition to the values added by widget get context this widget", "final_sentence": "in addition to the values added by widget get context this widget"}
{"comment_sentence_id": 2349, "class": "TestSorted", "comment_sentence": "everything you wanted to test about sorting", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "everything you wanted to test about sorting", "final_sentence": "everything you wanted to test about sorting"}
{"comment_sentence_id": 2591, "class": "Environment", "comment_sentence": "comment end string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "comment end string", "final_sentence": "comment end string"}
{"comment_sentence_id": 866, "class": "UserCreationForm", "comment_sentence": "password.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "password", "final_sentence": "password"}
{"comment_sentence_id": 2678, "class": "Environment", "comment_sentence": "enable async", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "enable async", "final_sentence": "enable async"}
{"comment_sentence_id": 5646, "class": "TransformerEncoderLayer", "comment_sentence": "2017", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "2017", "final_sentence": "2017"}
{"comment_sentence_id": 1899, "class": "IntegerArray", "comment_sentence": "create an integerarray with func pandas^array .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "create an integerarray with func pandas array", "final_sentence": "create an integerarray with func pandas array"}
{"comment_sentence_id": 347, "class": "FakePayload", "comment_sentence": "length.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "length", "final_sentence": "length"}
{"comment_sentence_id": 1760, "class": "CategoricalIndex", "comment_sentence": "for more.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for more", "final_sentence": "for more"}
{"comment_sentence_id": 3880, "class": "Retry", "comment_sentence": "whether we should raise an exception, or return a response,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether we should raise an exception or return a response", "final_sentence": "whether we should raise an exception or return a response"}
{"comment_sentence_id": 5357, "class": "MultiLabelMarginLoss", "comment_sentence": "mean the sum of the output will be divided by the number of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mean the sum of the output will be divided by the number of", "final_sentence": "mean the sum of the output will be divided by the number of"}
{"comment_sentence_id": 4883, "class": "CyclicLR", "comment_sentence": "sets the learning rate of each parameter group according to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sets the learning rate of each parameter group according to", "final_sentence": "sets the learning rate of each parameter group according to"}
{"comment_sentence_id": 3074, "class": "Markup", "comment_sentence": "safe.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "safe", "final_sentence": "safe"}
{"comment_sentence_id": 1850, "class": "ExcelFile", "comment_sentence": "io str, path object pathlib^path or py.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "io str path object pathlib path or py", "final_sentence": "io str path object pathlib path or py"}
{"comment_sentence_id": 4253, "class": "Adam", "comment_sentence": "on the convergence of adam and beyond", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on the convergence of adam and beyond", "final_sentence": "on the convergence of adam and beyond"}
{"comment_sentence_id": 1146, "class": "Struct", "comment_sentence": "style access.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "style access", "final_sentence": "style access"}
{"comment_sentence_id": 2361, "class": "_BZ2Proxy", "comment_sentence": "class which unlike gzip^gzipfile has no support for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class which unlike gzip gzipfile has no support for", "final_sentence": "class which unlike gzip gzipfile has no support for"}
{"comment_sentence_id": 928, "class": "Audio", "comment_sentence": "if the array option is used, the waveform will be normalized.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the array option is used the waveform will be normalized", "final_sentence": "if the array option is used the waveform will be normalized"}
{"comment_sentence_id": 64, "class": "AutoFieldMeta", "comment_sentence": "create a non integer automatically generated field using column defaults", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "create a non integer automatically generated field using column defaults", "final_sentence": "create a non integer automatically generated field using column defaults"}
{"comment_sentence_id": 2023, "class": "PlotAccessor", "comment_sentence": "style list or dict", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "style list or dict", "final_sentence": "style list or dict"}
{"comment_sentence_id": 917, "class": "Audio", "comment_sentence": "data numpy array, list, unicode, str or bytes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "data numpy array list unicode str or bytes", "final_sentence": "data numpy array list unicode str or bytes"}
{"comment_sentence_id": 2680, "class": "Environment", "comment_sentence": "you to take advantage of newer python features.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "you to take advantage of newer python features", "final_sentence": "you to take advantage of newer python features"}
{"comment_sentence_id": 3062, "class": "LRUCache", "comment_sentence": "a simple lru cache implementation.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a simple lru cache implementation", "final_sentence": "a simple lru cache implementation"}
{"comment_sentence_id": 5561, "class": "StackedLSTMWithDropout", "comment_sentence": "necessary for iterating through self^layers and dropout support", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "necessary for iterating through self layers and dropout support", "final_sentence": "necessary for iterating through self layers and dropout support"}
{"comment_sentence_id": 2610, "class": "Environment", "comment_sentence": "from the start of a line to a block.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "from the start of a line to a block", "final_sentence": "from the start of a line to a block"}
{"comment_sentence_id": 3294, "class": "NotMyLock", "comment_sentence": "raised when an attempt is made to unlock a file someone else locked.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "raised when an attempt is made to unlock a file someone else locked", "final_sentence": "raised when an attempt is made to unlock a file someone else locked"}
{"comment_sentence_id": 2386, "class": "And", "comment_sentence": "suppress backtracking.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "suppress backtracking", "final_sentence": "suppress backtracking"}
{"comment_sentence_id": 3394, "class": "Option", "comment_sentence": "this is particularly useful for dynamic options.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is particularly useful for dynamic options", "final_sentence": "this is particularly useful for dynamic options"}
{"comment_sentence_id": 5099, "class": "EmbeddingBag", "comment_sentence": "attr offsets is ignored and required to be none in this case.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr offsets is ignored and required to be none in this case", "final_sentence": "attr offsets is ignored and required to be none in this case"}
{"comment_sentence_id": 3844, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 4729, "class": "Conv3d", "comment_sentence": "and producing half the output channels, and both subsequently", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and producing half the output channels and both subsequently", "final_sentence": "and producing half the output channels and both subsequently"}
{"comment_sentence_id": 4781, "class": "Conv3d", "comment_sentence": "weight tensor the learnable weights of the module of shape", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight tensor the learnable weights of the module of shape", "final_sentence": "weight tensor the learnable weights of the module of shape"}
{"comment_sentence_id": 2015, "class": "PlotAccessor", "comment_sentence": "if a string is passed, print the string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a string is passed print the string", "final_sentence": "if a string is passed print the string"}
{"comment_sentence_id": 4719, "class": "Conv3d", "comment_sentence": "sides for attr padding number of points for each dimension.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "sides for attr padding number of points for each dimension", "final_sentence": "sides for attr padding number of points for each dimension"}
{"comment_sentence_id": 1078, "class": "InteractiveShellApp", "comment_sentence": "as part of configuring a shell environment.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as part of configuring a shell environment", "final_sentence": "as part of configuring a shell environment"}
{"comment_sentence_id": 5649, "class": "TransformerEncoderLayer", "comment_sentence": "neural information processing systems, pages 6000 6010.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "neural information processing systems pages 6000 6010", "final_sentence": "neural information processing systems pages 6000 6010"}
{"comment_sentence_id": 4726, "class": "Conv3d", "comment_sentence": "at groups 1, all inputs are convolved to all outputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at groups 1 all inputs are convolved to all outputs", "final_sentence": "at groups 1 all inputs are convolved to all outputs"}
{"comment_sentence_id": 5368, "class": "MultiLabelMarginLoss", "comment_sentence": "if attr reduction is none , then math n .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr reduction is none then math n", "final_sentence": "if attr reduction is none then math n"}
{"comment_sentence_id": 3492, "class": "ParseError", "comment_sentence": "this error occurs when the parser encounters a syntax error", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this error occurs when the parser encounters a syntax error", "final_sentence": "this error occurs when the parser encounters a syntax error"}
{"comment_sentence_id": 2849, "class": "FileSystemLoader", "comment_sentence": "this loader can find templates", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this loader can find templates", "final_sentence": "this loader can find templates"}
{"comment_sentence_id": 476, "class": "MemcachedCache", "comment_sentence": "an implementation of a cache binding using python memcached", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an implementation of a cache binding using python memcached", "final_sentence": "an implementation of a cache binding using python memcached"}
{"comment_sentence_id": 1263, "class": "AutocryptSearch", "comment_sentence": "search for the autocrypt database.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "search for the autocrypt database", "final_sentence": "search for the autocrypt database"}
{"comment_sentence_id": 3724, "class": "PyPIJSONLocator", "comment_sentence": "this locator uses pypi s json interface.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this locator uses pypi s json interface", "final_sentence": "this locator uses pypi s json interface"}
{"comment_sentence_id": 3042, "class": "Katakana", "comment_sentence": "unicode set for katakana unicode character range", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unicode set for katakana unicode character range", "final_sentence": "unicode set for katakana unicode character range"}
{"comment_sentence_id": 841, "class": "TestImageFieldFile", "comment_sentence": "was opened.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "was opened", "final_sentence": "was opened"}
{"comment_sentence_id": 2581, "class": "Environment", "comment_sentence": "defaults to % .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "defaults to", "final_sentence": "defaults to"}
{"comment_sentence_id": 4218, "class": "Adadelta", "comment_sentence": "of squared gradients default 09", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of squared gradients default 09", "final_sentence": "of squared gradients default 09"}
{"comment_sentence_id": 742, "class": "RemoteTestRunner", "comment_sentence": "run tests and record everything but don t display anything.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "run tests and record everything but don t display anything", "final_sentence": "run tests and record everything but don t display anything"}
{"comment_sentence_id": 2264, "class": "StringArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 5109, "class": "EmbeddingBag", "comment_sentence": "per sample weights tensor, optional a tensor of float double weights, or none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "per sample weights tensor optional a tensor of float double weights or none", "final_sentence": "per sample weights tensor optional a tensor of float double weights or none"}
{"comment_sentence_id": 256, "class": "ChunkIter", "comment_sentence": "an iterable that will yield chunks of data.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an iterable that will yield chunks of data", "final_sentence": "an iterable that will yield chunks of data"}
{"comment_sentence_id": 3309, "class": "omdict", "comment_sentence": "internally, items are stored in a doubly linked list, self.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "internally items are stored in a doubly linked list self", "final_sentence": "internally items are stored in a doubly linked list self"}
{"comment_sentence_id": 4669, "class": "ConstantPad3d", "comment_sentence": "pads the input tensor boundaries with a constant value.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pads the input tensor boundaries with a constant value", "final_sentence": "pads the input tensor boundaries with a constant value"}
{"comment_sentence_id": 2662, "class": "Environment", "comment_sentence": "versionchanged 28", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionchanged 28", "final_sentence": "versionchanged 28"}
{"comment_sentence_id": 2681, "class": "Environment", "comment_sentence": "this requires", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this requires", "final_sentence": "this requires"}
{"comment_sentence_id": 5104, "class": "EmbeddingBag", "comment_sentence": "therefore,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "therefore", "final_sentence": "therefore"}
{"comment_sentence_id": 2577, "class": "Environment", "comment_sentence": "the string marking the beginning of a block.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the beginning of a block", "final_sentence": "the string marking the beginning of a block"}
{"comment_sentence_id": 4530, "class": "BCEWithLogitsLoss", "comment_sentence": "and attr reduce are in the process of being deprecated, and in the meantime,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and attr reduce are in the process of being deprecated and in the meantime", "final_sentence": "and attr reduce are in the process of being deprecated and in the meantime"}
{"comment_sentence_id": 3737, "class": "Request", "comment_sentence": "if a dictionary or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a dictionary or", "final_sentence": "if a dictionary or"}
{"comment_sentence_id": 4534, "class": "BCEWithLogitsLoss", "comment_sentence": "must be a vector with length equal to the number of classes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "must be a vector with length equal to the number of classes", "final_sentence": "must be a vector with length equal to the number of classes"}
{"comment_sentence_id": 723, "class": "ProxyModelInheritanceTests", "comment_sentence": "proxy model inheritance across apps can result in migrate not creating the table", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "proxy model inheritance across apps can result in migrate not creating the table", "final_sentence": "proxy model inheritance across apps can result in migrate not creating the table"}
{"comment_sentence_id": 2812, "class": "FakeFile", "comment_sentence": "wrap a list of lines in an object with readline to make", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "wrap a list of lines in an object with readline to make", "final_sentence": "wrap a list of lines in an object with readline to make"}
{"comment_sentence_id": 1176, "class": "UserMagics", "comment_sentence": "use this class to isolate the magics defined dynamically by the user into", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use this class to isolate the magics defined dynamically by the user into", "final_sentence": "use this class to isolate the magics defined dynamically by the user into"}
{"comment_sentence_id": 2032, "class": "PlotAccessor", "comment_sentence": "use log scaling or symlog scaling on both x and y axes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use log scaling or symlog scaling on both x and y axes", "final_sentence": "use log scaling or symlog scaling on both x and y axes"}
{"comment_sentence_id": 2034, "class": "PlotAccessor", "comment_sentence": "xticks sequence", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "xticks sequence", "final_sentence": "xticks sequence"}
{"comment_sentence_id": 3806, "class": "Retry", "comment_sentence": "retry configuration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "retry configuration", "final_sentence": "retry configuration"}
{"comment_sentence_id": 3670, "class": "PoolManager", "comment_sentence": "param headers", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param headers", "final_sentence": "param headers"}
{"comment_sentence_id": 2817, "class": "fdspawn", "comment_sentence": "descriptor.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "descriptor", "final_sentence": "descriptor"}
{"comment_sentence_id": 2650, "class": "Environment", "comment_sentence": "versionchanged 24", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionchanged 24", "final_sentence": "versionchanged 24"}
{"comment_sentence_id": 357, "class": "FallbackStorage", "comment_sentence": "messages in each subsequent backend.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "messages in each subsequent backend", "final_sentence": "messages in each subsequent backend"}
{"comment_sentence_id": 5929, "class": "AuthBase", "comment_sentence": "base class that all auth implementations derive from", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base class that all auth implementations derive from", "final_sentence": "base class that all auth implementations derive from"}
{"comment_sentence_id": 2000, "class": "PlotAccessor", "comment_sentence": "bar vertical bar plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "bar vertical bar plot", "final_sentence": "bar vertical bar plot"}
{"comment_sentence_id": 3885, "class": "Retry", "comment_sentence": "the list is in the order", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the list is in the order", "final_sentence": "the list is in the order"}
{"comment_sentence_id": 3865, "class": "Retry", "comment_sentence": "most errors are resolved immediately by a second try without a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "most errors are resolved immediately by a second try without a", "final_sentence": "most errors are resolved immediately by a second try without a"}
{"comment_sentence_id": 5094, "class": "EmbeddingBag", "comment_sentence": "inputs attr input longtensor , attr offsets longtensor, optional , and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "inputs attr input longtensor attr offsets longtensor optional and", "final_sentence": "inputs attr input longtensor attr offsets longtensor optional and"}
{"comment_sentence_id": 4526, "class": "BCEWithLogitsLoss", "comment_sentence": "none no reduction will be applied,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none no reduction will be applied", "final_sentence": "none no reduction will be applied"}
{"comment_sentence_id": 1161, "class": "TermColors", "comment_sentence": "this class defines the escape sequences for all the standard ansi?", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class defines the escape sequences for all the standard ansi", "final_sentence": "this class defines the escape sequences for all the standard ansi"}
{"comment_sentence_id": 4249, "class": "Adam", "comment_sentence": "algorithm from the paper on the convergence of adam and beyond", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "algorithm from the paper on the convergence of adam and beyond", "final_sentence": "algorithm from the paper on the convergence of adam and beyond"}
{"comment_sentence_id": 91, "class": "BaseCommand", "comment_sentence": "parse the command line arguments and work out what code to call in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parse the command line arguments and work out what code to call in", "final_sentence": "parse the command line arguments and work out what code to call in"}
{"comment_sentence_id": 2225, "class": "SetopCheck", "comment_sentence": "to perform the type check in advance.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to perform the type check in advance", "final_sentence": "to perform the type check in advance"}
{"comment_sentence_id": 3052, "class": "LockFailed", "comment_sentence": "lock file creation failed for some other reason.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lock file creation failed for some other reason", "final_sentence": "lock file creation failed for some other reason"}
{"comment_sentence_id": 125, "class": "BaseCommand", "comment_sentence": "output transaction", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "output transaction", "final_sentence": "output transaction"}
{"comment_sentence_id": 5334, "class": "MultiLabelMarginLoss", "comment_sentence": "starts at the front.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "starts at the front", "final_sentence": "starts at the front"}
{"comment_sentence_id": 5507, "class": "SGD", "comment_sentence": "implements stochastic gradient descent optionally with momentum .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements stochastic gradient descent optionally with momentum", "final_sentence": "implements stochastic gradient descent optionally with momentum"}
{"comment_sentence_id": 5062, "class": "EmbeddingBag", "comment_sentence": "pass.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 944, "class": "Audio", "comment_sentence": "only required when data parameter is being used as an array", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only required when data parameter is being used as an array", "final_sentence": "only required when data parameter is being used as an array"}
{"comment_sentence_id": 4275, "class": "Adamax", "comment_sentence": "arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 3224, "class": "MetadataMissingError", "comment_sentence": "a required metadata is missing", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a required metadata is missing", "final_sentence": "a required metadata is missing"}
{"comment_sentence_id": 5112, "class": "EmbeddingBag", "comment_sentence": "must have exactly the same shape as input and is treated as having the same", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "must have exactly the same shape as input and is treated as having the same", "final_sentence": "must have exactly the same shape as input and is treated as having the same"}
{"comment_sentence_id": 894, "class": "XFrameOptionsMiddleware", "comment_sentence": "a xframe options exempt value set to true.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a xframe options exempt value set to true", "final_sentence": "a xframe options exempt value set to true"}
{"comment_sentence_id": 1854, "class": "ExcelFile", "comment_sentence": "engine str, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "engine str default none", "final_sentence": "engine str default none"}
{"comment_sentence_id": 4658, "class": "Caffe2OperatorTestCase", "comment_sentence": "op bench it s a user defined class child of caffe2benchmarkbase", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "op bench it s a user defined class child of caffe2benchmarkbase", "final_sentence": "op bench it s a user defined class child of caffe2benchmarkbase"}
{"comment_sentence_id": 2247, "class": "StringArray", "comment_sentence": "warning", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "warning", "final_sentence": "warning"}
{"comment_sentence_id": 4359, "class": "BatchNorm1d", "comment_sentence": "the running estimates are kept with a default attr momentum", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the running estimates are kept with a default attr momentum", "final_sentence": "the running estimates are kept with a default attr momentum"}
{"comment_sentence_id": 5737, "class": "Unfold", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 2600, "class": "Environment", "comment_sentence": "comments.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "comments", "final_sentence": "comments"}
{"comment_sentence_id": 3851, "class": "Retry", "comment_sentence": "param iterable method whitelist", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param iterable method whitelist", "final_sentence": "param iterable method whitelist"}
{"comment_sentence_id": 3019, "class": "InternalName", "comment_sentence": "an internal name in the compiler.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an internal name in the compiler", "final_sentence": "an internal name in the compiler"}
{"comment_sentence_id": 4306, "class": "AdaptiveMaxPool3d", "comment_sentence": "default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default false", "final_sentence": "default false"}
{"comment_sentence_id": 2214, "class": "SelectNSeries", "comment_sentence": "keep first , last , default first", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "keep first last default first", "final_sentence": "keep first last default first"}
{"comment_sentence_id": 1164, "class": "TermColors", "comment_sentence": "string, suitable for defining dummy color schemes in terminals which get", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "string suitable for defining dummy color schemes in terminals which get", "final_sentence": "string suitable for defining dummy color schemes in terminals which get"}
{"comment_sentence_id": 3847, "class": "Retry", "comment_sentence": "how many times to retry on bad status codes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "how many times to retry on bad status codes", "final_sentence": "how many times to retry on bad status codes"}
{"comment_sentence_id": 955, "class": "Audio", "comment_sentence": "audio are never normalized.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "audio are never normalized", "final_sentence": "audio are never normalized"}
{"comment_sentence_id": 1892, "class": "IntegerArray", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 5067, "class": "EmbeddingBag", "comment_sentence": "attr per sample weights .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr per sample weights", "final_sentence": "attr per sample weights"}
{"comment_sentence_id": 142, "class": "BaseCommand", "comment_sentence": "app registry.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "app registry", "final_sentence": "app registry"}
{"comment_sentence_id": 929, "class": "Audio", "comment_sentence": "if a filename or url is used, the format support will be browser", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a filename or url is used the format support will be browser", "final_sentence": "if a filename or url is used the format support will be browser"}
{"comment_sentence_id": 5713, "class": "Unfold", "comment_sentence": "default 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 4755, "class": "Conv3d", "comment_sentence": "kernel size int or tuple size of the convolving kernel", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "kernel size int or tuple size of the convolving kernel", "final_sentence": "kernel size int or tuple size of the convolving kernel"}
{"comment_sentence_id": 3869, "class": "Retry", "comment_sentence": "seconds.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "seconds", "final_sentence": "seconds"}
{"comment_sentence_id": 4237, "class": "Adam", "comment_sentence": "implements adam algorithm.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements adam algorithm", "final_sentence": "implements adam algorithm"}
{"comment_sentence_id": 5935, "class": "PreparedRequest", "comment_sentence": "generated from either a class request request object or manually.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "generated from either a class request request object or manually", "final_sentence": "generated from either a class request request object or manually"}
{"comment_sentence_id": 551, "class": "MigrationLoader", "comment_sentence": "disk, then they are injected into the main set, replacing the named migrations.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "disk then they are injected into the main set replacing the named migrations", "final_sentence": "disk then they are injected into the main set replacing the named migrations"}
{"comment_sentence_id": 293, "class": "ConsoleDirective", "comment_sentence": "the second tab shows a windows command line equivalent of the usual", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the second tab shows a windows command line equivalent of the usual", "final_sentence": "the second tab shows a windows command line equivalent of the usual"}
{"comment_sentence_id": 2031, "class": "PlotAccessor", "comment_sentence": "loglog bool or sym , default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "loglog bool or sym default false", "final_sentence": "loglog bool or sym default false"}
{"comment_sentence_id": 1991, "class": "PlotAccessor", "comment_sentence": "x label or position, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "x label or position default none", "final_sentence": "x label or position default none"}
{"comment_sentence_id": 2547, "class": "DataViewSequence", "comment_sentence": "each entry is an instance of item class .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each entry is an instance of item class", "final_sentence": "each entry is an instance of item class"}
{"comment_sentence_id": 3791, "class": "Resource", "comment_sentence": "this is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is", "final_sentence": "this is"}
{"comment_sentence_id": 4752, "class": "Conv3d", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 3800, "class": "ResourceManager", "comment_sentence": "manage resource extraction and packages", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "manage resource extraction and packages", "final_sentence": "manage resource extraction and packages"}
{"comment_sentence_id": 1992, "class": "PlotAccessor", "comment_sentence": "only used if data is a dataframe.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "only used if data is a dataframe", "final_sentence": "only used if data is a dataframe"}
{"comment_sentence_id": 415, "class": "ListMixin", "comment_sentence": "note that if get single internal and get single internal return", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note that if get single internal and get single internal return", "final_sentence": "note that if get single internal and get single internal return"}
{"comment_sentence_id": 51, "class": "AtomicTests", "comment_sentence": "the tests make assertions on internal attributes because there isn t a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the tests make assertions on internal attributes because there isn t a", "final_sentence": "the tests make assertions on internal attributes because there isn t a"}
{"comment_sentence_id": 795, "class": "SplitHiddenDateTimeWidget", "comment_sentence": "a widget that splits datetime input into two input type hidden inputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a widget that splits datetime input into two input type hidden inputs", "final_sentence": "a widget that splits datetime input into two input type hidden inputs"}
{"comment_sentence_id": 5290, "class": "Module", "comment_sentence": "a tree structure.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a tree structure", "final_sentence": "a tree structure"}
{"comment_sentence_id": 2234, "class": "SQLTable", "comment_sentence": "for mapping pandas tables to sql tables.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for mapping pandas tables to sql tables", "final_sentence": "for mapping pandas tables to sql tables"}
{"comment_sentence_id": 432, "class": "ListMixin", "comment_sentence": "int maxlength", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "int maxlength", "final_sentence": "int maxlength"}
{"comment_sentence_id": 2016, "class": "PlotAccessor", "comment_sentence": "at the top of the figure.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at the top of the figure", "final_sentence": "at the top of the figure"}
{"comment_sentence_id": 1736, "class": "CategoricalIndex", "comment_sentence": "ordered", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ordered", "final_sentence": "ordered"}
{"comment_sentence_id": 5650, "class": "TransformerEncoderLayer", "comment_sentence": "users may modify or implement", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "users may modify or implement", "final_sentence": "users may modify or implement"}
{"comment_sentence_id": 2344, "class": "TestFromTuples", "comment_sentence": "tests specific to intervalindex^from tuples", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests specific to intervalindex from tuples", "final_sentence": "tests specific to intervalindex from tuples"}
{"comment_sentence_id": 423, "class": "ListMixin", "comment_sentence": "before clobbering the original storage.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "before clobbering the original storage", "final_sentence": "before clobbering the original storage"}
{"comment_sentence_id": 3076, "class": "Markup", "comment_sentence": "it to mark it safe without escaping.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it to mark it safe without escaping", "final_sentence": "it to mark it safe without escaping"}
{"comment_sentence_id": 5656, "class": "TransformerEncoderLayer", "comment_sentence": "dropout the dropout value default 01 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dropout the dropout value default 01", "final_sentence": "dropout the dropout value default 01"}
{"comment_sentence_id": 5957, "class": "Response", "comment_sentence": "the class response response object, which contains a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the class response response object which contains a", "final_sentence": "the class response response object which contains a"}
{"comment_sentence_id": 2216, "class": "SelectNSeries", "comment_sentence": "nordered series", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "nordered series", "final_sentence": "nordered series"}
{"comment_sentence_id": 1582, "class": "BooleanArray", "comment_sentence": "below .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "below", "final_sentence": "below"}
{"comment_sentence_id": 1964, "class": "IntervalDtype", "comment_sentence": "subtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "subtype", "final_sentence": "subtype"}
{"comment_sentence_id": 1049, "class": "DisplayHook", "comment_sentence": "this class does many things, but the basic idea is that it is a callable", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this class does many things but the basic idea is that it is a callable", "final_sentence": "this class does many things but the basic idea is that it is a callable"}
{"comment_sentence_id": 1744, "class": "CategoricalIndex", "comment_sentence": "as ordered", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "as ordered", "final_sentence": "as ordered"}
{"comment_sentence_id": 3476, "class": "PacifyFlushWrapper", "comment_sentence": "so as to have minimal impact on any", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "so as to have minimal impact on any", "final_sentence": "so as to have minimal impact on any"}
{"comment_sentence_id": 4281, "class": "Adamax", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 5579, "class": "Subset", "comment_sentence": "dataset dataset the whole dataset", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dataset dataset the whole dataset", "final_sentence": "dataset dataset the whole dataset"}
{"comment_sentence_id": 506, "class": "MigrationGraph", "comment_sentence": "there are", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "there are", "final_sentence": "there are"}
{"comment_sentence_id": 4734, "class": "Conv3d", "comment_sentence": "the parameters attr kernel size , attr stride , attr padding , attr dilation can either be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the parameters attr kernel size attr stride attr padding attr dilation can either be", "final_sentence": "the parameters attr kernel size attr stride attr padding attr dilation can either be"}
{"comment_sentence_id": 1642, "class": "BYearBegin", "comment_sentence": "dateoffset increments between business year begin dates.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dateoffset increments between business year begin dates", "final_sentence": "dateoffset increments between business year begin dates"}
{"comment_sentence_id": 2834, "class": "FileMetadata", "comment_sentence": "which is treated as existing, and will be the contents of the file at", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "which is treated as existing and will be the contents of the file at", "final_sentence": "which is treated as existing and will be the contents of the file at"}
{"comment_sentence_id": 933, "class": "Audio", "comment_sentence": "filename unicode", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "filename unicode", "final_sentence": "filename unicode"}
{"comment_sentence_id": 1, "class": "AccessMixin", "comment_sentence": "abstract cbv mixin that gives access mixins the same customizable", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "abstract cbv mixin that gives access mixins the same customizable", "final_sentence": "abstract cbv mixin that gives access mixins the same customizable"}
{"comment_sentence_id": 3250, "class": "Node", "comment_sentence": "represents an item in the tree", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represents an item in the tree", "final_sentence": "represents an item in the tree"}
{"comment_sentence_id": 4012, "class": "SkipTo", "comment_sentence": "token for skipping over all undefined text until the matched", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "token for skipping over all undefined text until the matched", "final_sentence": "token for skipping over all undefined text until the matched"}
{"comment_sentence_id": 5749, "class": "Unfold", "comment_sentence": "and dtype of the input", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and dtype of the input", "final_sentence": "and dtype of the input"}
{"comment_sentence_id": 950, "class": "Audio", "comment_sentence": "range.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "range", "final_sentence": "range"}
{"comment_sentence_id": 2598, "class": "Environment", "comment_sentence": "line comment prefix", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "line comment prefix", "final_sentence": "line comment prefix"}
{"comment_sentence_id": 1757, "class": "CategoricalIndex", "comment_sentence": "notes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "notes", "final_sentence": "notes"}
{"comment_sentence_id": 2384, "class": "And", "comment_sentence": "may be constructed using the operator.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "may be constructed using the operator", "final_sentence": "may be constructed using the operator"}
{"comment_sentence_id": 2022, "class": "PlotAccessor", "comment_sentence": "place legend on axis subplots.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "place legend on axis subplots", "final_sentence": "place legend on axis subplots"}
{"comment_sentence_id": 5586, "class": "Task", "comment_sentence": "tasks are executed in the context of a taskgroup, which, in turn, can", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tasks are executed in the context of a taskgroup which in turn can", "final_sentence": "tasks are executed in the context of a taskgroup which in turn can"}
{"comment_sentence_id": 2256, "class": "StringArray", "comment_sentence": "warning", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "warning", "final_sentence": "warning"}
{"comment_sentence_id": 2887, "class": "FollowedBy", "comment_sentence": "# use followedby to match a label only if it is followed by a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use followedby to match a label only if it is followed by a", "final_sentence": "use followedby to match a label only if it is followed by a"}
{"comment_sentence_id": 4749, "class": "Conv3d", "comment_sentence": "math in channels c in , out channels c in times k, .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math in channels c in out channels c in times k", "final_sentence": "math in channels c in out channels c in times k"}
{"comment_sentence_id": 342, "class": "ExceptionThatFailsUnpickling", "comment_sentence": "arguments passed to init .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments passed to init", "final_sentence": "arguments passed to init"}
{"comment_sentence_id": 2352, "class": "UnsortedIndexError", "comment_sentence": "and the index has not been lexsorted.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and the index has not been lexsorted", "final_sentence": "and the index has not been lexsorted"}
{"comment_sentence_id": 612, "class": "MultiValueDict", "comment_sentence": "which returns a list for every key, even though most web forms submit", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "which returns a list for every key even though most web forms submit", "final_sentence": "which returns a list for every key even though most web forms submit"}
{"comment_sentence_id": 2076, "class": "PlotAccessor", "comment_sentence": "alternatively, to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "alternatively to", "final_sentence": "alternatively to"}
{"comment_sentence_id": 1454, "class": "HashCash", "comment_sentence": "try to collide a hash using the smtorp algorithm", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "try to collide a hash using the smtorp algorithm", "final_sentence": "try to collide a hash using the smtorp algorithm"}
{"comment_sentence_id": 4247, "class": "Adam", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 665, "class": "NestedObjectsTests", "comment_sentence": "tests for nestedobject utility collection.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for nestedobject utility collection", "final_sentence": "tests for nestedobject utility collection"}
{"comment_sentence_id": 5717, "class": "Unfold", "comment_sentence": "dilation int or tuple, optional a parameter that controls the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dilation int or tuple optional a parameter that controls the", "final_sentence": "dilation int or tuple optional a parameter that controls the"}
{"comment_sentence_id": 5089, "class": "EmbeddingBag", "comment_sentence": "note this option is not", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note this option is not", "final_sentence": "note this option is not"}
{"comment_sentence_id": 5735, "class": "Unfold", "comment_sentence": "consider class torch^nn.fold and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "consider class torch nn fold and", "final_sentence": "consider class torch nn fold and"}
{"comment_sentence_id": 376, "class": "ImageFileDescriptor", "comment_sentence": "just like the filedescriptor, but for imagefields.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "just like the filedescriptor but for imagefields", "final_sentence": "just like the filedescriptor but for imagefields"}
{"comment_sentence_id": 2664, "class": "Environment", "comment_sentence": "auto reload", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "auto reload", "final_sentence": "auto reload"}
{"comment_sentence_id": 138, "class": "BaseCommand", "comment_sentence": "to validate an individual application s models", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to validate an individual application s models", "final_sentence": "to validate an individual application s models"}
{"comment_sentence_id": 3388, "class": "Option", "comment_sentence": "param show default controls if the default value should be shown on the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param show default controls if the default value should be shown on the", "final_sentence": "param show default controls if the default value should be shown on the"}
{"comment_sentence_id": 2346, "class": "TestPeriodIndexSeriesComparisonConsistency", "comment_sentence": "test periodindex and period series ops consistency", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "test periodindex and period series ops consistency", "final_sentence": "test periodindex and period series ops consistency"}
{"comment_sentence_id": 767, "class": "SameAsLookup", "comment_sentence": "vertex by vertex, the operator returns true.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "vertex by vertex the operator returns true", "final_sentence": "vertex by vertex the operator returns true"}
{"comment_sentence_id": 2351, "class": "UnsortedIndexError", "comment_sentence": "error raised when attempting to get a slice of a multiindex,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "error raised when attempting to get a slice of a multiindex", "final_sentence": "error raised when attempting to get a slice of a multiindex"}
{"comment_sentence_id": 2254, "class": "StringArray", "comment_sentence": "values array like", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "values array like", "final_sentence": "values array like"}
{"comment_sentence_id": 1265, "class": "AutoTlsConnBroker", "comment_sentence": "this broker tries to auto upgrade connections to use tls, or at", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this broker tries to auto upgrade connections to use tls or at", "final_sentence": "this broker tries to auto upgrade connections to use tls or at"}
{"comment_sentence_id": 5255, "class": "LBFGS", "comment_sentence": "if it doesn t fit in memory", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if it doesn t fit in memory", "final_sentence": "if it doesn t fit in memory"}
{"comment_sentence_id": 5753, "class": "Unfold", "comment_sentence": "fold and unfold operations are inverses of each", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fold and unfold operations are inverses of each", "final_sentence": "fold and unfold operations are inverses of each"}
{"comment_sentence_id": 5657, "class": "TransformerEncoderLayer", "comment_sentence": "activation the activation function of intermediate layer, relu or gelu default relu .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "activation the activation function of intermediate layer relu or gelu default relu", "final_sentence": "activation the activation function of intermediate layer relu or gelu default relu"}
{"comment_sentence_id": 3045, "class": "KeyType", "comment_sentence": "keys can be bare unquoted , or quoted using basic , or literal", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "keys can be bare unquoted or quoted using basic or literal", "final_sentence": "keys can be bare unquoted or quoted using basic or literal"}
{"comment_sentence_id": 361, "class": "FootNote", "comment_sentence": "model added for ticket 19838", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "model added for ticket 19838", "final_sentence": "model added for ticket 19838"}
{"comment_sentence_id": 3307, "class": "omdict", "comment_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an ordered multivalue dictionary is a multivalue dictionary that", "final_sentence": "an ordered multivalue dictionary is a multivalue dictionary that"}
{"comment_sentence_id": 356, "class": "FallbackStorage", "comment_sentence": "store any unstored", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "store any unstored", "final_sentence": "store any unstored"}
{"comment_sentence_id": 3882, "class": "Retry", "comment_sentence": "been exhausted.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "been exhausted", "final_sentence": "been exhausted"}
{"comment_sentence_id": 5287, "class": "Module", "comment_sentence": "base class for all neural network modules.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base class for all neural network modules", "final_sentence": "base class for all neural network modules"}
{"comment_sentence_id": 286, "class": "Combinable", "comment_sentence": "provide the ability to combine one or two objects with", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "provide the ability to combine one or two objects with", "final_sentence": "provide the ability to combine one or two objects with"}
{"comment_sentence_id": 2622, "class": "Environment", "comment_sentence": "if present, to be stripped from the end of the template.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if present to be stripped from the end of the template", "final_sentence": "if present to be stripped from the end of the template"}
{"comment_sentence_id": 5257, "class": "LBFGS", "comment_sentence": "arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 4753, "class": "Conv3d", "comment_sentence": "in channels int number of channels in the input image", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in channels int number of channels in the input image", "final_sentence": "in channels int number of channels in the input image"}
{"comment_sentence_id": 4712, "class": "Conv3d", "comment_sentence": "and output math n, c out , d out , h out , w out can be precisely described as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and output math n c out d out h out w out can be precisely described as", "final_sentence": "and output math n c out d out h out w out can be precisely described as"}
{"comment_sentence_id": 1424, "class": "ConfigureMailboxes", "comment_sentence": "add one or more mailboxes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "add one or more mailboxes", "final_sentence": "add one or more mailboxes"}
{"comment_sentence_id": 228, "class": "BoundWidget", "comment_sentence": "this is useful for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is useful for", "final_sentence": "this is useful for"}
{"comment_sentence_id": 922, "class": "Audio", "comment_sentence": "for the standard channel order, see", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for the standard channel order see", "final_sentence": "for the standard channel order see"}
{"comment_sentence_id": 1548, "class": "AbstractEngine", "comment_sentence": "object serving as a base class for all engines.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "object serving as a base class for all engines", "final_sentence": "object serving as a base class for all engines"}
{"comment_sentence_id": 367, "class": "Group", "comment_sentence": "table column fields", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "table column fields", "final_sentence": "table column fields"}
{"comment_sentence_id": 465, "class": "LogoutThenLoginTests", "comment_sentence": "tests for the logout then login view", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for the logout then login view", "final_sentence": "tests for the logout then login view"}
{"comment_sentence_id": 935, "class": "Audio", "comment_sentence": "embed boolean", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "embed boolean", "final_sentence": "embed boolean"}
{"comment_sentence_id": 2573, "class": "Environment", "comment_sentence": "modifications on environments after the first template was loaded", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "modifications on environments after the first template was loaded", "final_sentence": "modifications on environments after the first template was loaded"}
{"comment_sentence_id": 1446, "class": "Event", "comment_sentence": "rendering of events should be handled by the respective source class.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rendering of events should be handled by the respective source class", "final_sentence": "rendering of events should be handled by the respective source class"}
{"comment_sentence_id": 3619, "class": "Path", "comment_sentence": "before the value is passed onwards.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "before the value is passed onwards", "final_sentence": "before the value is passed onwards"}
{"comment_sentence_id": 3820, "class": "Retry", "comment_sentence": "total number of retries to allow.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "total number of retries to allow", "final_sentence": "total number of retries to allow"}
{"comment_sentence_id": 2090, "class": "PlotAccessor", "comment_sentence": "from 0 left bottom end to 1 right top end .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "from 0 left bottom end to 1 right top end", "final_sentence": "from 0 left bottom end to 1 right top end"}
{"comment_sentence_id": 2601, "class": "Environment", "comment_sentence": "see also ref line statements .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see also ref line statements", "final_sentence": "see also ref line statements"}
{"comment_sentence_id": 3889, "class": "Retry", "comment_sentence": "whether to respect retry after header on status codes defined as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether to respect retry after header on status codes defined as", "final_sentence": "whether to respect retry after header on status codes defined as"}
{"comment_sentence_id": 4760, "class": "Conv3d", "comment_sentence": "padding mode string, optional .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding mode string optional", "final_sentence": "padding mode string optional"}
{"comment_sentence_id": 1746, "class": "CategoricalIndex", "comment_sentence": "map", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "map", "final_sentence": "map"}
{"comment_sentence_id": 5344, "class": "MultiLabelMarginLoss", "comment_sentence": "ignored", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 3738, "class": "Request", "comment_sentence": "list of tuples key, value is provided, form encoding will", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list of tuples key value is provided form encoding will", "final_sentence": "list of tuples key value is provided form encoding will"}
{"comment_sentence_id": 5020, "class": "DiagonalTensor", "comment_sentence": "diagonal entries set to value and all other entries set to zero.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "diagonal entries set to value and all other entries set to zero", "final_sentence": "diagonal entries set to value and all other entries set to zero"}
{"comment_sentence_id": 3741, "class": "Request", "comment_sentence": "param params url parameters to append to the url.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param params url parameters to append to the url", "final_sentence": "param params url parameters to append to the url"}
{"comment_sentence_id": 2637, "class": "Environment", "comment_sentence": "a callable that can be used to process the result of a variable", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a callable that can be used to process the result of a variable", "final_sentence": "a callable that can be used to process the result of a variable"}
{"comment_sentence_id": 1839, "class": "CythonCommand", "comment_sentence": "to compile pyx c, and stop there.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to compile pyx c and stop there", "final_sentence": "to compile pyx c and stop there"}
{"comment_sentence_id": 5715, "class": "Unfold", "comment_sentence": "both sides of input.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "both sides of input", "final_sentence": "both sides of input"}
{"comment_sentence_id": 4529, "class": "BCEWithLogitsLoss", "comment_sentence": "note attr size average", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note attr size average", "final_sentence": "note attr size average"}
{"comment_sentence_id": 4758, "class": "Conv3d", "comment_sentence": "padding int or tuple, optional zero padding added to all three sides of the input.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding int or tuple optional zero padding added to all three sides of the input", "final_sentence": "padding int or tuple optional zero padding added to all three sides of the input"}
{"comment_sentence_id": 4505, "class": "BCEWithLogitsLoss", "comment_sentence": "of each batch element.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of each batch element", "final_sentence": "of each batch element"}
{"comment_sentence_id": 2044, "class": "PlotAccessor", "comment_sentence": "font size for xticks and yticks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "font size for xticks and yticks", "final_sentence": "font size for xticks and yticks"}
{"comment_sentence_id": 3699, "class": "PrefixLoader", "comment_sentence": "a loader that is passed a dict of loaders where each loader is bound", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a loader that is passed a dict of loaders where each loader is bound", "final_sentence": "a loader that is passed a dict of loaders where each loader is bound"}
{"comment_sentence_id": 549, "class": "MigrationLoader", "comment_sentence": "these are loaded into a separate set of migrations away from the main ones.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "these are loaded into a separate set of migrations away from the main ones", "final_sentence": "these are loaded into a separate set of migrations away from the main ones"}
{"comment_sentence_id": 3722, "class": "ProcessedTraceback", "comment_sentence": "holds a jinja preprocessed traceback for printing or reraising.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "holds a jinja preprocessed traceback for printing or reraising", "final_sentence": "holds a jinja preprocessed traceback for printing or reraising"}
{"comment_sentence_id": 1895, "class": "IntegerArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 3891, "class": "Retry", "comment_sentence": "param iterable remove headers on redirect", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param iterable remove headers on redirect", "final_sentence": "param iterable remove headers on redirect"}
{"comment_sentence_id": 377, "class": "ImageFileDescriptor", "comment_sentence": "the only difference is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the only difference is", "final_sentence": "the only difference is"}
{"comment_sentence_id": 2255, "class": "StringArray", "comment_sentence": "the array of data.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the array of data", "final_sentence": "the array of data"}
{"comment_sentence_id": 882, "class": "WindowFrame", "comment_sentence": "means intended to be complete is done here.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "means intended to be complete is done here", "final_sentence": "means intended to be complete is done here"}
{"comment_sentence_id": 3671, "class": "PoolManager", "comment_sentence": "headers to include with all requests, unless other headers are given", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "headers to include with all requests unless other headers are given", "final_sentence": "headers to include with all requests unless other headers are given"}
{"comment_sentence_id": 926, "class": "Audio", "comment_sentence": "bytestring containing raw pcm data or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "bytestring containing raw pcm data or", "final_sentence": "bytestring containing raw pcm data or"}
{"comment_sentence_id": 2587, "class": "Environment", "comment_sentence": "defaults to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "defaults to", "final_sentence": "defaults to"}
{"comment_sentence_id": 267, "class": "Client", "comment_sentence": "process of serving the request.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "process of serving the request", "final_sentence": "process of serving the request"}
{"comment_sentence_id": 4365, "class": "BatchNorm1d", "comment_sentence": "this attr momentum argument is different from one used in optimizer", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this attr momentum argument is different from one used in optimizer", "final_sentence": "this attr momentum argument is different from one used in optimizer"}
{"comment_sentence_id": 2030, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 4239, "class": "Adam", "comment_sentence": "arguments", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "arguments", "final_sentence": "arguments"}
{"comment_sentence_id": 3403, "class": "Option", "comment_sentence": "param confirmation prompt if set then the value will need to be confirmed", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param confirmation prompt if set then the value will need to be confirmed", "final_sentence": "param confirmation prompt if set then the value will need to be confirmed"}
{"comment_sentence_id": 4163, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "torch ops my namespace my op", "final_sentence": "torch ops my namespace my op"}
{"comment_sentence_id": 4536, "class": "BCEWithLogitsLoss", "comment_sentence": "input math n, where math means, any number of additional dimensions", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input math n where math means any number of additional dimensions", "final_sentence": "input math n where math means any number of additional dimensions"}
{"comment_sentence_id": 363, "class": "FrenchTestCase", "comment_sentence": "tests using the french translations of the sampleproject.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests using the french translations of the sampleproject", "final_sentence": "tests using the french translations of the sampleproject"}
{"comment_sentence_id": 2038, "class": "PlotAccessor", "comment_sentence": "xlim 2 tuple list", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "xlim 2 tuple list", "final_sentence": "xlim 2 tuple list"}
{"comment_sentence_id": 1595, "class": "BooleanArray", "comment_sentence": "whether to copy the values and mask arrays.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether to copy the values and mask arrays", "final_sentence": "whether to copy the values and mask arrays"}
{"comment_sentence_id": 263, "class": "Client", "comment_sentence": "it allows the user to compose get and post requests, and", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it allows the user to compose get and post requests and", "final_sentence": "it allows the user to compose get and post requests and"}
{"comment_sentence_id": 4763, "class": "Conv3d", "comment_sentence": "default 1", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 1", "final_sentence": "default 1"}
{"comment_sentence_id": 5088, "class": "EmbeddingBag", "comment_sentence": "notes for more details regarding sparse gradients.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "notes for more details regarding sparse gradients", "final_sentence": "notes for more details regarding sparse gradients"}
{"comment_sentence_id": 5011, "class": "DiagonalTensor", "comment_sentence": "a class with torch function and a specific diagonal representation", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a class with torch function and a specific diagonal representation", "final_sentence": "a class with torch function and a specific diagonal representation"}
{"comment_sentence_id": 3008, "class": "InspectedValidator", "comment_sentence": "metaclass for all validators", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "metaclass for all validators", "final_sentence": "metaclass for all validators"}
{"comment_sentence_id": 2091, "class": "PlotAccessor", "comment_sentence": "default is 05", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default is 05", "final_sentence": "default is 05"}
{"comment_sentence_id": 1886, "class": "IntegerArray", "comment_sentence": "values numpy^ndarray", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "values numpy ndarray", "final_sentence": "values numpy ndarray"}
{"comment_sentence_id": 3063, "class": "LRUCache", "comment_sentence": "this is fast for small capacities something below 1000 but doesn t", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is fast for small capacities something below 1000 but doesn t", "final_sentence": "this is fast for small capacities something below 1000 but doesn t"}
{"comment_sentence_id": 2378, "class": "_PathParents", "comment_sentence": "of a path.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of a path", "final_sentence": "of a path"}
{"comment_sentence_id": 3006, "class": "InsecurePlatformWarning", "comment_sentence": "warned when certain ssl configuration is not available on a platform.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "warned when certain ssl configuration is not available on a platform", "final_sentence": "warned when certain ssl configuration is not available on a platform"}
{"comment_sentence_id": 3025, "class": "InternalName", "comment_sentence": "template and is not threated specially by the compiler.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "template and is not threated specially by the compiler", "final_sentence": "template and is not threated specially by the compiler"}
{"comment_sentence_id": 3871, "class": "Retry", "comment_sentence": "for 00s, 02s, 04s, .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for 00s 02s 04s", "final_sentence": "for 00s 02s 04s"}
{"comment_sentence_id": 430, "class": "ListMixin", "comment_sentence": "int minlength", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "int minlength", "final_sentence": "int minlength"}
{"comment_sentence_id": 3673, "class": "PoolManager", "comment_sentence": "param connection pool kw", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param connection pool kw", "final_sentence": "param connection pool kw"}
{"comment_sentence_id": 271, "class": "Client", "comment_sentence": "the like it is here to allow testing against the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the like it is here to allow testing against the", "final_sentence": "the like it is here to allow testing against the"}
{"comment_sentence_id": 71, "class": "AutoFieldMeta", "comment_sentence": "deprecate inheritance from autofield and use of isinstance with autofield", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "deprecate inheritance from autofield and use of isinstance with autofield", "final_sentence": "deprecate inheritance from autofield and use of isinstance with autofield"}
{"comment_sentence_id": 1656, "class": "CategoricalDtype", "comment_sentence": "ordered", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ordered", "final_sentence": "ordered"}
{"comment_sentence_id": 4710, "class": "Conv3d", "comment_sentence": "planes.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "planes", "final_sentence": "planes"}
{"comment_sentence_id": 1958, "class": "IntervalDtype", "comment_sentence": "an extensiondtype for interval data.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an extensiondtype for interval data", "final_sentence": "an extensiondtype for interval data"}
{"comment_sentence_id": 1994, "class": "PlotAccessor", "comment_sentence": "allows plotting of one column versus another.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "allows plotting of one column versus another", "final_sentence": "allows plotting of one column versus another"}
{"comment_sentence_id": 3821, "class": "Retry", "comment_sentence": "takes precedence over other counts.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "takes precedence over other counts", "final_sentence": "takes precedence over other counts"}
{"comment_sentence_id": 5635, "class": "TestBuiltins", "comment_sentence": "tests for torchscript support of python builtin functions.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests for torchscript support of python builtin functions", "final_sentence": "tests for torchscript support of python builtin functions"}
{"comment_sentence_id": 4245, "class": "Adam", "comment_sentence": "eps float, optional term added to the denominator to improve", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "eps float optional term added to the denominator to improve", "final_sentence": "eps float optional term added to the denominator to improve"}
{"comment_sentence_id": 2652, "class": "Environment", "comment_sentence": "loader", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "loader", "final_sentence": "loader"}
{"comment_sentence_id": 574, "class": "MigrationQuestioner", "comment_sentence": "give the autodetector responses to questions it might have.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "give the autodetector responses to questions it might have", "final_sentence": "give the autodetector responses to questions it might have"}
{"comment_sentence_id": 5108, "class": "EmbeddingBag", "comment_sentence": "returned vectors filled by zeros.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "returned vectors filled by zeros", "final_sentence": "returned vectors filled by zeros"}
{"comment_sentence_id": 3881, "class": "Retry", "comment_sentence": "if status falls in status forcelist range and retries have", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if status falls in status forcelist range and retries have", "final_sentence": "if status falls in status forcelist range and retries have"}
{"comment_sentence_id": 2056, "class": "PlotAccessor", "comment_sentence": "center .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "center", "final_sentence": "center"}
{"comment_sentence_id": 5070, "class": "EmbeddingBag", "comment_sentence": "embedding dim int the size of each embedding vector", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "embedding dim int the size of each embedding vector", "final_sentence": "embedding dim int the size of each embedding vector"}
{"comment_sentence_id": 3040, "class": "Kanji", "comment_sentence": "unicode set for kanji unicode character range", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unicode set for kanji unicode character range", "final_sentence": "unicode set for kanji unicode character range"}
{"comment_sentence_id": 3072, "class": "Markup", "comment_sentence": "a string that is ready to be safely inserted into an html or xml", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a string that is ready to be safely inserted into an html or xml", "final_sentence": "a string that is ready to be safely inserted into an html or xml"}
{"comment_sentence_id": 4786, "class": "Conv3d", "comment_sentence": "math k frac 1 c text in prod i 0 ^ 2 text kernel size i", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i", "final_sentence": "math k frac 1 c text in prod i 0 2 text kernel size i"}
{"comment_sentence_id": 2058, "class": "PlotAccessor", "comment_sentence": "if true, draw a table using the data in the dataframe and the data", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if true draw a table using the data in the dataframe and the data", "final_sentence": "if true draw a table using the data in the dataframe and the data"}
{"comment_sentence_id": 5079, "class": "EmbeddingBag", "comment_sentence": "mode string, optional sum , mean or max .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mode string optional sum mean or max", "final_sentence": "mode string optional sum mean or max"}
{"comment_sentence_id": 4506, "class": "BCEWithLogitsLoss", "comment_sentence": "if given, has to be a tensor of size nbatch .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if given has to be a tensor of size nbatch", "final_sentence": "if given has to be a tensor of size nbatch"}
{"comment_sentence_id": 1280, "class": "ConfigDict", "comment_sentence": "if the sanity check is itself a dictionary of rules, values are expected", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the sanity check is itself a dictionary of rules values are expected", "final_sentence": "if the sanity check is itself a dictionary of rules values are expected"}
{"comment_sentence_id": 2830, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 2001, "class": "PlotAccessor", "comment_sentence": "barh horizontal bar plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "barh horizontal bar plot", "final_sentence": "barh horizontal bar plot"}
{"comment_sentence_id": 3393, "class": "Option", "comment_sentence": "value.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "value", "final_sentence": "value"}
{"comment_sentence_id": 424, "class": "ListMixin", "comment_sentence": "function set single self, i, value", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "function set single self i value", "final_sentence": "function set single self i value"}
{"comment_sentence_id": 3666, "class": "PoolManager", "comment_sentence": "necessary connection pools for you.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "necessary connection pools for you", "final_sentence": "necessary connection pools for you"}
{"comment_sentence_id": 5709, "class": "Unfold", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1560, "class": "Base", "comment_sentence": "common tests for all variations of intervalindex construction.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "common tests for all variations of intervalindex construction", "final_sentence": "common tests for all variations of intervalindex construction"}
{"comment_sentence_id": 120, "class": "BaseCommand", "comment_sentence": "specialized methods as needed.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "specialized methods as needed", "final_sentence": "specialized methods as needed"}
{"comment_sentence_id": 2324, "class": "StringMethods", "comment_sentence": "handled otherwise by a particular method.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "handled otherwise by a particular method", "final_sentence": "handled otherwise by a particular method"}
{"comment_sentence_id": 2873, "class": "Filter", "comment_sentence": "alphabetizes attributes for elements", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "alphabetizes attributes for elements", "final_sentence": "alphabetizes attributes for elements"}
{"comment_sentence_id": 5718, "class": "Unfold", "comment_sentence": "stride of elements within the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "stride of elements within the", "final_sentence": "stride of elements within the"}
{"comment_sentence_id": 4762, "class": "Conv3d", "comment_sentence": "dilation int or tuple, optional spacing between kernel elements.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dilation int or tuple optional spacing between kernel elements", "final_sentence": "dilation int or tuple optional spacing between kernel elements"}
{"comment_sentence_id": 266, "class": "Client", "comment_sentence": "of the contexts and templates that were rendered during the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of the contexts and templates that were rendered during the", "final_sentence": "of the contexts and templates that were rendered during the"}
{"comment_sentence_id": 5738, "class": "Unfold", "comment_sentence": "fold params dict kernel size .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fold params dict kernel size", "final_sentence": "fold params dict kernel size"}
{"comment_sentence_id": 2620, "class": "Environment", "comment_sentence": "preserve the trailing newline when rendering templates.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "preserve the trailing newline when rendering templates", "final_sentence": "preserve the trailing newline when rendering templates"}
{"comment_sentence_id": 5721, "class": "Unfold", "comment_sentence": "if attr kernel size , attr dilation , attr padding or", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr kernel size attr dilation attr padding or", "final_sentence": "if attr kernel size attr dilation attr padding or"}
{"comment_sentence_id": 5730, "class": "Unfold", "comment_sentence": "copying from the large tensor.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "copying from the large tensor", "final_sentence": "copying from the large tensor"}
{"comment_sentence_id": 2043, "class": "PlotAccessor", "comment_sentence": "fontsize int, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fontsize int default none", "final_sentence": "fontsize int default none"}
{"comment_sentence_id": 2040, "class": "PlotAccessor", "comment_sentence": "rot int, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rot int default none", "final_sentence": "rot int default none"}
{"comment_sentence_id": 4872, "class": "ConvReLU3d", "comment_sentence": "note", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 5053, "class": "EmbeddingBag", "comment_sentence": "computes sums or means of bags of embeddings, without instantiating the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "computes sums or means of bags of embeddings without instantiating the", "final_sentence": "computes sums or means of bags of embeddings without instantiating the"}
{"comment_sentence_id": 3065, "class": "LRUCache", "comment_sentence": "but as long as it s only used as storage for templates this", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "but as long as it s only used as storage for templates this", "final_sentence": "but as long as it s only used as storage for templates this"}
{"comment_sentence_id": 5652, "class": "TransformerEncoderLayer", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 1887, "class": "IntegerArray", "comment_sentence": "a 1 d integer dtype array.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a 1 d integer dtype array", "final_sentence": "a 1 d integer dtype array"}
{"comment_sentence_id": 420, "class": "ListMixin", "comment_sentence": "note items may be a generator which calls get single internal.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note items may be a generator which calls get single internal", "final_sentence": "note items may be a generator which calls get single internal"}
{"comment_sentence_id": 1426, "class": "ConfigureMailboxes", "comment_sentence": "in the metadata index.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in the metadata index", "final_sentence": "in the metadata index"}
{"comment_sentence_id": 3313, "class": "omdict", "comment_sentence": "map, is also maintained and stores an ordered list of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "map is also maintained and stores an ordered list of", "final_sentence": "map is also maintained and stores an ordered list of"}
{"comment_sentence_id": 3606, "class": "Path", "comment_sentence": "basic checks about what the file or directory should be.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "basic checks about what the file or directory should be", "final_sentence": "basic checks about what the file or directory should be"}
{"comment_sentence_id": 2810, "class": "ExtractError", "comment_sentence": "general exception for extract errors.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "general exception for extract errors", "final_sentence": "general exception for extract errors"}
{"comment_sentence_id": 5655, "class": "TransformerEncoderLayer", "comment_sentence": "dim feedforward the dimension of the feedforward network model default 2048 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dim feedforward the dimension of the feedforward network model default 2048", "final_sentence": "dim feedforward the dimension of the feedforward network model default 2048"}
{"comment_sentence_id": 946, "class": "Audio", "comment_sentence": "set to true if the audio should immediately start playing.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to true if the audio should immediately start playing", "final_sentence": "set to true if the audio should immediately start playing"}
{"comment_sentence_id": 1466, "class": "MailpileVFS", "comment_sentence": "this is a router object that implements the vfs interface but,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a router object that implements the vfs interface but", "final_sentence": "this is a router object that implements the vfs interface but"}
{"comment_sentence_id": 4873, "class": "ConvReLU3d", "comment_sentence": "attributes same as torch^nn.quantized^conv3d", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes same as torch nn quantized conv3d", "final_sentence": "attributes same as torch nn quantized conv3d"}
{"comment_sentence_id": 135, "class": "BaseCommand", "comment_sentence": "a boolean if true , entire django project will be checked for errors", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a boolean if true entire django project will be checked for errors", "final_sentence": "a boolean if true entire django project will be checked for errors"}
{"comment_sentence_id": 292, "class": "ConsoleDirective", "comment_sentence": "a restructuredtext directive which renders a two tab code block in which", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a restructuredtext directive which renders a two tab code block in which", "final_sentence": "a restructuredtext directive which renders a two tab code block in which"}
{"comment_sentence_id": 2003, "class": "PlotAccessor", "comment_sentence": "box boxplot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "box boxplot", "final_sentence": "box boxplot"}
{"comment_sentence_id": 3886, "class": "Retry", "comment_sentence": "the requests occurred.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the requests occurred", "final_sentence": "the requests occurred"}
{"comment_sentence_id": 954, "class": "Audio", "comment_sentence": "applies only when data is a list or array of samples other types of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "applies only when data is a list or array of samples other types of", "final_sentence": "applies only when data is a list or array of samples other types of"}
{"comment_sentence_id": 1728, "class": "CategoricalIndex", "comment_sentence": "versionadded 021.0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionadded 021 0", "final_sentence": "versionadded 021 0"}
{"comment_sentence_id": 1996, "class": "PlotAccessor", "comment_sentence": "dataframe.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dataframe", "final_sentence": "dataframe"}
{"comment_sentence_id": 2007, "class": "PlotAccessor", "comment_sentence": "pie pie plot", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pie pie plot", "final_sentence": "pie pie plot"}
{"comment_sentence_id": 2661, "class": "Environment", "comment_sentence": "1 the cache will not be cleaned.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "1 the cache will not be cleaned", "final_sentence": "1 the cache will not be cleaned"}
{"comment_sentence_id": 2835, "class": "FileMetadata", "comment_sentence": "the provided location.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the provided location", "final_sentence": "the provided location"}
{"comment_sentence_id": 4128, "class": "UndefinedEnvironmentName", "comment_sentence": "a name was attempted to be used that does not exist inside of the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a name was attempted to be used that does not exist inside of the", "final_sentence": "a name was attempted to be used that does not exist inside of the"}
{"comment_sentence_id": 5, "class": "AmbiguityError", "comment_sentence": "more than one migration matches a name prefix.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "more than one migration matches a name prefix", "final_sentence": "more than one migration matches a name prefix"}
{"comment_sentence_id": 5105, "class": "EmbeddingBag", "comment_sentence": "for attr offsets of shape b , attr input will be viewed as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "for attr offsets of shape b attr input will be viewed as", "final_sentence": "for attr offsets of shape b attr input will be viewed as"}
{"comment_sentence_id": 4472, "class": "BCEWithLogitsLoss", "comment_sentence": "default mean , then", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default mean then", "final_sentence": "default mean then"}
{"comment_sentence_id": 2067, "class": "PlotAccessor", "comment_sentence": "mark right bool, default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mark right bool default true", "final_sentence": "mark right bool default true"}
{"comment_sentence_id": 3419, "class": "Option", "comment_sentence": "in how it works but supports arbitrary number of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in how it works but supports arbitrary number of", "final_sentence": "in how it works but supports arbitrary number of"}
{"comment_sentence_id": 3872, "class": "Retry", "comment_sentence": "between retries.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "between retries", "final_sentence": "between retries"}
{"comment_sentence_id": 1720, "class": "CategoricalIndex", "comment_sentence": "ordered bool, optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ordered bool optional", "final_sentence": "ordered bool optional"}
{"comment_sentence_id": 468, "class": "MakeListTests", "comment_sentence": "escaped.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "escaped", "final_sentence": "escaped"}
{"comment_sentence_id": 4714, "class": "Conv3d", "comment_sentence": "out n i, c out j bias c out j", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "out n i c out j bias c out j", "final_sentence": "out n i c out j bias c out j"}
{"comment_sentence_id": 2936, "class": "HebrewProber", "comment_sentence": "the two sbcharsetprobers identify that the text is in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the two sbcharsetprobers identify that the text is in", "final_sentence": "the two sbcharsetprobers identify that the text is in"}
{"comment_sentence_id": 5509, "class": "SGD", "comment_sentence": "on the importance of initialization and momentum in deep learning .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "on the importance of initialization and momentum in deep learning", "final_sentence": "on the importance of initialization and momentum in deep learning"}
{"comment_sentence_id": 3732, "class": "Request", "comment_sentence": "param method http method to use.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param method http method to use", "final_sentence": "param method http method to use"}
{"comment_sentence_id": 5259, "class": "LBFGS", "comment_sentence": "max iter int maximal number of iterations per optimization step", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "max iter int maximal number of iterations per optimization step", "final_sentence": "max iter int maximal number of iterations per optimization step"}
{"comment_sentence_id": 1589, "class": "BooleanArray", "comment_sentence": "values numpy^ndarray", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "values numpy ndarray", "final_sentence": "values numpy ndarray"}
{"comment_sentence_id": 1742, "class": "CategoricalIndex", "comment_sentence": "remove unused categories", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "remove unused categories", "final_sentence": "remove unused categories"}
{"comment_sentence_id": 3826, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to 0 to fail on the first retry", "final_sentence": "set to 0 to fail on the first retry"}
{"comment_sentence_id": 1197, "class": "YouTubeVideo", "comment_sentence": "https developers^google.com youtube player parameters#parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "https developers google com youtube player parameters parameters", "final_sentence": "https developers google com youtube player parameters parameters"}
{"comment_sentence_id": 403, "class": "InvalidBasesError", "comment_sentence": "a model s base classes can t be resolved.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a model s base classes can t be resolved", "final_sentence": "a model s base classes can t be resolved"}
{"comment_sentence_id": 4713, "class": "Conv3d", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 3808, "class": "Retry", "comment_sentence": "they can be safely reused.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "they can be safely reused", "final_sentence": "they can be safely reused"}
{"comment_sentence_id": 1439, "class": "EncryptedIntDict", "comment_sentence": "this also adds a working keys function.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this also adds a working keys function", "final_sentence": "this also adds a working keys function"}
{"comment_sentence_id": 2013, "class": "PlotAccessor", "comment_sentence": "title str or list", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "title str or list", "final_sentence": "title str or list"}
{"comment_sentence_id": 817, "class": "TemplateDoesNotExist", "comment_sentence": "is formatted as a list of tuples containing origin, status , where", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "is formatted as a list of tuples containing origin status where", "final_sentence": "is formatted as a list of tuples containing origin status where"}
{"comment_sentence_id": 4509, "class": "BCEWithLogitsLoss", "comment_sentence": "the losses are averaged over each loss element in the batch.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the losses are averaged over each loss element in the batch", "final_sentence": "the losses are averaged over each loss element in the batch"}
{"comment_sentence_id": 4673, "class": "ConstantPad3d", "comment_sentence": "if is int , uses the same", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if is int uses the same", "final_sentence": "if is int uses the same"}
{"comment_sentence_id": 3986, "class": "SchemaValidatorMixin", "comment_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus", "final_sentence": "this validator mixin provides mechanics to validate schemas passed to a cerberus"}
{"comment_sentence_id": 3613, "class": "Path", "comment_sentence": "silently skipped.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "silently skipped", "final_sentence": "silently skipped"}
{"comment_sentence_id": 948, "class": "Audio", "comment_sentence": "normalize bool", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "normalize bool", "final_sentence": "normalize bool"}
{"comment_sentence_id": 1463, "class": "MailpileMailbox", "comment_sentence": "instead of in filenames", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "instead of in filenames", "final_sentence": "instead of in filenames"}
{"comment_sentence_id": 2824, "class": "FileMetadata", "comment_sentence": "metadata handler for standalone pkg info files", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "metadata handler for standalone pkg info files", "final_sentence": "metadata handler for standalone pkg info files"}
{"comment_sentence_id": 1890, "class": "IntegerArray", "comment_sentence": "copy bool, default false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 824, "class": "TemplateDoesNotExist", "comment_sentence": "engines.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "engines", "final_sentence": "engines"}
{"comment_sentence_id": 1160, "class": "TermColors", "comment_sentence": "color escape sequences.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "color escape sequences", "final_sentence": "color escape sequences"}
{"comment_sentence_id": 4675, "class": "ConstantPad3d", "comment_sentence": "if a 6 tuple , uses", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a 6 tuple uses", "final_sentence": "if a 6 tuple uses"}
{"comment_sentence_id": 5707, "class": "Unfold", "comment_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm", "final_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm"}
{"comment_sentence_id": 5697, "class": "Unfold", "comment_sentence": "of attr input math above , and math d is over all spatial", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "of attr input math above and math d is over all spatial", "final_sentence": "of attr input math above and math d is over all spatial"}
{"comment_sentence_id": 4357, "class": "BatchNorm1d", "comment_sentence": "computed mean and variance, which are then used for normalization during", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "computed mean and variance which are then used for normalization during", "final_sentence": "computed mean and variance which are then used for normalization during"}
{"comment_sentence_id": 4347, "class": "BatchNorm1d", "comment_sentence": "inputs with optional additional channel dimension as described in the paper", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "inputs with optional additional channel dimension as described in the paper", "final_sentence": "inputs with optional additional channel dimension as described in the paper"}
{"comment_sentence_id": 2806, "class": "EOF", "comment_sentence": "this usually means the child has exited.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this usually means the child has exited", "final_sentence": "this usually means the child has exited"}
{"comment_sentence_id": 1109, "class": "Magics", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 3507, "class": "ParseResults", "comment_sentence": "structured parse results, to provide multiple means of access to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "structured parse results to provide multiple means of access to", "final_sentence": "structured parse results to provide multiple means of access to"}
{"comment_sentence_id": 2009, "class": "PlotAccessor", "comment_sentence": "hexbin hexbin plot.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "hexbin hexbin plot", "final_sentence": "hexbin hexbin plot"}
{"comment_sentence_id": 4756, "class": "Conv3d", "comment_sentence": "stride int or tuple, optional stride of the convolution.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "stride int or tuple optional stride of the convolution", "final_sentence": "stride int or tuple optional stride of the convolution"}
{"comment_sentence_id": 272, "class": "Client", "comment_sentence": "contexts and templates produced by a view, rather than the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "contexts and templates produced by a view rather than the", "final_sentence": "contexts and templates produced by a view rather than the"}
{"comment_sentence_id": 5219, "class": "FisherSnedecor", "comment_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2", "final_sentence": "creates a fisher snedecor distribution parameterized by attr df1 and attr df2"}
{"comment_sentence_id": 1058, "class": "GeoJSON", "comment_sentence": "geojson expects json able dict", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "geojson expects json able dict", "final_sentence": "geojson expects json able dict"}
{"comment_sentence_id": 264, "class": "Client", "comment_sentence": "obtain the response that the server gave to those requests.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "obtain the response that the server gave to those requests", "final_sentence": "obtain the response that the server gave to those requests"}
{"comment_sentence_id": 5322, "class": "MultiLabelMarginLoss", "comment_sentence": "creates a criterion that optimizes a multi class multi classification", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "creates a criterion that optimizes a multi class multi classification", "final_sentence": "creates a criterion that optimizes a multi class multi classification"}
{"comment_sentence_id": 374, "class": "HiddenRangeWidget", "comment_sentence": "a widget that splits input into two input type hidden inputs.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a widget that splits input into two input type hidden inputs", "final_sentence": "a widget that splits input into two input type hidden inputs"}
{"comment_sentence_id": 5006, "class": "DeQuantStub", "comment_sentence": "this will be swapped as nnq^dequantize in convert .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this will be swapped as nnq dequantize in convert", "final_sentence": "this will be swapped as nnq dequantize in convert"}
{"comment_sentence_id": 3305, "class": "omdict", "comment_sentence": "a multivalue dictionary is a dictionary that can store multiple values per", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a multivalue dictionary is a dictionary that can store multiple values per", "final_sentence": "a multivalue dictionary is a dictionary that can store multiple values per"}
{"comment_sentence_id": 1279, "class": "ConfigDict", "comment_sentence": "a default value", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a default value", "final_sentence": "a default value"}
{"comment_sentence_id": 5351, "class": "MultiLabelMarginLoss", "comment_sentence": "when attr reduce is false , returns a loss per", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when attr reduce is false returns a loss per", "final_sentence": "when attr reduce is false returns a loss per"}
{"comment_sentence_id": 1891, "class": "IntegerArray", "comment_sentence": "whether to copy the values and mask .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether to copy the values and mask", "final_sentence": "whether to copy the values and mask"}
{"comment_sentence_id": 2012, "class": "PlotAccessor", "comment_sentence": "use index as ticks for x axis.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use index as ticks for x axis", "final_sentence": "use index as ticks for x axis"}
{"comment_sentence_id": 5747, "class": "Unfold", "comment_sentence": "fold unfold input divisor input", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "fold unfold input divisor input", "final_sentence": "fold unfold input divisor input"}
{"comment_sentence_id": 822, "class": "TemplateDoesNotExist", "comment_sentence": "this is used to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is used to", "final_sentence": "this is used to"}
{"comment_sentence_id": 4523, "class": "BCEWithLogitsLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 925, "class": "Audio", "comment_sentence": "string containing the filename", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "string containing the filename", "final_sentence": "string containing the filename"}
{"comment_sentence_id": 3033, "class": "InvalidDateError", "comment_sentence": "a date field was improperly specified.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a date field was improperly specified", "final_sentence": "a date field was improperly specified"}
{"comment_sentence_id": 4283, "class": "Adamax", "comment_sentence": "weight decay float, optional weight decay l2 penalty default 0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "weight decay float optional weight decay l2 penalty default 0", "final_sentence": "weight decay float optional weight decay l2 penalty default 0"}
{"comment_sentence_id": 3413, "class": "Option", "comment_sentence": "enabled.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "enabled", "final_sentence": "enabled"}
{"comment_sentence_id": 216, "class": "BaseYearArchiveView", "comment_sentence": "list of objects published in a given year.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list of objects published in a given year", "final_sentence": "list of objects published in a given year"}
{"comment_sentence_id": 1458, "class": "MailpileJinjaLoader", "comment_sentence": "a jinja2 template loader which uses the mailpile configuration", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a jinja2 template loader which uses the mailpile configuration", "final_sentence": "a jinja2 template loader which uses the mailpile configuration"}
{"comment_sentence_id": 4528, "class": "BCEWithLogitsLoss", "comment_sentence": "elements in the output, sum the output will be summed.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "elements in the output sum the output will be summed", "final_sentence": "elements in the output sum the output will be summed"}
{"comment_sentence_id": 4469, "class": "BCEWithLogitsLoss", "comment_sentence": "1 y n cdot log 1 sigma x n right ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "1 y n cdot log 1 sigma x n right", "final_sentence": "1 y n cdot log 1 sigma x n right"}
{"comment_sentence_id": 820, "class": "TemplateDoesNotExist", "comment_sentence": "chain", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "chain", "final_sentence": "chain"}
{"comment_sentence_id": 4720, "class": "Conv3d", "comment_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm", "final_sentence": "attr dilation controls the spacing between the kernel points also known as the trous algorithm"}
{"comment_sentence_id": 4539, "class": "BCEWithLogitsLoss", "comment_sentence": "if attr reduction is none , then math n, , same", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr reduction is none then math n same", "final_sentence": "if attr reduction is none then math n same"}
{"comment_sentence_id": 2514, "class": "Context_", "comment_sentence": "method that doesn t fail with a keyerror but returns an", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "method that doesn t fail with a keyerror but returns an", "final_sentence": "method that doesn t fail with a keyerror but returns an"}
{"comment_sentence_id": 3874, "class": "Retry", "comment_sentence": "than attr retry^backoff max .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "than attr retry backoff max", "final_sentence": "than attr retry backoff max"}
{"comment_sentence_id": 4471, "class": "BCEWithLogitsLoss", "comment_sentence": "if attr reduction is not none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr reduction is not none", "final_sentence": "if attr reduction is not none"}
{"comment_sentence_id": 4375, "class": "BatchNorm1d", "comment_sentence": "num features math c from an expected input of size", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "num features math c from an expected input of size", "final_sentence": "num features math c from an expected input of size"}
{"comment_sentence_id": 1721, "class": "CategoricalIndex", "comment_sentence": "whether or not this categorical is treated as an ordered", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "whether or not this categorical is treated as an ordered", "final_sentence": "whether or not this categorical is treated as an ordered"}
{"comment_sentence_id": 1452, "class": "Group_", "comment_sentence": "view groups", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "view groups", "final_sentence": "view groups"}
{"comment_sentence_id": 5439, "class": "OneHotCategorical", "comment_sentence": "attr logits .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attr logits", "final_sentence": "attr logits"}
{"comment_sentence_id": 4537, "class": "BCEWithLogitsLoss", "comment_sentence": "target math n, , same shape as the input", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "target math n same shape as the input", "final_sentence": "target math n same shape as the input"}
{"comment_sentence_id": 5727, "class": "Unfold", "comment_sentence": "class torch^nn.fold calculates each combined value in the resulting", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class torch nn fold calculates each combined value in the resulting", "final_sentence": "class torch nn fold calculates each combined value in the resulting"}
{"comment_sentence_id": 780, "class": "SessionStorage", "comment_sentence": "store messages in the session that is, django^contrib.sessions .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "store messages in the session that is django contrib sessions", "final_sentence": "store messages in the session that is django contrib sessions"}
{"comment_sentence_id": 308, "class": "CustomCacheKeyValidationTests", "comment_sentence": "backend, and override the default key validation.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "backend and override the default key validation", "final_sentence": "backend and override the default key validation"}
{"comment_sentence_id": 4770, "class": "Conv3d", "comment_sentence": "output math n, c out , d out , h out , w out where", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "output math n c out d out h out w out where", "final_sentence": "output math n c out d out h out w out where"}
{"comment_sentence_id": 1107, "class": "Magics", "comment_sentence": ".", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": NaN, "final_sentence": "nan"}
{"comment_sentence_id": 1496, "class": "Util", "comment_sentence": "utility functions for builds", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "utility functions for builds", "final_sentence": "utility functions for builds"}
{"comment_sentence_id": 480, "class": "Migration", "comment_sentence": "the base class for all migrations.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the base class for all migrations", "final_sentence": "the base class for all migrations"}
{"comment_sentence_id": 2682, "class": "Environment", "comment_sentence": "python 36 or later.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "python 36 or later", "final_sentence": "python 36 or later"}
{"comment_sentence_id": 3258, "class": "NotAny", "comment_sentence": "also, notany does", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "also notany does", "final_sentence": "also notany does"}
{"comment_sentence_id": 4511, "class": "BCEWithLogitsLoss", "comment_sentence": "some losses, there are multiple elements per sample.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "some losses there are multiple elements per sample", "final_sentence": "some losses there are multiple elements per sample"}
{"comment_sentence_id": 5237, "class": "LastNWindowCollector", "comment_sentence": "use packrecords to pack it before using this layer.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "use packrecords to pack it before using this layer", "final_sentence": "use packrecords to pack it before using this layer"}
{"comment_sentence_id": 2266, "class": "StringArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 5074, "class": "EmbeddingBag", "comment_sentence": "default 2 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default 2", "final_sentence": "default 2"}
{"comment_sentence_id": 258, "class": "ChunkIter", "comment_sentence": "constructor, yield chunks of read operations from that object.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "constructor yield chunks of read operations from that object", "final_sentence": "constructor yield chunks of read operations from that object"}
{"comment_sentence_id": 5022, "class": "DiagonalTensor", "comment_sentence": "main functionality of diagonaltensor is to provide a more compact", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "main functionality of diagonaltensor is to provide a more compact", "final_sentence": "main functionality of diagonaltensor is to provide a more compact"}
{"comment_sentence_id": 1963, "class": "IntervalDtype", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 1278, "class": "ConfigDict", "comment_sentence": "3", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 4470, "class": "BCEWithLogitsLoss", "comment_sentence": "where math n is the batch size.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "where math n is the batch size", "final_sentence": "where math n is the batch size"}
{"comment_sentence_id": 1759, "class": "CategoricalIndex", "comment_sentence": "http pandas^pydata.org pandas docs stable user guide advanced^html#categoricalindex", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "http pandas pydata org pandas docs stable user guide advanced html categoricalindex", "final_sentence": "http pandas pydata org pandas docs stable user guide advanced html categoricalindex"}
{"comment_sentence_id": 131, "class": "BaseCommand", "comment_sentence": "requires migrations checks", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "requires migrations checks", "final_sentence": "requires migrations checks"}
{"comment_sentence_id": 2238, "class": "SQLTable", "comment_sentence": "pass them between functions all the time.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "pass them between functions all the time", "final_sentence": "pass them between functions all the time"}
{"comment_sentence_id": 1042, "class": "capture_output", "comment_sentence": "context manager for capturing stdout err", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "context manager for capturing stdout err", "final_sentence": "context manager for capturing stdout err"}
{"comment_sentence_id": 2052, "class": "PlotAccessor", "comment_sentence": "position float", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "position float", "final_sentence": "position float"}
{"comment_sentence_id": 5355, "class": "MultiLabelMarginLoss", "comment_sentence": "none mean sum .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "none mean sum", "final_sentence": "none mean sum"}
{"comment_sentence_id": 3617, "class": "Path", "comment_sentence": "param readable if true, a readable check is performed.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param readable if true a readable check is performed", "final_sentence": "param readable if true a readable check is performed"}
{"comment_sentence_id": 3887, "class": "Retry", "comment_sentence": "each list item is of class class requesthistory .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each list item is of class class requesthistory", "final_sentence": "each list item is of class class requesthistory"}
{"comment_sentence_id": 3020, "class": "InternalName", "comment_sentence": "you cannot create these nodes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "you cannot create these nodes", "final_sentence": "you cannot create these nodes"}
{"comment_sentence_id": 345, "class": "FakePayload", "comment_sentence": "a wrapper around bytesio that restricts what can be read since data from", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a wrapper around bytesio that restricts what can be read since data from", "final_sentence": "a wrapper around bytesio that restricts what can be read since data from"}
{"comment_sentence_id": 5057, "class": "EmbeddingBag", "comment_sentence": "with mode mean is equivalent to class torch^nn.embedding followed by torch^mean dim 0 ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0", "final_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0"}
{"comment_sentence_id": 86, "class": "BarAccount", "comment_sentence": "a service specific account of type bar.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a service specific account of type bar", "final_sentence": "a service specific account of type bar"}
{"comment_sentence_id": 1498, "class": "Vcard", "comment_sentence": "display a single vcard", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "display a single vcard", "final_sentence": "display a single vcard"}
{"comment_sentence_id": 435, "class": "ListMixin", "comment_sentence": "a type or tuple of allowed item types optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a type or tuple of allowed item types optional", "final_sentence": "a type or tuple of allowed item types optional"}
{"comment_sentence_id": 3888, "class": "Retry", "comment_sentence": "param bool respect retry after header", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param bool respect retry after header", "final_sentence": "param bool respect retry after header"}
{"comment_sentence_id": 4132, "class": "UnlockError", "comment_sentence": "base class for errors arising from attempts to release the lock.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base class for errors arising from attempts to release the lock", "final_sentence": "base class for errors arising from attempts to release the lock"}
{"comment_sentence_id": 941, "class": "Audio", "comment_sentence": "default value is false .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default value is false", "final_sentence": "default value is false"}
{"comment_sentence_id": 5080, "class": "EmbeddingBag", "comment_sentence": "specifies the way to reduce the bag.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "specifies the way to reduce the bag", "final_sentence": "specifies the way to reduce the bag"}
{"comment_sentence_id": 1857, "class": "ExcelFile", "comment_sentence": "note that odf reads tables out of opendocument formatted files.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note that odf reads tables out of opendocument formatted files", "final_sentence": "note that odf reads tables out of opendocument formatted files"}
{"comment_sentence_id": 269, "class": "Client", "comment_sentence": "thus session details for the lifetime of the client instance.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "thus session details for the lifetime of the client instance", "final_sentence": "thus session details for the lifetime of the client instance"}
{"comment_sentence_id": 939, "class": "Audio", "comment_sentence": "audio to playable later with no internet connection in the notebook.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "audio to playable later with no internet connection in the notebook", "final_sentence": "audio to playable later with no internet connection in the notebook"}
{"comment_sentence_id": 128, "class": "BaseCommand", "comment_sentence": "wrapped with begin and commit .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "wrapped with begin and commit", "final_sentence": "wrapped with begin and commit"}
{"comment_sentence_id": 4019, "class": "SkipTo", "comment_sentence": "comments that might contain false matches to the target expression", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "comments that might contain false matches to the target expression", "final_sentence": "comments that might contain false matches to the target expression"}
{"comment_sentence_id": 3740, "class": "Request", "comment_sentence": "param json json for the body to attach to the request if files or data is not specified .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param json json for the body to attach to the request if files or data is not specified", "final_sentence": "param json json for the body to attach to the request if files or data is not specified"}
{"comment_sentence_id": 787, "class": "SimpleView", "comment_sentence": "a simple view with a docstring.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a simple view with a docstring", "final_sentence": "a simple view with a docstring"}
{"comment_sentence_id": 2035, "class": "PlotAccessor", "comment_sentence": "values to use for the xticks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "values to use for the xticks", "final_sentence": "values to use for the xticks"}
{"comment_sentence_id": 1961, "class": "IntervalDtype", "comment_sentence": "subtype str, np^dtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "subtype str np dtype", "final_sentence": "subtype str np dtype"}
{"comment_sentence_id": 5630, "class": "TaskOutput", "comment_sentence": "represents the output of a task.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "represents the output of a task", "final_sentence": "represents the output of a task"}
{"comment_sentence_id": 810, "class": "TemplateDoesNotExist", "comment_sentence": "the exception used when a template does not exist.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the exception used when a template does not exist", "final_sentence": "the exception used when a template does not exist"}
{"comment_sentence_id": 1467, "class": "MailpileVFS", "comment_sentence": "delegating calls to individual implementations.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "delegating calls to individual implementations", "final_sentence": "delegating calls to individual implementations"}
{"comment_sentence_id": 213, "class": "BaseUpdateView", "comment_sentence": "using this base class requires subclassing to provide a response mixin.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "using this base class requires subclassing to provide a response mixin", "final_sentence": "using this base class requires subclassing to provide a response mixin"}
{"comment_sentence_id": 412, "class": "ListMixin", "comment_sentence": "the index i will always satisfy 0 i len self .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the index i will always satisfy 0 i len self", "final_sentence": "the index i will always satisfy 0 i len self"}
{"comment_sentence_id": 2253, "class": "StringArray", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4116, "class": "TreeBuilder", "comment_sentence": "base treebuilder implementation", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "base treebuilder implementation", "final_sentence": "base treebuilder implementation"}
{"comment_sentence_id": 4884, "class": "CyclicLR", "comment_sentence": "cyclical learning rate policy clr .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cyclical learning rate policy clr", "final_sentence": "cyclical learning rate policy clr"}
{"comment_sentence_id": 3728, "class": "ReadError", "comment_sentence": "raised when an archive cannot be read", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "raised when an archive cannot be read", "final_sentence": "raised when an archive cannot be read"}
{"comment_sentence_id": 872, "class": "VariableWrapper", "comment_sentence": "from being converted into a string when used to instantiate an oracleparam.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "from being converted into a string when used to instantiate an oracleparam", "final_sentence": "from being converted into a string when used to instantiate an oracleparam"}
{"comment_sentence_id": 5731, "class": "Unfold", "comment_sentence": "so, if the blocks overlap, they are not", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "so if the blocks overlap they are not", "final_sentence": "so if the blocks overlap they are not"}
{"comment_sentence_id": 4733, "class": "Conv3d", "comment_sentence": "math left lfloor frac out channels in channels right rfloor .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math left lfloor frac out channels in channels right rfloor", "final_sentence": "math left lfloor frac out channels in channels right rfloor"}
{"comment_sentence_id": 2045, "class": "PlotAccessor", "comment_sentence": "colormap str or matplotlib colormap object, default none", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "colormap str or matplotlib colormap object default none", "final_sentence": "colormap str or matplotlib colormap object default none"}
{"comment_sentence_id": 2631, "class": "Environment", "comment_sentence": "should the optimizer be enabled?", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "should the optimizer be enabled", "final_sentence": "should the optimizer be enabled"}
{"comment_sentence_id": 411, "class": "ListMixin", "comment_sentence": "return single item with index i for general use.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "return single item with index i for general use", "final_sentence": "return single item with index i for general use"}
{"comment_sentence_id": 2449, "class": "CaseInsensitiveDict", "comment_sentence": "will contain case sensitive keys.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "will contain case sensitive keys", "final_sentence": "will contain case sensitive keys"}
{"comment_sentence_id": 2594, "class": "Environment", "comment_sentence": "line statement prefix", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "line statement prefix", "final_sentence": "line statement prefix"}
{"comment_sentence_id": 4532, "class": "BCEWithLogitsLoss", "comment_sentence": "default mean", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 4893, "class": "CyclicLR", "comment_sentence": "triangular a basic triangular cycle without amplitude scaling.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "triangular a basic triangular cycle without amplitude scaling", "final_sentence": "triangular a basic triangular cycle without amplitude scaling"}
{"comment_sentence_id": 1959, "class": "IntervalDtype", "comment_sentence": "this is not an actual numpy dtype , but a duck type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is not an actual numpy dtype but a duck type", "final_sentence": "this is not an actual numpy dtype but a duck type"}
{"comment_sentence_id": 2589, "class": "Environment", "comment_sentence": "the string marking the beginning of a comment.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the beginning of a comment", "final_sentence": "the string marking the beginning of a comment"}
{"comment_sentence_id": 3839, "class": "Retry", "comment_sentence": "how many redirects to perform.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "how many redirects to perform", "final_sentence": "how many redirects to perform"}
{"comment_sentence_id": 3398, "class": "Option", "comment_sentence": "are not shown.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "are not shown", "final_sentence": "are not shown"}
{"comment_sentence_id": 3743, "class": "Request", "comment_sentence": "list of tuples key, value is provided, form encoding will", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "list of tuples key value is provided form encoding will", "final_sentence": "list of tuples key value is provided form encoding will"}
{"comment_sentence_id": 3991, "class": "Session", "comment_sentence": "provides cookie persistence, connection pooling, and configuration.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "provides cookie persistence connection pooling and configuration", "final_sentence": "provides cookie persistence connection pooling and configuration"}
{"comment_sentence_id": 2039, "class": "PlotAccessor", "comment_sentence": "ylim 2 tuple list", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ylim 2 tuple list", "final_sentence": "ylim 2 tuple list"}
{"comment_sentence_id": 5637, "class": "TestQuantizedLinear", "comment_sentence": "tests the correctness of the quantized linear and linear relu op.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "tests the correctness of the quantized linear and linear relu op", "final_sentence": "tests the correctness of the quantized linear and linear relu op"}
{"comment_sentence_id": 4477, "class": "BCEWithLogitsLoss", "comment_sentence": "end cases", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "end cases", "final_sentence": "end cases"}
{"comment_sentence_id": 2362, "class": "_BZ2Proxy", "comment_sentence": "a file object argument.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a file object argument", "final_sentence": "a file object argument"}
{"comment_sentence_id": 4216, "class": "Adadelta", "comment_sentence": "parameter groups", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameter groups", "final_sentence": "parameter groups"}
{"comment_sentence_id": 4371, "class": "BatchNorm1d", "comment_sentence": "new observed value.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "new observed value", "final_sentence": "new observed value"}
{"comment_sentence_id": 5732, "class": "Unfold", "comment_sentence": "inverses of each other.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "inverses of each other", "final_sentence": "inverses of each other"}
{"comment_sentence_id": 2079, "class": "PlotAccessor", "comment_sentence": "versionadded 10.0", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "versionadded 10 0", "final_sentence": "versionadded 10 0"}
{"comment_sentence_id": 16, "class": "Atomic", "comment_sentence": "guarantee the atomic execution of a given block.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "guarantee the atomic execution of a given block", "final_sentence": "guarantee the atomic execution of a given block"}
{"comment_sentence_id": 4674, "class": "ConstantPad3d", "comment_sentence": "padding in all boundaries.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding in all boundaries", "final_sentence": "padding in all boundaries"}
{"comment_sentence_id": 2540, "class": "ConvertingTuple", "comment_sentence": "a converting tuple wrapper.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a converting tuple wrapper", "final_sentence": "a converting tuple wrapper"}
{"comment_sentence_id": 1855, "class": "ExcelFile", "comment_sentence": "if io is not a buffer or path, this must be set to identify io.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if io is not a buffer or path this must be set to identify io", "final_sentence": "if io is not a buffer or path this must be set to identify io"}
{"comment_sentence_id": 1885, "class": "IntegerArray", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 2833, "class": "FileMetadata", "comment_sentence": "this provider rejects all data and metadata requests except for pkg info,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this provider rejects all data and metadata requests except for pkg info", "final_sentence": "this provider rejects all data and metadata requests except for pkg info"}
{"comment_sentence_id": 938, "class": "Audio", "comment_sentence": "set this to true if you want the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set this to true if you want the", "final_sentence": "set this to true if you want the"}
{"comment_sentence_id": 2580, "class": "Environment", "comment_sentence": "the string marking the end of a block.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the end of a block", "final_sentence": "the string marking the end of a block"}
{"comment_sentence_id": 5473, "class": "Poisson", "comment_sentence": "rate number, tensor the rate parameter", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rate number tensor the rate parameter", "final_sentence": "rate number tensor the rate parameter"}
{"comment_sentence_id": 4737, "class": "Conv3d", "comment_sentence": "the second int for the height dimension and the third int for the width dimension", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the second int for the height dimension and the third int for the width dimension", "final_sentence": "the second int for the height dimension and the third int for the width dimension"}
{"comment_sentence_id": 2412, "class": "Argument", "comment_sentence": "all parameters are passed onwards to the parameter constructor.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "all parameters are passed onwards to the parameter constructor", "final_sentence": "all parameters are passed onwards to the parameter constructor"}
{"comment_sentence_id": 4721, "class": "Conv3d", "comment_sentence": "it is harder to describe, but this link has a nice visualization of what attr dilation does.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does", "final_sentence": "it is harder to describe but this link has a nice visualization of what attr dilation does"}
{"comment_sentence_id": 4022, "class": "SkipTo", "comment_sentence": "the skipto is not a match", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the skipto is not a match", "final_sentence": "the skipto is not a match"}
{"comment_sentence_id": 881, "class": "WindowFrame", "comment_sentence": "clauses which are subclasses, however, all processing and validation by no", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "clauses which are subclasses however all processing and validation by no", "final_sentence": "clauses which are subclasses however all processing and validation by no"}
{"comment_sentence_id": 1462, "class": "MailpileMailbox", "comment_sentence": "a maildir class for windows using !", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a maildir class for windows using", "final_sentence": "a maildir class for windows using"}
{"comment_sentence_id": 1870, "class": "Holiday", "comment_sentence": "class that defines a holiday with start end dates and rules", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class that defines a holiday with start end dates and rules", "final_sentence": "class that defines a holiday with start end dates and rules"}
{"comment_sentence_id": 4508, "class": "BCEWithLogitsLoss", "comment_sentence": "by default,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "by default", "final_sentence": "by default"}
{"comment_sentence_id": 427, "class": "ListMixin", "comment_sentence": "the object using set list.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the object using set list", "final_sentence": "the object using set list"}
{"comment_sentence_id": 2037, "class": "PlotAccessor", "comment_sentence": "values to use for the yticks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "values to use for the yticks", "final_sentence": "values to use for the yticks"}
{"comment_sentence_id": 133, "class": "BaseCommand", "comment_sentence": "migrations on disk don t match the migrations in the database.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "migrations on disk don t match the migrations in the database", "final_sentence": "migrations on disk don t match the migrations in the database"}
{"comment_sentence_id": 3503, "class": "ParserElement", "comment_sentence": "abstract base level parser element class.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "abstract base level parser element class", "final_sentence": "abstract base level parser element class"}
{"comment_sentence_id": 5098, "class": "EmbeddingBag", "comment_sentence": "this will return b values aggregated in a way depending on the attr mode .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this will return b values aggregated in a way depending on the attr mode", "final_sentence": "this will return b values aggregated in a way depending on the attr mode"}
{"comment_sentence_id": 1965, "class": "IntervalDtype", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 952, "class": "Audio", "comment_sentence": "when set to false , data must be between", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when set to false data must be between", "final_sentence": "when set to false data must be between"}
{"comment_sentence_id": 4273, "class": "Adamax", "comment_sentence": "implements adamax algorithm a variant of adam based on infinity norm .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "implements adamax algorithm a variant of adam based on infinity norm", "final_sentence": "implements adamax algorithm a variant of adam based on infinity norm"}
{"comment_sentence_id": 1500, "class": "VCardSet", "comment_sentence": "add a lines to a vcard, ensuring vcard exists", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "add a lines to a vcard ensuring vcard exists", "final_sentence": "add a lines to a vcard ensuring vcard exists"}
{"comment_sentence_id": 2425, "class": "Bucket", "comment_sentence": "the buckets get an internal checksum from the cache assigned and use this", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the buckets get an internal checksum from the cache assigned and use this", "final_sentence": "the buckets get an internal checksum from the cache assigned and use this"}
{"comment_sentence_id": 5054, "class": "EmbeddingBag", "comment_sentence": "intermediate embeddings.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "intermediate embeddings", "final_sentence": "intermediate embeddings"}
{"comment_sentence_id": 5648, "class": "TransformerEncoderLayer", "comment_sentence": "in advances in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in advances in", "final_sentence": "in advances in"}
{"comment_sentence_id": 3254, "class": "NotAny", "comment_sentence": "lookahead to disallow matching with the given parse expression.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "lookahead to disallow matching with the given parse expression", "final_sentence": "lookahead to disallow matching with the given parse expression"}
{"comment_sentence_id": 942, "class": "Audio", "comment_sentence": "rate integer", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rate integer", "final_sentence": "rate integer"}
{"comment_sentence_id": 5746, "class": "Unfold", "comment_sentence": "equality holds", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "equality holds", "final_sentence": "equality holds"}
{"comment_sentence_id": 382, "class": "IncompleteCategoryFormWithExclude", "comment_sentence": "a form that replaces the model s url field with a custom one.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a form that replaces the model s url field with a custom one", "final_sentence": "a form that replaces the model s url field with a custom one"}
{"comment_sentence_id": 940, "class": "Audio", "comment_sentence": "default is true , unless the keyword argument url is set, then", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default is true unless the keyword argument url is set then", "final_sentence": "default is true unless the keyword argument url is set then"}
{"comment_sentence_id": 5725, "class": "Unfold", "comment_sentence": "called im2col .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "called im2col", "final_sentence": "called im2col"}
{"comment_sentence_id": 4516, "class": "BCEWithLogitsLoss", "comment_sentence": "default true", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default true", "final_sentence": "default true"}
{"comment_sentence_id": 1772, "class": "CategoricalIndex", "comment_sentence": "categoricalindex a , b , c , a , b , c , categories c , b , a , ordered true, dtype category # noqa", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "categoricalindex a b c a b c categories c b a ordered true dtype category noqa", "final_sentence": "categoricalindex a b c a b c categories c b a ordered true dtype category noqa"}
{"comment_sentence_id": 2675, "class": "Environment", "comment_sentence": "cache for the internal jinja bytecode so that templates don t", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cache for the internal jinja bytecode so that templates don t", "final_sentence": "cache for the internal jinja bytecode so that templates don t"}
{"comment_sentence_id": 934, "class": "Audio", "comment_sentence": "path to a local file to load the data from.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "path to a local file to load the data from", "final_sentence": "path to a local file to load the data from"}
{"comment_sentence_id": 1054, "class": "DummyMod", "comment_sentence": "a dummy module used for ipython s interactive module when", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a dummy module used for ipython s interactive module when", "final_sentence": "a dummy module used for ipython s interactive module when"}
{"comment_sentence_id": 657, "class": "MultiWidget", "comment_sentence": "these can be looped over and rendered like normal widgets.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "these can be looped over and rendered like normal widgets", "final_sentence": "these can be looped over and rendered like normal widgets"}
{"comment_sentence_id": 3165, "class": "MemcachedBytecodeCache", "comment_sentence": "the minimal interface required.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the minimal interface required", "final_sentence": "the minimal interface required"}
{"comment_sentence_id": 4780, "class": "Conv3d", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 3783, "class": "RequirementUninstaller", "comment_sentence": "exits correctly, the uninstallation is committed, otherwise rolled back.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "exits correctly the uninstallation is committed otherwise rolled back", "final_sentence": "exits correctly the uninstallation is committed otherwise rolled back"}
{"comment_sentence_id": 3399, "class": "Option", "comment_sentence": "param prompt if set to true or a non empty string then the user will be", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param prompt if set to true or a non empty string then the user will be", "final_sentence": "param prompt if set to true or a non empty string then the user will be"}
{"comment_sentence_id": 4463, "class": "BCEWithLogitsLoss", "comment_sentence": "followed by a bceloss as, by combining the operations into one layer,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "followed by a bceloss as by combining the operations into one layer", "final_sentence": "followed by a bceloss as by combining the operations into one layer"}
{"comment_sentence_id": 1984, "class": "PlotAccessor", "comment_sentence": "make plots of series or dataframe.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "make plots of series or dataframe", "final_sentence": "make plots of series or dataframe"}
{"comment_sentence_id": 783, "class": "SessionStore", "comment_sentence": "inside the custom session model.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "inside the custom session model", "final_sentence": "inside the custom session model"}
{"comment_sentence_id": 4513, "class": "BCEWithLogitsLoss", "comment_sentence": "is set to false , the losses are instead summed for each minibatch.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "is set to false the losses are instead summed for each minibatch", "final_sentence": "is set to false the losses are instead summed for each minibatch"}
{"comment_sentence_id": 4361, "class": "BatchNorm1d", "comment_sentence": "if attr track running stats is set to false , this layer then does not", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr track running stats is set to false this layer then does not", "final_sentence": "if attr track running stats is set to false this layer then does not"}
{"comment_sentence_id": 2618, "class": "Environment", "comment_sentence": "applications.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "applications", "final_sentence": "applications"}
{"comment_sentence_id": 1474, "class": "Rescan", "comment_sentence": "add new messages to index", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "add new messages to index", "final_sentence": "add new messages to index"}
{"comment_sentence_id": 425, "class": "ListMixin", "comment_sentence": "set the single item at index i to value optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set the single item at index i to value optional", "final_sentence": "set the single item at index i to value optional"}
{"comment_sentence_id": 1769, "class": "CategoricalIndex", "comment_sentence": "ci pd^categoricalindex a , b , c , a , b , c , ordered true,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "ci pd categoricalindex a b c a b c ordered true", "final_sentence": "ci pd categoricalindex a b c a b c ordered true"}
{"comment_sentence_id": 421, "class": "ListMixin", "comment_sentence": "therefore, it is necessary to cache the values in a temporary", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "therefore it is necessary to cache the values in a temporary", "final_sentence": "therefore it is necessary to cache the values in a temporary"}
{"comment_sentence_id": 2599, "class": "Environment", "comment_sentence": "if given and a string, this will be used as prefix for line based", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if given and a string this will be used as prefix for line based", "final_sentence": "if given and a string this will be used as prefix for line based"}
{"comment_sentence_id": 2212, "class": "SelectNSeries", "comment_sentence": "obj series", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "obj series", "final_sentence": "obj series"}
{"comment_sentence_id": 1726, "class": "CategoricalIndex", "comment_sentence": "if class categoricaldtype , cannot be used together with", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if class categoricaldtype cannot be used together with", "final_sentence": "if class categoricaldtype cannot be used together with"}
{"comment_sentence_id": 5701, "class": "Unfold", "comment_sentence": "the attr padding , attr stride and attr dilation arguments specify", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the attr padding attr stride and attr dilation arguments specify", "final_sentence": "the attr padding attr stride and attr dilation arguments specify"}
{"comment_sentence_id": 5087, "class": "EmbeddingBag", "comment_sentence": "see", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 5714, "class": "Unfold", "comment_sentence": "padding int or tuple, optional implicit zero padding to be added on", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "padding int or tuple optional implicit zero padding to be added on", "final_sentence": "padding int or tuple optional implicit zero padding to be added on"}
{"comment_sentence_id": 4475, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname mean l , & text if reduction text mean", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "operatorname mean l text if reduction text mean", "final_sentence": "operatorname mean l text if reduction text mean"}
{"comment_sentence_id": 5324, "class": "MultiLabelMarginLoss", "comment_sentence": "and output math y which is a 2d tensor of target class indices .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and output math y which is a 2d tensor of target class indices", "final_sentence": "and output math y which is a 2d tensor of target class indices"}
{"comment_sentence_id": 2636, "class": "Environment", "comment_sentence": "finalize", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "finalize", "final_sentence": "finalize"}
{"comment_sentence_id": 2235, "class": "SQLTable", "comment_sentence": "uses fact that table is reflected by sqlalchemy to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "uses fact that table is reflected by sqlalchemy to", "final_sentence": "uses fact that table is reflected by sqlalchemy to"}
{"comment_sentence_id": 5072, "class": "EmbeddingBag", "comment_sentence": "is renormalized to have norm attr max norm .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "is renormalized to have norm attr max norm", "final_sentence": "is renormalized to have norm attr max norm"}
{"comment_sentence_id": 4728, "class": "Conv3d", "comment_sentence": "layers side by side, each seeing half the input channels,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "layers side by side each seeing half the input channels", "final_sentence": "layers side by side each seeing half the input channels"}
{"comment_sentence_id": 3246, "class": "Mul", "comment_sentence": "multiplies the left with the right node.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "multiplies the left with the right node", "final_sentence": "multiplies the left with the right node"}
{"comment_sentence_id": 298, "class": "Context", "comment_sentence": "a stack container for variable context", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a stack container for variable context", "final_sentence": "a stack container for variable context"}
{"comment_sentence_id": 2447, "class": "CaseInsensitiveDict", "comment_sentence": "case of the last key to be set, and iter instance ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "case of the last key to be set and iter instance", "final_sentence": "case of the last key to be set and iter instance"}
{"comment_sentence_id": 3163, "class": "MemcachedBytecodeCache", "comment_sentence": "it does not enforce a specific memcache library", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it does not enforce a specific memcache library", "final_sentence": "it does not enforce a specific memcache library"}
{"comment_sentence_id": 265, "class": "Client", "comment_sentence": "the server response objects are annotated with the details", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the server response objects are annotated with the details", "final_sentence": "the server response objects are annotated with the details"}
{"comment_sentence_id": 507, "class": "MigrationGraph", "comment_sentence": "no implicit dependencies between numbered migrations the numbering is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "no implicit dependencies between numbered migrations the numbering is", "final_sentence": "no implicit dependencies between numbered migrations the numbering is"}
{"comment_sentence_id": 5744, "class": "Unfold", "comment_sentence": "unfold nn^unfold fold params", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "unfold nn unfold fold params", "final_sentence": "unfold nn unfold fold params"}
{"comment_sentence_id": 4479, "class": "BCEWithLogitsLoss", "comment_sentence": "an auto encoder.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "an auto encoder", "final_sentence": "an auto encoder"}
{"comment_sentence_id": 2626, "class": "Environment", "comment_sentence": "this can either be import paths", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this can either be import paths", "final_sentence": "this can either be import paths"}
{"comment_sentence_id": 1286, "class": "ConfigDict", "comment_sentence": "if the default value is an empty list, it is assumed to be a list of", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if the default value is an empty list it is assumed to be a list of", "final_sentence": "if the default value is an empty list it is assumed to be a list of"}
{"comment_sentence_id": 1638, "class": "BusinessHour", "comment_sentence": "dateoffset subclass representing possibly n business hours.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "dateoffset subclass representing possibly n business hours", "final_sentence": "dateoffset subclass representing possibly n business hours"}
{"comment_sentence_id": 765, "class": "SameAsLookup", "comment_sentence": "equality of two features.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "equality of two features", "final_sentence": "equality of two features"}
{"comment_sentence_id": 3669, "class": "PoolManager", "comment_sentence": "recently used pool.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "recently used pool", "final_sentence": "recently used pool"}
{"comment_sentence_id": 349, "class": "FakePayload", "comment_sentence": "that wouldn t work in real life.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "that wouldn t work in real life", "final_sentence": "that wouldn t work in real life"}
{"comment_sentence_id": 4238, "class": "Adam", "comment_sentence": "it has been proposed in adam a method for stochastic optimization .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it has been proposed in adam a method for stochastic optimization", "final_sentence": "it has been proposed in adam a method for stochastic optimization"}
{"comment_sentence_id": 4158, "class": "_OpNamespace", "comment_sentence": "torch^ops.my namespace^my op will then invoke getattr on", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "torch ops my namespace my op will then invoke getattr on", "final_sentence": "torch ops my namespace my op will then invoke getattr on"}
{"comment_sentence_id": 4473, "class": "BCEWithLogitsLoss", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 2259, "class": "StringArray", "comment_sentence": "this may", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this may", "final_sentence": "this may"}
{"comment_sentence_id": 3311, "class": "omdict", "comment_sentence": "a", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a", "final_sentence": "a"}
{"comment_sentence_id": 1175, "class": "UserMagics", "comment_sentence": "all magics are eventually merged into a single namespace at runtime, but we", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "all magics are eventually merged into a single namespace at runtime but we", "final_sentence": "all magics are eventually merged into a single namespace at runtime but we"}
{"comment_sentence_id": 4297, "class": "AdaptiveMaxPool3d", "comment_sentence": "the output is of size d x h x w, for any input size.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the output is of size d x h x w for any input size", "final_sentence": "the output is of size d x h x w for any input size"}
{"comment_sentence_id": 1654, "class": "CategoricalDtype", "comment_sentence": "attributes", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attributes", "final_sentence": "attributes"}
{"comment_sentence_id": 5349, "class": "MultiLabelMarginLoss", "comment_sentence": "losses are averaged or summed over observations for each minibatch depending", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "losses are averaged or summed over observations for each minibatch depending", "final_sentence": "losses are averaged or summed over observations for each minibatch depending"}
{"comment_sentence_id": 129, "class": "BaseCommand", "comment_sentence": "default value is", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "default value is", "final_sentence": "default value is"}
{"comment_sentence_id": 1664, "class": "CategoricalDtype", "comment_sentence": "see ref categorical^categoricaldtype", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "see ref categorical categoricaldtype", "final_sentence": "see ref categorical categoricaldtype"}
{"comment_sentence_id": 1591, "class": "BooleanArray", "comment_sentence": "mask numpy^ndarray", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "mask numpy ndarray", "final_sentence": "mask numpy ndarray"}
{"comment_sentence_id": 3863, "class": "Retry", "comment_sentence": "param float backoff factor", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param float backoff factor", "final_sentence": "param float backoff factor"}
{"comment_sentence_id": 2654, "class": "Environment", "comment_sentence": "cache size", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cache size", "final_sentence": "cache size"}
{"comment_sentence_id": 932, "class": "Audio", "comment_sentence": "a url to download the data from.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a url to download the data from", "final_sentence": "a url to download the data from"}
{"comment_sentence_id": 4363, "class": "BatchNorm1d", "comment_sentence": "evaluation time as well.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "evaluation time as well", "final_sentence": "evaluation time as well"}
{"comment_sentence_id": 417, "class": "ListMixin", "comment_sentence": "between the two and handle each appropriately.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "between the two and handle each appropriately", "final_sentence": "between the two and handle each appropriately"}
{"comment_sentence_id": 321, "class": "DblFromGeom", "comment_sentence": "in by reference as the last argument.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in by reference as the last argument", "final_sentence": "in by reference as the last argument"}
{"comment_sentence_id": 1060, "class": "GeoJSON", "comment_sentence": "scalar types none, number, string are not allowed, only dict containers.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "scalar types none number string are not allowed only dict containers", "final_sentence": "scalar types none number string are not allowed only dict containers"}
{"comment_sentence_id": 3987, "class": "SchemaValidatorMixin", "comment_sentence": "validator.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "validator", "final_sentence": "validator"}
{"comment_sentence_id": 4244, "class": "Adam", "comment_sentence": "running averages of gradient and its square default 09, 0999", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "running averages of gradient and its square default 09 0999", "final_sentence": "running averages of gradient and its square default 09 0999"}
{"comment_sentence_id": 4886, "class": "CyclicLR", "comment_sentence": "rate between two boundaries with a constant frequency, as detailed in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "rate between two boundaries with a constant frequency as detailed in", "final_sentence": "rate between two boundaries with a constant frequency as detailed in"}
{"comment_sentence_id": 327, "class": "DjangoHTMLTranslator", "comment_sentence": "django specific rest to html tweaks.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "django specific rest to html tweaks", "final_sentence": "django specific rest to html tweaks"}
{"comment_sentence_id": 5065, "class": "EmbeddingBag", "comment_sentence": "if attr per sample weights is passed, the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if attr per sample weights is passed the", "final_sentence": "if attr per sample weights is passed the"}
{"comment_sentence_id": 1846, "class": "ExcelFile", "comment_sentence": "class for parsing tabular excel sheets into dataframe objects.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class for parsing tabular excel sheets into dataframe objects", "final_sentence": "class for parsing tabular excel sheets into dataframe objects"}
{"comment_sentence_id": 797, "class": "StaticFilesHandler", "comment_sentence": "wsgi middleware that intercepts calls to the static files directory, as", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "wsgi middleware that intercepts calls to the static files directory as", "final_sentence": "wsgi middleware that intercepts calls to the static files directory as"}
{"comment_sentence_id": 2382, "class": "And", "comment_sentence": "requires all given class parseexpression s to be found in the given order.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "requires all given class parseexpression s to be found in the given order", "final_sentence": "requires all given class parseexpression s to be found in the given order"}
{"comment_sentence_id": 4389, "class": "BatchNorm1d", "comment_sentence": "this module does not track such statistics and always uses batch", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this module does not track such statistics and always uses batch", "final_sentence": "this module does not track such statistics and always uses batch"}
{"comment_sentence_id": 3618, "class": "Path", "comment_sentence": "param resolve path if this is true, then the path is fully resolved", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param resolve path if this is true then the path is fully resolved", "final_sentence": "param resolve path if this is true then the path is fully resolved"}
{"comment_sentence_id": 434, "class": "ListMixin", "comment_sentence": "type or tuple allowed", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "type or tuple allowed", "final_sentence": "type or tuple allowed"}
{"comment_sentence_id": 2083, "class": "PlotAccessor", "comment_sentence": "class matplotlib^axes.axes or numpy^ndarray of them", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "class matplotlib axes axes or numpy ndarray of them", "final_sentence": "class matplotlib axes axes or numpy ndarray of them"}
{"comment_sentence_id": 3000, "class": "HTMLParser", "comment_sentence": "generates a tree structure from a stream of possibly malformed html.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "generates a tree structure from a stream of possibly malformed html", "final_sentence": "generates a tree structure from a stream of possibly malformed html"}
{"comment_sentence_id": 1561, "class": "Base", "comment_sentence": "input data", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input data", "final_sentence": "input data"}
{"comment_sentence_id": 953, "class": "Audio", "comment_sentence": "1 and 1 inclusive , otherwise an error is raised.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "1 and 1 inclusive otherwise an error is raised", "final_sentence": "1 and 1 inclusive otherwise an error is raised"}
{"comment_sentence_id": 287, "class": "Combinable", "comment_sentence": "some connector.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "some connector", "final_sentence": "some connector"}
{"comment_sentence_id": 2850, "class": "FileSystemLoader", "comment_sentence": "in folders on the file system and is the preferred way to load them.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in folders on the file system and is the preferred way to load them", "final_sentence": "in folders on the file system and is the preferred way to load them"}
{"comment_sentence_id": 3022, "class": "InternalName", "comment_sentence": "meth jinja2^parser.parser^free identifier method that creates", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "meth jinja2 parser parser free identifier method that creates", "final_sentence": "meth jinja2 parser parser free identifier method that creates"}
{"comment_sentence_id": 2672, "class": "Environment", "comment_sentence": "disable that.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "disable that", "final_sentence": "disable that"}
{"comment_sentence_id": 5060, "class": "EmbeddingBag", "comment_sentence": "operations.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "operations", "final_sentence": "operations"}
{"comment_sentence_id": 3674, "class": "PoolManager", "comment_sentence": "additional parameters are used to create fresh", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "additional parameters are used to create fresh", "final_sentence": "additional parameters are used to create fresh"}
{"comment_sentence_id": 4736, "class": "Conv3d", "comment_sentence": "a tuple of three ints in which case, the first int is used for the depth dimension,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a tuple of three ints in which case the first int is used for the depth dimension", "final_sentence": "a tuple of three ints in which case the first int is used for the depth dimension"}
{"comment_sentence_id": 1982, "class": "NonConsolidatableMixIn", "comment_sentence": "hold methods for the nonconsolidatable blocks", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "hold methods for the nonconsolidatable blocks", "final_sentence": "hold methods for the nonconsolidatable blocks"}
{"comment_sentence_id": 325, "class": "DisallowedModelAdminToField", "comment_sentence": "invalid to field was passed to admin view via url query string", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "invalid to field was passed to admin view via url query string", "final_sentence": "invalid to field was passed to admin view via url query string"}
{"comment_sentence_id": 547, "class": "MigrationLoader", "comment_sentence": "django^db.migrations^migration for what that looks like.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "django db migrations migration for what that looks like", "final_sentence": "django db migrations migration for what that looks like"}
{"comment_sentence_id": 2231, "class": "SQLiteTable", "comment_sentence": "instead of a table variable just use the create table statement.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "instead of a table variable just use the create table statement", "final_sentence": "instead of a table variable just use the create table statement"}
{"comment_sentence_id": 731, "class": "RawPostDataException", "comment_sentence": "you cannot access raw post data from a request that has", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "you cannot access raw post data from a request that has", "final_sentence": "you cannot access raw post data from a request that has"}
{"comment_sentence_id": 1648, "class": "CategoricalDtype", "comment_sentence": "must be unique, and must not contain any nulls.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "must be unique and must not contain any nulls", "final_sentence": "must be unique and must not contain any nulls"}
{"comment_sentence_id": 249, "class": "CacheHandler", "comment_sentence": "a cache handler to manage access to cache instances.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a cache handler to manage access to cache instances", "final_sentence": "a cache handler to manage access to cache instances"}
{"comment_sentence_id": 1144, "class": "Struct", "comment_sentence": "attribute style access.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "attribute style access", "final_sentence": "attribute style access"}
{"comment_sentence_id": 4484, "class": "BCEWithLogitsLoss", "comment_sentence": "math", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "math", "final_sentence": "math"}
{"comment_sentence_id": 880, "class": "WindowFrame", "comment_sentence": "there are two types of frame", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "there are two types of frame", "final_sentence": "there are two types of frame"}
{"comment_sentence_id": 5336, "class": "MultiLabelMarginLoss", "comment_sentence": "args", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "args", "final_sentence": "args"}
{"comment_sentence_id": 5069, "class": "EmbeddingBag", "comment_sentence": "num embeddings int size of the dictionary of embeddings", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "num embeddings int size of the dictionary of embeddings", "final_sentence": "num embeddings int size of the dictionary of embeddings"}
{"comment_sentence_id": 2357, "class": "_BZ2Proxy", "comment_sentence": "small proxy class that enables external file object", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "small proxy class that enables external file object", "final_sentence": "small proxy class that enables external file object"}
{"comment_sentence_id": 5238, "class": "LastNWindowCollector", "comment_sentence": "this layer is not thread safe.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this layer is not thread safe", "final_sentence": "this layer is not thread safe"}
{"comment_sentence_id": 913, "class": "Audio", "comment_sentence": "when this object is returned by an input cell or passed to the", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "when this object is returned by an input cell or passed to the", "final_sentence": "when this object is returned by an input cell or passed to the"}
{"comment_sentence_id": 4769, "class": "Conv3d", "comment_sentence": "input math n, c in , d in , h in , w in", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "input math n c in d in h in w in", "final_sentence": "input math n c in d in h in w in"}
{"comment_sentence_id": 1576, "class": "BooleanArray", "comment_sentence": "a boolean array with the mask true indicating missing .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "a boolean array with the mask true indicating missing", "final_sentence": "a boolean array with the mask true indicating missing"}
{"comment_sentence_id": 3823, "class": "Retry", "comment_sentence": "counts.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "counts", "final_sentence": "counts"}
{"comment_sentence_id": 5084, "class": "EmbeddingBag", "comment_sentence": "in the bag, max computes the max value over each bag.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "in the bag max computes the max value over each bag", "final_sentence": "in the bag max computes the max value over each bag"}
{"comment_sentence_id": 1562, "class": "Base", "comment_sentence": "to be supplied in breaks format, then converted by the subclass method", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to be supplied in breaks format then converted by the subclass method", "final_sentence": "to be supplied in breaks format then converted by the subclass method"}
{"comment_sentence_id": 3850, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 5073, "class": "EmbeddingBag", "comment_sentence": "norm type float, optional the p of the p norm to compute for the attr max norm option.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option", "final_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option"}
{"comment_sentence_id": 4014, "class": "SkipTo", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 4108, "class": "Token", "comment_sentence": "token class.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "token class", "final_sentence": "token class"}
{"comment_sentence_id": 5110, "class": "EmbeddingBag", "comment_sentence": "to indicate all weights should be taken to be 1 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "to indicate all weights should be taken to be 1", "final_sentence": "to indicate all weights should be taken to be 1"}
{"comment_sentence_id": 5093, "class": "EmbeddingBag", "comment_sentence": "initialized from math mathcal n 0, 1 .", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "initialized from math mathcal n 0 1", "final_sentence": "initialized from math mathcal n 0 1"}
{"comment_sentence_id": 1960, "class": "IntervalDtype", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 1046, "class": "CellMagicRole", "comment_sentence": "cross reference role displayed with a %% prefix", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "cross reference role displayed with a prefix", "final_sentence": "cross reference role displayed with a prefix"}
{"comment_sentence_id": 4730, "class": "Conv3d", "comment_sentence": "concatenated.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "concatenated", "final_sentence": "concatenated"}
{"comment_sentence_id": 3781, "class": "RequirementUninstaller", "comment_sentence": "this uses uninstallpathset to control the workflow.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this uses uninstallpathset to control the workflow", "final_sentence": "this uses uninstallpathset to control the workflow"}
{"comment_sentence_id": 2010, "class": "PlotAccessor", "comment_sentence": "figsize a tuple width, height in inches", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "figsize a tuple width height in inches", "final_sentence": "figsize a tuple width height in inches"}
{"comment_sentence_id": 1444, "class": "Event", "comment_sentence": "this is a single event in the event log.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this is a single event in the event log", "final_sentence": "this is a single event in the event log"}
{"comment_sentence_id": 2070, "class": "PlotAccessor", "comment_sentence": "include bool bool, default is false", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "include bool bool default is false", "final_sentence": "include bool bool default is false"}
{"comment_sentence_id": 1853, "class": "ExcelFile", "comment_sentence": "if a string or path object, expected to be a path to xls, xlsx or odf file.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "if a string or path object expected to be a path to xls xlsx or odf file", "final_sentence": "if a string or path object expected to be a path to xls xlsx or odf file"}
{"comment_sentence_id": 2510, "class": "Context_", "comment_sentence": "the template context supports read only dict operations get ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the template context supports read only dict operations get", "final_sentence": "the template context supports read only dict operations get"}
{"comment_sentence_id": 3745, "class": "Request", "comment_sentence": "param auth auth handler or user, pass tuple.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "param auth auth handler or user pass tuple", "final_sentence": "param auth auth handler or user pass tuple"}
{"comment_sentence_id": 1731, "class": "CategoricalIndex", "comment_sentence": "name object, optional", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "name object optional", "final_sentence": "name object optional"}
{"comment_sentence_id": 2592, "class": "Environment", "comment_sentence": "the string marking the end of a comment.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "the string marking the end of a comment", "final_sentence": "the string marking the end of a comment"}
{"comment_sentence_id": 4379, "class": "BatchNorm1d", "comment_sentence": "momentum the value used for the running mean and running var", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "momentum the value used for the running mean and running var", "final_sentence": "momentum the value used for the running mean and running var"}
{"comment_sentence_id": 5056, "class": "EmbeddingBag", "comment_sentence": "with mode sum is equivalent to class torch^nn.embedding followed by torch^sum dim 0 ,", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "with mode sum is equivalent to class torch nn embedding followed by torch sum dim 0", "final_sentence": "with mode sum is equivalent to class torch nn embedding followed by torch sum dim 0"}
{"comment_sentence_id": 4731, "class": "Conv3d", "comment_sentence": "at groups attr in channels , each input channel is convolved with", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "at groups attr in channels each input channel is convolved with", "final_sentence": "at groups attr in channels each input channel is convolved with"}
{"comment_sentence_id": 2377, "class": "_PathParents", "comment_sentence": "this object provides sequence like access to the logical ancestors", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this object provides sequence like access to the logical ancestors", "final_sentence": "this object provides sequence like access to the logical ancestors"}
{"comment_sentence_id": 1477, "class": "StorageBackedLongs", "comment_sentence": "and save sets of ints.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "and save sets of ints", "final_sentence": "and save sets of ints"}
{"comment_sentence_id": 846, "class": "TestUtils", "comment_sentence": "this doc output is required for testing.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "this doc output is required for testing", "final_sentence": "this doc output is required for testing"}
{"comment_sentence_id": 5198, "class": "Error", "comment_sentence": "each error is a section in the output of cuda memcheck.", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "each error is a section in the output of cuda memcheck", "final_sentence": "each error is a section in the output of cuda memcheck"}
{"comment_sentence_id": 4510, "class": "BCEWithLogitsLoss", "comment_sentence": "note that for", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "note that for", "final_sentence": "note that for"}
{"comment_sentence_id": 3824, "class": "Retry", "comment_sentence": "it s a good idea to set this to some sensibly high value to", "partition": 0, "instance_type": 0, "category": "Usage", "pre_sentence": "it s a good idea to set this to some sensibly high value to", "final_sentence": "it s a good idea to set this to some sensibly high value to"}

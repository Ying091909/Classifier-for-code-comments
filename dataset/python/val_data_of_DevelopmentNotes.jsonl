{"comment_sentence_id": 4146, "class": "_OpNamespace", "comment_sentence": "to", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "to", "final_sentence": "to"}
{"comment_sentence_id": 5252, "class": "LBFGS", "comment_sentence": "note", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "note", "final_sentence": "note"}
{"comment_sentence_id": 5062, "class": "EmbeddingBag", "comment_sentence": "pass.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "pass", "final_sentence": "pass"}
{"comment_sentence_id": 893, "class": "XFrameOptionsMiddleware", "comment_sentence": "do not set the header if it s already set or if the response contains", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "do not set the header if it s already set or if the response contains", "final_sentence": "do not set the header if it s already set or if the response contains"}
{"comment_sentence_id": 2878, "class": "FollowedBy", "comment_sentence": "followedby does not advance the parsing position within", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "followedby does not advance the parsing position within", "final_sentence": "followedby does not advance the parsing position within"}
{"comment_sentence_id": 91, "class": "BaseCommand", "comment_sentence": "parse the command line arguments and work out what code to call in", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "parse the command line arguments and work out what code to call in", "final_sentence": "parse the command line arguments and work out what code to call in"}
{"comment_sentence_id": 5742, "class": "Unfold", "comment_sentence": "fold nn^fold output size .", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "fold nn fold output size", "final_sentence": "fold nn fold output size"}
{"comment_sentence_id": 3521, "class": "ParseResults", "comment_sentence": "result date str^parsestring 1999 12 31", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "result date str parsestring 1999 12 31", "final_sentence": "result date str parsestring 1999 12 31"}
{"comment_sentence_id": 2325, "class": "StringMethods", "comment_sentence": "patterned after python s string", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "patterned after python s string", "final_sentence": "patterned after python s string"}
{"comment_sentence_id": 3023, "class": "InternalName", "comment_sentence": "a new identifier for you.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "a new identifier for you", "final_sentence": "a new identifier for you"}
{"comment_sentence_id": 846, "class": "TestUtils", "comment_sentence": "this doc output is required for testing.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "this doc output is required for testing", "final_sentence": "this doc output is required for testing"}
{"comment_sentence_id": 5738, "class": "Unfold", "comment_sentence": "fold params dict kernel size .", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "fold params dict kernel size", "final_sentence": "fold params dict kernel size"}
{"comment_sentence_id": 894, "class": "XFrameOptionsMiddleware", "comment_sentence": "a xframe options exempt value set to true.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "a xframe options exempt value set to true", "final_sentence": "a xframe options exempt value set to true"}
{"comment_sentence_id": 3085, "class": "Markup", "comment_sentence": "this implements the html interface that some frameworks", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "this implements the html interface that some frameworks", "final_sentence": "this implements the html interface that some frameworks"}
{"comment_sentence_id": 72, "class": "AutoFieldMeta", "comment_sentence": "for detecting automatically generated fields.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "for detecting automatically generated fields", "final_sentence": "for detecting automatically generated fields"}
{"comment_sentence_id": 4154, "class": "_OpNamespace", "comment_sentence": "on the torch^ops object, which will create a new opnamespace", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "on the torch ops object which will create a new opnamespace", "final_sentence": "on the torch ops object which will create a new opnamespace"}
{"comment_sentence_id": 5741, "class": "Unfold", "comment_sentence": ", stride .", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "stride", "final_sentence": "stride"}
{"comment_sentence_id": 2088, "class": "PlotAccessor", "comment_sentence": "if kind bar or barh , you can specify relative alignments", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "if kind bar or barh you can specify relative alignments", "final_sentence": "if kind bar or barh you can specify relative alignments"}
{"comment_sentence_id": 896, "class": "XFrameOptionsMiddleware", "comment_sentence": "response can only be loaded on a frame within the same site.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "response can only be loaded on a frame within the same site", "final_sentence": "response can only be loaded on a frame within the same site"}
{"comment_sentence_id": 1563, "class": "Base", "comment_sentence": "get kwargs from breaks to the expected format.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "get kwargs from breaks to the expected format", "final_sentence": "get kwargs from breaks to the expected format"}
{"comment_sentence_id": 2880, "class": "FollowedBy", "comment_sentence": "expression matches at the current position.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "expression matches at the current position", "final_sentence": "expression matches at the current position"}
{"comment_sentence_id": 508, "class": "MigrationGraph", "comment_sentence": "merely a convention to aid file listing.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "merely a convention to aid file listing", "final_sentence": "merely a convention to aid file listing"}
{"comment_sentence_id": 2225, "class": "SetopCheck", "comment_sentence": "to perform the type check in advance.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "to perform the type check in advance", "final_sentence": "to perform the type check in advance"}
{"comment_sentence_id": 5737, "class": "Unfold", "comment_sentence": "parameters", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 5752, "class": "Unfold", "comment_sentence": "when the divisor tensor contains no zero elements, then", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "when the divisor tensor contains no zero elements then", "final_sentence": "when the divisor tensor contains no zero elements then"}
{"comment_sentence_id": 4372, "class": "BatchNorm1d", "comment_sentence": "because the batch normalization is done over the c dimension, computing statistics", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "because the batch normalization is done over the c dimension computing statistics", "final_sentence": "because the batch normalization is done over the c dimension computing statistics"}
{"comment_sentence_id": 5057, "class": "EmbeddingBag", "comment_sentence": "with mode mean is equivalent to class torch^nn.embedding followed by torch^mean dim 0 ,", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0", "final_sentence": "with mode mean is equivalent to class torch nn embedding followed by torch mean dim 0"}
{"comment_sentence_id": 4156, "class": "_OpNamespace", "comment_sentence": "object.", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 2090, "class": "PlotAccessor", "comment_sentence": "from 0 left bottom end to 1 right top end .", "partition": 0, "instance_type": 1, "category": "DevelopmentNotes", "pre_sentence": "from 0 left bottom end to 1 right top end", "final_sentence": "from 0 left bottom end to 1 right top end"}
{"comment_sentence_id": 4676, "class": "ConstantPad3d", "comment_sentence": "math text padding left , math text padding right ,", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "math text padding left math text padding right", "final_sentence": "math text padding left math text padding right"}
{"comment_sentence_id": 428, "class": "ListMixin", "comment_sentence": "function len self", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "function len self", "final_sentence": "function len self"}
{"comment_sentence_id": 5368, "class": "MultiLabelMarginLoss", "comment_sentence": "if attr reduction is none , then math n .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if attr reduction is none then math n", "final_sentence": "if attr reduction is none then math n"}
{"comment_sentence_id": 937, "class": "Audio", "comment_sentence": "the original source be referenced.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the original source be referenced", "final_sentence": "the original source be referenced"}
{"comment_sentence_id": 4495, "class": "BCEWithLogitsLoss", "comment_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples", "final_sentence": "the loss would act as if the dataset contains math 3 times 100 300 positive examples"}
{"comment_sentence_id": 4871, "class": "ConvReLU3d", "comment_sentence": "we adopt the same interface as class torch^nn.quantized^conv3d .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "we adopt the same interface as class torch nn quantized conv3d", "final_sentence": "we adopt the same interface as class torch nn quantized conv3d"}
{"comment_sentence_id": 5579, "class": "Subset", "comment_sentence": "dataset dataset the whole dataset", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "dataset dataset the whole dataset", "final_sentence": "dataset dataset the whole dataset"}
{"comment_sentence_id": 5266, "class": "LBFGS", "comment_sentence": "value parameter changes default 1e 9 .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "value parameter changes default 1e 9", "final_sentence": "value parameter changes default 1e 9"}
{"comment_sentence_id": 918, "class": "Audio", "comment_sentence": "can be one of", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "can be one of", "final_sentence": "can be one of"}
{"comment_sentence_id": 755, "class": "ReverseGenericManyToOneDescriptor", "comment_sentence": "comments genericrelation comment", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "comments genericrelation comment", "final_sentence": "comments genericrelation comment"}
{"comment_sentence_id": 2025, "class": "PlotAccessor", "comment_sentence": "logx bool or sym , default false", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "logx bool or sym default false", "final_sentence": "logx bool or sym default false"}
{"comment_sentence_id": 3735, "class": "Request", "comment_sentence": "param files dictionary of filename fileobject files to multipart upload.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param files dictionary of filename fileobject files to multipart upload", "final_sentence": "param files dictionary of filename fileobject files to multipart upload"}
{"comment_sentence_id": 3701, "class": "PrefixLoader", "comment_sentence": "the prefix is delimited from the template by a slash per", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the prefix is delimited from the template by a slash per", "final_sentence": "the prefix is delimited from the template by a slash per"}
{"comment_sentence_id": 3881, "class": "Retry", "comment_sentence": "if status falls in status forcelist range and retries have", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if status falls in status forcelist range and retries have", "final_sentence": "if status falls in status forcelist range and retries have"}
{"comment_sentence_id": 3019, "class": "InternalName", "comment_sentence": "an internal name in the compiler.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "an internal name in the compiler", "final_sentence": "an internal name in the compiler"}
{"comment_sentence_id": 5706, "class": "Unfold", "comment_sentence": "reshaping.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "reshaping", "final_sentence": "reshaping"}
{"comment_sentence_id": 5722, "class": "Unfold", "comment_sentence": "attr stride is an int or a tuple of length 1, their values will be", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "attr stride is an int or a tuple of length 1 their values will be", "final_sentence": "attr stride is an int or a tuple of length 1 their values will be"}
{"comment_sentence_id": 327, "class": "DjangoHTMLTranslator", "comment_sentence": "django specific rest to html tweaks.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "django specific rest to html tweaks", "final_sentence": "django specific rest to html tweaks"}
{"comment_sentence_id": 412, "class": "ListMixin", "comment_sentence": "the index i will always satisfy 0 i len self .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the index i will always satisfy 0 i len self", "final_sentence": "the index i will always satisfy 0 i len self"}
{"comment_sentence_id": 2575, "class": "Environment", "comment_sentence": "here are the possible initialization parameters", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "here are the possible initialization parameters", "final_sentence": "here are the possible initialization parameters"}
{"comment_sentence_id": 766, "class": "SameAsLookup", "comment_sentence": "so if a and b are the same feature,", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "so if a and b are the same feature", "final_sentence": "so if a and b are the same feature"}
{"comment_sentence_id": 2557, "class": "Distribution", "comment_sentence": "a base class for distributions, whether installed or from indexes.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a base class for distributions whether installed or from indexes", "final_sentence": "a base class for distributions whether installed or from indexes"}
{"comment_sentence_id": 2264, "class": "StringArray", "comment_sentence": "none", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "none", "final_sentence": "none"}
{"comment_sentence_id": 1166, "class": "TermColors", "comment_sentence": "this class should be used as a mixin for building color schemes.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this class should be used as a mixin for building color schemes", "final_sentence": "this class should be used as a mixin for building color schemes"}
{"comment_sentence_id": 1650, "class": "CategoricalDtype", "comment_sentence": "whether or not this categorical is treated as a ordered categorical.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "whether or not this categorical is treated as a ordered categorical", "final_sentence": "whether or not this categorical is treated as a ordered categorical"}
{"comment_sentence_id": 1221, "class": "_MockPOP3", "comment_sentence": "pm^stat", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "pm stat", "final_sentence": "pm stat"}
{"comment_sentence_id": 4964, "class": "CyclicLR", "comment_sentence": "example", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "example", "final_sentence": "example"}
{"comment_sentence_id": 3997, "class": "Session", "comment_sentence": "or as a context manager", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "or as a context manager", "final_sentence": "or as a context manager"}
{"comment_sentence_id": 1774, "class": "CategoricalIndex", "comment_sentence": "c", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "c", "final_sentence": "c"}
{"comment_sentence_id": 210, "class": "BaseExpression", "comment_sentence": "base class for all query expressions.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "base class for all query expressions", "final_sentence": "base class for all query expressions"}
{"comment_sentence_id": 3507, "class": "ParseResults", "comment_sentence": "structured parse results, to provide multiple means of access to", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "structured parse results to provide multiple means of access to", "final_sentence": "structured parse results to provide multiple means of access to"}
{"comment_sentence_id": 232, "class": "BoundWidget", "comment_sentence": "% for radio in myform^beatles %", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "for radio in myform beatles", "final_sentence": "for radio in myform beatles"}
{"comment_sentence_id": 4520, "class": "BCEWithLogitsLoss", "comment_sentence": "on attr size average .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "on attr size average", "final_sentence": "on attr size average"}
{"comment_sentence_id": 487, "class": "Migration", "comment_sentence": "run before a list of tuples of app path, migration name", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "run before a list of tuples of app path migration name", "final_sentence": "run before a list of tuples of app path migration name"}
{"comment_sentence_id": 2589, "class": "Environment", "comment_sentence": "the string marking the beginning of a comment.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the string marking the beginning of a comment", "final_sentence": "the string marking the beginning of a comment"}
{"comment_sentence_id": 1728, "class": "CategoricalIndex", "comment_sentence": "versionadded 021.0", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "versionadded 021 0", "final_sentence": "versionadded 021 0"}
{"comment_sentence_id": 4536, "class": "BCEWithLogitsLoss", "comment_sentence": "input math n, where math means, any number of additional dimensions", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "input math n where math means any number of additional dimensions", "final_sentence": "input math n where math means any number of additional dimensions"}
{"comment_sentence_id": 355, "class": "FallbackStorage", "comment_sentence": "try to store all messages in the first backend.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "try to store all messages in the first backend", "final_sentence": "try to store all messages in the first backend"}
{"comment_sentence_id": 3671, "class": "PoolManager", "comment_sentence": "headers to include with all requests, unless other headers are given", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "headers to include with all requests unless other headers are given", "final_sentence": "headers to include with all requests unless other headers are given"}
{"comment_sentence_id": 5630, "class": "TaskOutput", "comment_sentence": "represents the output of a task.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "represents the output of a task", "final_sentence": "represents the output of a task"}
{"comment_sentence_id": 3161, "class": "MemcachedBytecodeCache", "comment_sentence": "this class implements a bytecode cache that uses a memcache cache for", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this class implements a bytecode cache that uses a memcache cache for", "final_sentence": "this class implements a bytecode cache that uses a memcache cache for"}
{"comment_sentence_id": 431, "class": "ListMixin", "comment_sentence": "the minimum legal length optional", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the minimum legal length optional", "final_sentence": "the minimum legal length optional"}
{"comment_sentence_id": 963, "class": "Audio", "comment_sentence": "# can also do stereo or more channels", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "can also do stereo or more channels", "final_sentence": "can also do stereo or more channels"}
{"comment_sentence_id": 1224, "class": "_MockPOP3", "comment_sentence": "evil , good", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "evil good", "final_sentence": "evil good"}
{"comment_sentence_id": 212, "class": "BaseUpdateView", "comment_sentence": "base view for updating an existing object.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "base view for updating an existing object", "final_sentence": "base view for updating an existing object"}
{"comment_sentence_id": 4796, "class": "Conv3d", "comment_sentence": "m nn^conv3d 16, 33, 3, 5, 2 , stride 2, 1, 1 , padding 4, 2, 0", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "m nn conv3d 16 33 3 5 2 stride 2 1 1 padding 4 2 0", "final_sentence": "m nn conv3d 16 33 3 5 2 stride 2 1 1 padding 4 2 0"}
{"comment_sentence_id": 1638, "class": "BusinessHour", "comment_sentence": "dateoffset subclass representing possibly n business hours.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "dateoffset subclass representing possibly n business hours", "final_sentence": "dateoffset subclass representing possibly n business hours"}
{"comment_sentence_id": 7, "class": "AppConfigStub", "comment_sentence": "stub of an appconfig.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "stub of an appconfig", "final_sentence": "stub of an appconfig"}
{"comment_sentence_id": 2371, "class": "_FileInFile", "comment_sentence": "object.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "object", "final_sentence": "object"}
{"comment_sentence_id": 2579, "class": "Environment", "comment_sentence": "block end string", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "block end string", "final_sentence": "block end string"}
{"comment_sentence_id": 4723, "class": "Conv3d", "comment_sentence": "attr in channels and attr out channels must both be divisible by", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "attr in channels and attr out channels must both be divisible by", "final_sentence": "attr in channels and attr out channels must both be divisible by"}
{"comment_sentence_id": 1149, "class": "Struct", "comment_sentence": "overloaded operators.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "overloaded operators", "final_sentence": "overloaded operators"}
{"comment_sentence_id": 2012, "class": "PlotAccessor", "comment_sentence": "use index as ticks for x axis.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "use index as ticks for x axis", "final_sentence": "use index as ticks for x axis"}
{"comment_sentence_id": 1646, "class": "CategoricalDtype", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 3876, "class": "Retry", "comment_sentence": "param bool raise on redirect whether, if the number of redirects is", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param bool raise on redirect whether if the number of redirects is", "final_sentence": "param bool raise on redirect whether if the number of redirects is"}
{"comment_sentence_id": 5298, "class": "Module", "comment_sentence": "self^conv1 nn^conv2d 1, 20, 5", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "self conv1 nn conv2d 1 20 5", "final_sentence": "self conv1 nn conv2d 1 20 5"}
{"comment_sentence_id": 840, "class": "TestImageFieldFile", "comment_sentence": "custom field file class that records whether or not the underlying file", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "custom field file class that records whether or not the underlying file", "final_sentence": "custom field file class that records whether or not the underlying file"}
{"comment_sentence_id": 3837, "class": "Retry", "comment_sentence": "set to 0 to fail on the first retry of this type.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "set to 0 to fail on the first retry of this type", "final_sentence": "set to 0 to fail on the first retry of this type"}
{"comment_sentence_id": 2274, "class": "StringArray", "comment_sentence": "pd^array this is , some text , none, data.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "pd array this is some text none data", "final_sentence": "pd array this is some text none data"}
{"comment_sentence_id": 5495, "class": "QuantWrapper", "comment_sentence": "for dequantstub .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "for dequantstub", "final_sentence": "for dequantstub"}
{"comment_sentence_id": 5292, "class": "Module", "comment_sentence": "import torch^nn as nn", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "import torch nn as nn", "final_sentence": "import torch nn as nn"}
{"comment_sentence_id": 5366, "class": "MultiLabelMarginLoss", "comment_sentence": "target math c or math n, c , label targets padded by 1 ensuring same shape as the input.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "target math c or math n c label targets padded by 1 ensuring same shape as the input", "final_sentence": "target math c or math n c label targets padded by 1 ensuring same shape as the input"}
{"comment_sentence_id": 2060, "class": "PlotAccessor", "comment_sentence": "if a series or dataframe is passed, use passed data to draw a", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if a series or dataframe is passed use passed data to draw a", "final_sentence": "if a series or dataframe is passed use passed data to draw a"}
{"comment_sentence_id": 4482, "class": "BCEWithLogitsLoss", "comment_sentence": "it s possible to trade off recall and precision by adding weights to positive examples.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "it s possible to trade off recall and precision by adding weights to positive examples", "final_sentence": "it s possible to trade off recall and precision by adding weights to positive examples"}
{"comment_sentence_id": 3699, "class": "PrefixLoader", "comment_sentence": "a loader that is passed a dict of loaders where each loader is bound", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a loader that is passed a dict of loaders where each loader is bound", "final_sentence": "a loader that is passed a dict of loaders where each loader is bound"}
{"comment_sentence_id": 5092, "class": "EmbeddingBag", "comment_sentence": "weight tensor the learnable weights of the module of shape num embeddings, embedding dim", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim", "final_sentence": "weight tensor the learnable weights of the module of shape num embeddings embedding dim"}
{"comment_sentence_id": 5362, "class": "MultiLabelMarginLoss", "comment_sentence": "default mean", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "default mean", "final_sentence": "default mean"}
{"comment_sentence_id": 1720, "class": "CategoricalIndex", "comment_sentence": "ordered bool, optional", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "ordered bool optional", "final_sentence": "ordered bool optional"}
{"comment_sentence_id": 349, "class": "FakePayload", "comment_sentence": "that wouldn t work in real life.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "that wouldn t work in real life", "final_sentence": "that wouldn t work in real life"}
{"comment_sentence_id": 2642, "class": "Environment", "comment_sentence": "if set to true the xml html autoescaping feature is enabled by", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if set to true the xml html autoescaping feature is enabled by", "final_sentence": "if set to true the xml html autoescaping feature is enabled by"}
{"comment_sentence_id": 4889, "class": "CyclicLR", "comment_sentence": "or per cycle basis.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "or per cycle basis", "final_sentence": "or per cycle basis"}
{"comment_sentence_id": 742, "class": "RemoteTestRunner", "comment_sentence": "run tests and record everything but don t display anything.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "run tests and record everything but don t display anything", "final_sentence": "run tests and record everything but don t display anything"}
{"comment_sentence_id": 4539, "class": "BCEWithLogitsLoss", "comment_sentence": "if attr reduction is none , then math n, , same", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if attr reduction is none then math n same", "final_sentence": "if attr reduction is none then math n same"}
{"comment_sentence_id": 2041, "class": "PlotAccessor", "comment_sentence": "rotation for ticks xticks for vertical, yticks for horizontal", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "rotation for ticks xticks for vertical yticks for horizontal", "final_sentence": "rotation for ticks xticks for vertical yticks for horizontal"}
{"comment_sentence_id": 4661, "class": "Caffe2OperatorTestCase", "comment_sentence": "when run backward is false, the run forward method will be executed, otherwise", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "when run backward is false the run forward method will be executed otherwise", "final_sentence": "when run backward is false the run forward method will be executed otherwise"}
{"comment_sentence_id": 5212, "class": "ExternalInitializer", "comment_sentence": "the initializer, but rather provided in the workspace when param init net is", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the initializer but rather provided in the workspace when param init net is", "final_sentence": "the initializer but rather provided in the workspace when param init net is"}
{"comment_sentence_id": 3783, "class": "RequirementUninstaller", "comment_sentence": "exits correctly, the uninstallation is committed, otherwise rolled back.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "exits correctly the uninstallation is committed otherwise rolled back", "final_sentence": "exits correctly the uninstallation is committed otherwise rolled back"}
{"comment_sentence_id": 4460, "class": "BCEWithLogitsLoss", "comment_sentence": "this loss combines a sigmoid layer and the bceloss in one single", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this loss combines a sigmoid layer and the bceloss in one single", "final_sentence": "this loss combines a sigmoid layer and the bceloss in one single"}
{"comment_sentence_id": 3675, "class": "PoolManager", "comment_sentence": "class urllib3^connectionpool.connectionpool instances.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "class urllib3 connectionpool connectionpool instances", "final_sentence": "class urllib3 connectionpool connectionpool instances"}
{"comment_sentence_id": 292, "class": "ConsoleDirective", "comment_sentence": "a restructuredtext directive which renders a two tab code block in which", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a restructuredtext directive which renders a two tab code block in which", "final_sentence": "a restructuredtext directive which renders a two tab code block in which"}
{"comment_sentence_id": 5338, "class": "MultiLabelMarginLoss", "comment_sentence": "by default,", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "by default", "final_sentence": "by default"}
{"comment_sentence_id": 859, "class": "UniqueAnchor", "comment_sentence": "this is a model that can be used as", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this is a model that can be used as", "final_sentence": "this is a model that can be used as"}
{"comment_sentence_id": 2392, "class": "And", "comment_sentence": "expr integer id name expr name integer age", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "expr integer id name expr name integer age", "final_sentence": "expr integer id name expr name integer age"}
{"comment_sentence_id": 2273, "class": "StringArray", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 430, "class": "ListMixin", "comment_sentence": "int minlength", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "int minlength", "final_sentence": "int minlength"}
{"comment_sentence_id": 2604, "class": "Environment", "comment_sentence": "if this is set to true the first newline after a block is", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if this is set to true the first newline after a block is", "final_sentence": "if this is set to true the first newline after a block is"}
{"comment_sentence_id": 3668, "class": "PoolManager", "comment_sentence": "number of connection pools to cache before discarding the least", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "number of connection pools to cache before discarding the least", "final_sentence": "number of connection pools to cache before discarding the least"}
{"comment_sentence_id": 4514, "class": "BCEWithLogitsLoss", "comment_sentence": "ignored", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "ignored", "final_sentence": "ignored"}
{"comment_sentence_id": 3476, "class": "PacifyFlushWrapper", "comment_sentence": "so as to have minimal impact on any", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "so as to have minimal impact on any", "final_sentence": "so as to have minimal impact on any"}
{"comment_sentence_id": 2265, "class": "StringArray", "comment_sentence": "methods", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "methods", "final_sentence": "methods"}
{"comment_sentence_id": 3733, "class": "Request", "comment_sentence": "param url url to send.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param url url to send", "final_sentence": "param url url to send"}
{"comment_sentence_id": 2631, "class": "Environment", "comment_sentence": "should the optimizer be enabled?", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "should the optimizer be enabled", "final_sentence": "should the optimizer be enabled"}
{"comment_sentence_id": 1220, "class": "_MockPOP3", "comment_sentence": "conn cls mockpop3", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "conn cls mockpop3", "final_sentence": "conn cls mockpop3"}
{"comment_sentence_id": 22, "class": "Atomic", "comment_sentence": "exit commits the transaction or releases the savepoint on normal exit,", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "exit commits the transaction or releases the savepoint on normal exit", "final_sentence": "exit commits the transaction or releases the savepoint on normal exit"}
{"comment_sentence_id": 1994, "class": "PlotAccessor", "comment_sentence": "allows plotting of one column versus another.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "allows plotting of one column versus another", "final_sentence": "allows plotting of one column versus another"}
{"comment_sentence_id": 3741, "class": "Request", "comment_sentence": "param params url parameters to append to the url.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param params url parameters to append to the url", "final_sentence": "param params url parameters to append to the url"}
{"comment_sentence_id": 5073, "class": "EmbeddingBag", "comment_sentence": "norm type float, optional the p of the p norm to compute for the attr max norm option.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option", "final_sentence": "norm type float optional the p of the p norm to compute for the attr max norm option"}
{"comment_sentence_id": 1444, "class": "Event", "comment_sentence": "this is a single event in the event log.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this is a single event in the event log", "final_sentence": "this is a single event in the event log"}
{"comment_sentence_id": 3425, "class": "Option", "comment_sentence": "context.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "context", "final_sentence": "context"}
{"comment_sentence_id": 4024, "class": "SkipTo", "comment_sentence": "report", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "report", "final_sentence": "report"}
{"comment_sentence_id": 5103, "class": "EmbeddingBag", "comment_sentence": "starting index positions of each bag in attr input .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "starting index positions of each bag in attr input", "final_sentence": "starting index positions of each bag in attr input"}
{"comment_sentence_id": 1193, "class": "YouTubeVideo", "comment_sentence": "to calculate seconds from time as hours, minutes, seconds use", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "to calculate seconds from time as hours minutes seconds use", "final_sentence": "to calculate seconds from time as hours minutes seconds use"}
{"comment_sentence_id": 5099, "class": "EmbeddingBag", "comment_sentence": "attr offsets is ignored and required to be none in this case.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "attr offsets is ignored and required to be none in this case", "final_sentence": "attr offsets is ignored and required to be none in this case"}
{"comment_sentence_id": 3806, "class": "Retry", "comment_sentence": "retry configuration.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "retry configuration", "final_sentence": "retry configuration"}
{"comment_sentence_id": 3625, "class": "Path", "comment_sentence": "param allow dash if this is set to true , a single dash to indicate", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param allow dash if this is set to true a single dash to indicate", "final_sentence": "param allow dash if this is set to true a single dash to indicate"}
{"comment_sentence_id": 4512, "class": "BCEWithLogitsLoss", "comment_sentence": "if the field attr size average", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if the field attr size average", "final_sentence": "if the field attr size average"}
{"comment_sentence_id": 4048, "class": "SkipTo", "comment_sentence": "sev critical", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "sev critical", "final_sentence": "sev critical"}
{"comment_sentence_id": 3421, "class": "Option", "comment_sentence": "param count this flag makes an option increment an integer.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param count this flag makes an option increment an integer", "final_sentence": "param count this flag makes an option increment an integer"}
{"comment_sentence_id": 1576, "class": "BooleanArray", "comment_sentence": "a boolean array with the mask true indicating missing .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a boolean array with the mask true indicating missing", "final_sentence": "a boolean array with the mask true indicating missing"}
{"comment_sentence_id": 5087, "class": "EmbeddingBag", "comment_sentence": "see", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "see", "final_sentence": "see"}
{"comment_sentence_id": 5015, "class": "DiagonalTensor", "comment_sentence": "example in the numpy documentation.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "example in the numpy documentation", "final_sentence": "example in the numpy documentation"}
{"comment_sentence_id": 5606, "class": "Task", "comment_sentence": "the mul will only execute once, after all the instances", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the mul will only execute once after all the instances", "final_sentence": "the mul will only execute once after all the instances"}
{"comment_sentence_id": 138, "class": "BaseCommand", "comment_sentence": "to validate an individual application s models", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "to validate an individual application s models", "final_sentence": "to validate an individual application s models"}
{"comment_sentence_id": 5082, "class": "EmbeddingBag", "comment_sentence": "into consideration.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "into consideration", "final_sentence": "into consideration"}
{"comment_sentence_id": 4762, "class": "Conv3d", "comment_sentence": "dilation int or tuple, optional spacing between kernel elements.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "dilation int or tuple optional spacing between kernel elements", "final_sentence": "dilation int or tuple optional spacing between kernel elements"}
{"comment_sentence_id": 1516, "class": "VCardStore", "comment_sentence": "vcs^find vcards guy 0 ^fn", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "vcs find vcards guy 0 fn", "final_sentence": "vcs find vcards guy 0 fn"}
{"comment_sentence_id": 1717, "class": "CategoricalIndex", "comment_sentence": "items need to be unique.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "items need to be unique", "final_sentence": "items need to be unique"}
{"comment_sentence_id": 4501, "class": "BCEWithLogitsLoss", "comment_sentence": "criterion output, target # log sigmoid 0999", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "criterion output target log sigmoid 0999", "final_sentence": "criterion output target log sigmoid 0999"}
{"comment_sentence_id": 1273, "class": "ConfigDict", "comment_sentence": "each variable definition expects three values", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "each variable definition expects three values", "final_sentence": "each variable definition expects three values"}
{"comment_sentence_id": 2391, "class": "And", "comment_sentence": "# more easily written as", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "more easily written as", "final_sentence": "more easily written as"}
{"comment_sentence_id": 2031, "class": "PlotAccessor", "comment_sentence": "loglog bool or sym , default false", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "loglog bool or sym default false", "final_sentence": "loglog bool or sym default false"}
{"comment_sentence_id": 331, "class": "EarliestOrLatestTests", "comment_sentence": "tests for the earliest and latest objects methods", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "tests for the earliest and latest objects methods", "final_sentence": "tests for the earliest and latest objects methods"}
{"comment_sentence_id": 669, "class": "Operation", "comment_sentence": "see db migrations state^py to represent what it performs, as well", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "see db migrations state py to represent what it performs as well", "final_sentence": "see db migrations state py to represent what it performs as well"}
{"comment_sentence_id": 3724, "class": "PyPIJSONLocator", "comment_sentence": "this locator uses pypi s json interface.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this locator uses pypi s json interface", "final_sentence": "this locator uses pypi s json interface"}
{"comment_sentence_id": 4217, "class": "Adadelta", "comment_sentence": "rho float, optional coefficient used for computing a running average", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "rho float optional coefficient used for computing a running average", "final_sentence": "rho float optional coefficient used for computing a running average"}
{"comment_sentence_id": 3672, "class": "PoolManager", "comment_sentence": "explicitly.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "explicitly", "final_sentence": "explicitly"}
{"comment_sentence_id": 218, "class": "BCryptSHA256PasswordHasher", "comment_sentence": "secure password hashing using the bcrypt algorithm recommended", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "secure password hashing using the bcrypt algorithm recommended", "final_sentence": "secure password hashing using the bcrypt algorithm recommended"}
{"comment_sentence_id": 237, "class": "BoundWidget", "comment_sentence": "% endfor %", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "endfor", "final_sentence": "endfor"}
{"comment_sentence_id": 433, "class": "ListMixin", "comment_sentence": "the maximum legal length optional", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the maximum legal length optional", "final_sentence": "the maximum legal length optional"}
{"comment_sentence_id": 3610, "class": "Path", "comment_sentence": "this value to be valid.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this value to be valid", "final_sentence": "this value to be valid"}
{"comment_sentence_id": 1730, "class": "CategoricalIndex", "comment_sentence": "make a copy of input ndarray.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "make a copy of input ndarray", "final_sentence": "make a copy of input ndarray"}
{"comment_sentence_id": 356, "class": "FallbackStorage", "comment_sentence": "store any unstored", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "store any unstored", "final_sentence": "store any unstored"}
{"comment_sentence_id": 3704, "class": "PrefixLoader", "comment_sentence": "loader prefixloader", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "loader prefixloader", "final_sentence": "loader prefixloader"}
{"comment_sentence_id": 5110, "class": "EmbeddingBag", "comment_sentence": "to indicate all weights should be taken to be 1 .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "to indicate all weights should be taken to be 1", "final_sentence": "to indicate all weights should be taken to be 1"}
{"comment_sentence_id": 3888, "class": "Retry", "comment_sentence": "param bool respect retry after header", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param bool respect retry after header", "final_sentence": "param bool respect retry after header"}
{"comment_sentence_id": 3183, "class": "MemcachedBytecodeCache", "comment_sentence": "a default timeout or no timeout should be assumed, if it s", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a default timeout or no timeout should be assumed if it s", "final_sentence": "a default timeout or no timeout should be assumed if it s"}
{"comment_sentence_id": 946, "class": "Audio", "comment_sentence": "set to true if the audio should immediately start playing.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "set to true if the audio should immediately start playing", "final_sentence": "set to true if the audio should immediately start playing"}
{"comment_sentence_id": 376, "class": "ImageFileDescriptor", "comment_sentence": "just like the filedescriptor, but for imagefields.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "just like the filedescriptor but for imagefields", "final_sentence": "just like the filedescriptor but for imagefields"}
{"comment_sentence_id": 2328, "class": "StringMethods", "comment_sentence": "s^str.split", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "s str split", "final_sentence": "s str split"}
{"comment_sentence_id": 924, "class": "Audio", "comment_sentence": "list of float or integer representing the waveform mono", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "list of float or integer representing the waveform mono", "final_sentence": "list of float or integer representing the waveform mono"}
{"comment_sentence_id": 3509, "class": "ParseResults", "comment_sentence": "as a list len results", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "as a list len results", "final_sentence": "as a list len results"}
{"comment_sentence_id": 2027, "class": "PlotAccessor", "comment_sentence": "versionchanged 025.0", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "versionchanged 025 0", "final_sentence": "versionchanged 025 0"}
{"comment_sentence_id": 2322, "class": "StringMethods", "comment_sentence": "vectorized string functions for series and index.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "vectorized string functions for series and index", "final_sentence": "vectorized string functions for series and index"}
{"comment_sentence_id": 1729, "class": "CategoricalIndex", "comment_sentence": "copy bool, default false", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "copy bool default false", "final_sentence": "copy bool default false"}
{"comment_sentence_id": 4475, "class": "BCEWithLogitsLoss", "comment_sentence": "operatorname mean l , & text if reduction text mean", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "operatorname mean l text if reduction text mean", "final_sentence": "operatorname mean l text if reduction text mean"}
{"comment_sentence_id": 1582, "class": "BooleanArray", "comment_sentence": "below .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "below", "final_sentence": "below"}
{"comment_sentence_id": 961, "class": "Audio", "comment_sentence": "data np^sin 2 np^pi 220 t np^sin 2 np^pi 224 t", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "data np sin 2 np pi 220 t np sin 2 np pi 224 t", "final_sentence": "data np sin 2 np pi 220 t np sin 2 np pi 224 t"}
{"comment_sentence_id": 1996, "class": "PlotAccessor", "comment_sentence": "dataframe.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "dataframe", "final_sentence": "dataframe"}
{"comment_sentence_id": 3752, "class": "Request", "comment_sentence": "preparedrequest get", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "preparedrequest get", "final_sentence": "preparedrequest get"}
{"comment_sentence_id": 2609, "class": "Environment", "comment_sentence": "if this is set to true leading spaces and tabs are stripped", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "if this is set to true leading spaces and tabs are stripped", "final_sentence": "if this is set to true leading spaces and tabs are stripped"}
{"comment_sentence_id": 698, "class": "Permission", "comment_sentence": "the delete permission limits the ability to delete an object.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the delete permission limits the ability to delete an object", "final_sentence": "the delete permission limits the ability to delete an object"}
{"comment_sentence_id": 403, "class": "InvalidBasesError", "comment_sentence": "a model s base classes can t be resolved.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a model s base classes can t be resolved", "final_sentence": "a model s base classes can t be resolved"}
{"comment_sentence_id": 2411, "class": "Argument", "comment_sentence": "and are required by default.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "and are required by default", "final_sentence": "and are required by default"}
{"comment_sentence_id": 5262, "class": "LBFGS", "comment_sentence": "step default max iter 125 .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "step default max iter 125", "final_sentence": "step default max iter 125"}
{"comment_sentence_id": 3473, "class": "PacifyFlushWrapper", "comment_sentence": "of the python interpreter.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "of the python interpreter", "final_sentence": "of the python interpreter"}
{"comment_sentence_id": 2670, "class": "Environment", "comment_sentence": "will reload the template.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "will reload the template", "final_sentence": "will reload the template"}
{"comment_sentence_id": 3813, "class": "Retry", "comment_sentence": "or per request which overrides the default for the pool", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "or per request which overrides the default for the pool", "final_sentence": "or per request which overrides the default for the pool"}
{"comment_sentence_id": 1232, "class": "_MockPOP3", "comment_sentence": "from test@mailpile^is nsubject msg 1 n noh, hi!", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "from test@mailpile is nsubject msg 1 n noh hi", "final_sentence": "from test@mailpile is nsubject msg 1 n noh hi"}
{"comment_sentence_id": 4016, "class": "SkipTo", "comment_sentence": "include default false if true, the target expression is also parsed", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "include default false if true the target expression is also parsed", "final_sentence": "include default false if true the target expression is also parsed"}
{"comment_sentence_id": 3389, "class": "Option", "comment_sentence": "help page.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "help page", "final_sentence": "help page"}
{"comment_sentence_id": 4300, "class": "AdaptiveMaxPool3d", "comment_sentence": "output size the target output size of the image of the form d x h x w.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "output size the target output size of the image of the form d x h x w", "final_sentence": "output size the target output size of the image of the form d x h x w"}
{"comment_sentence_id": 1656, "class": "CategoricalDtype", "comment_sentence": "ordered", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "ordered", "final_sentence": "ordered"}
{"comment_sentence_id": 4296, "class": "AdaptiveMaxPool3d", "comment_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes", "final_sentence": "applies a 3d adaptive max pooling over an input signal composed of several input planes"}
{"comment_sentence_id": 337, "class": "ErrorDict", "comment_sentence": "a collection of errors that knows how to display itself in various formats.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a collection of errors that knows how to display itself in various formats", "final_sentence": "a collection of errors that knows how to display itself in various formats"}
{"comment_sentence_id": 415, "class": "ListMixin", "comment_sentence": "note that if get single internal and get single internal return", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "note that if get single internal and get single internal return", "final_sentence": "note that if get single internal and get single internal return"}
{"comment_sentence_id": 422, "class": "ListMixin", "comment_sentence": "temp list items", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "temp list items", "final_sentence": "temp list items"}
{"comment_sentence_id": 2580, "class": "Environment", "comment_sentence": "the string marking the end of a block.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the string marking the end of a block", "final_sentence": "the string marking the end of a block"}
{"comment_sentence_id": 140, "class": "BaseCommand", "comment_sentence": "self^check app configs from handle , where app configs", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "self check app configs from handle where app configs", "final_sentence": "self check app configs from handle where app configs"}
{"comment_sentence_id": 347, "class": "FakePayload", "comment_sentence": "length.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "length", "final_sentence": "length"}
{"comment_sentence_id": 488, "class": "Migration", "comment_sentence": "replaces a list of migration names", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "replaces a list of migration names", "final_sentence": "replaces a list of migration names"}
{"comment_sentence_id": 5116, "class": "EmbeddingBag", "comment_sentence": "examples", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "examples", "final_sentence": "examples"}
{"comment_sentence_id": 1278, "class": "ConfigDict", "comment_sentence": "3", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "3", "final_sentence": "3"}
{"comment_sentence_id": 3889, "class": "Retry", "comment_sentence": "whether to respect retry after header on status codes defined as", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "whether to respect retry after header on status codes defined as", "final_sentence": "whether to respect retry after header on status codes defined as"}
{"comment_sentence_id": 3882, "class": "Retry", "comment_sentence": "been exhausted.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "been exhausted", "final_sentence": "been exhausted"}
{"comment_sentence_id": 3746, "class": "Request", "comment_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request", "final_sentence": "param cookies dictionary or cookiejar of cookies to attach to this request"}
{"comment_sentence_id": 3620, "class": "Path", "comment_sentence": "this means", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this means", "final_sentence": "this means"}
{"comment_sentence_id": 951, "class": "Audio", "comment_sentence": "default is true .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "default is true", "final_sentence": "default is true"}
{"comment_sentence_id": 3706, "class": "PrefixLoader", "comment_sentence": "app2 packageloader mypackage^app2", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "app2 packageloader mypackage app2", "final_sentence": "app2 packageloader mypackage app2"}
{"comment_sentence_id": 5656, "class": "TransformerEncoderLayer", "comment_sentence": "dropout the dropout value default 01 .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "dropout the dropout value default 01", "final_sentence": "dropout the dropout value default 01"}
{"comment_sentence_id": 1849, "class": "ExcelFile", "comment_sentence": "parameters", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "parameters", "final_sentence": "parameters"}
{"comment_sentence_id": 3400, "class": "Option", "comment_sentence": "prompted for input.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "prompted for input", "final_sentence": "prompted for input"}
{"comment_sentence_id": 4718, "class": "Conv3d", "comment_sentence": "attr padding controls the amount of implicit zero paddings on both", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "attr padding controls the amount of implicit zero paddings on both", "final_sentence": "attr padding controls the amount of implicit zero paddings on both"}
{"comment_sentence_id": 1199, "class": "YouTubeVideo", "comment_sentence": "will be inserted in the document.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "will be inserted in the document", "final_sentence": "will be inserted in the document"}
{"comment_sentence_id": 5602, "class": "Task", "comment_sentence": "ops^mul globl, globl , globl", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "ops mul globl globl globl", "final_sentence": "ops mul globl globl globl"}
{"comment_sentence_id": 3244, "class": "Module_six_moves_urllib_response", "comment_sentence": "lazy loading of moved objects in six^moves.urllib response", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "lazy loading of moved objects in six moves urllib response", "final_sentence": "lazy loading of moved objects in six moves urllib response"}
{"comment_sentence_id": 4499, "class": "BCEWithLogitsLoss", "comment_sentence": "pos weight torch^ones 64 # all weights are equal to 1", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "pos weight torch ones 64 all weights are equal to 1", "final_sentence": "pos weight torch ones 64 all weights are equal to 1"}
{"comment_sentence_id": 5719, "class": "Unfold", "comment_sentence": "neighborhood.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "neighborhood", "final_sentence": "neighborhood"}
{"comment_sentence_id": 3308, "class": "omdict", "comment_sentence": "retains the order of insertions and deletions.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "retains the order of insertions and deletions", "final_sentence": "retains the order of insertions and deletions"}
{"comment_sentence_id": 4015, "class": "SkipTo", "comment_sentence": "expr target expression marking the end of the data to be skipped", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "expr target expression marking the end of the data to be skipped", "final_sentence": "expr target expression marking the end of the data to be skipped"}
{"comment_sentence_id": 5936, "class": "PreparedRequest", "comment_sentence": "usage", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "usage", "final_sentence": "usage"}
{"comment_sentence_id": 2287, "class": "StringArray", "comment_sentence": "true, na, false", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "true na false", "final_sentence": "true na false"}
{"comment_sentence_id": 969, "class": "Audio", "comment_sentence": "audio path to sound^wav # from file", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "audio path to sound wav from file", "final_sentence": "audio path to sound wav from file"}
{"comment_sentence_id": 3987, "class": "SchemaValidatorMixin", "comment_sentence": "validator.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "validator", "final_sentence": "validator"}
{"comment_sentence_id": 2680, "class": "Environment", "comment_sentence": "you to take advantage of newer python features.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "you to take advantage of newer python features", "final_sentence": "you to take advantage of newer python features"}
{"comment_sentence_id": 1522, "class": "VCardStore", "comment_sentence": "vcs^del vcards vcs^find vcards guy", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "vcs del vcards vcs find vcards guy", "final_sentence": "vcs del vcards vcs find vcards guy"}
{"comment_sentence_id": 841, "class": "TestImageFieldFile", "comment_sentence": "was opened.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "was opened", "final_sentence": "was opened"}
{"comment_sentence_id": 4500, "class": "BCEWithLogitsLoss", "comment_sentence": "criterion torch^nn.bcewithlogitsloss pos weight pos weight", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "criterion torch nn bcewithlogitsloss pos weight pos weight", "final_sentence": "criterion torch nn bcewithlogitsloss pos weight pos weight"}
{"comment_sentence_id": 5567, "class": "StackTransform", "comment_sentence": "x torch^stack torch^range 1, 10 , torch^range 1, 10 , dim 1", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "x torch stack torch range 1 10 torch range 1 10 dim 1", "final_sentence": "x torch stack torch range 1 10 torch range 1 10 dim 1"}
{"comment_sentence_id": 1071, "class": "HistoryAccessor", "comment_sentence": "historymanager, below, which is a subclass of this.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "historymanager below which is a subclass of this", "final_sentence": "historymanager below which is a subclass of this"}
{"comment_sentence_id": 2854, "class": "FileSystemLoader", "comment_sentence": "loader filesystemloader path to templates", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "loader filesystemloader path to templates", "final_sentence": "loader filesystemloader path to templates"}
{"comment_sentence_id": 5014, "class": "DiagonalTensor", "comment_sentence": "it is based on the diagonalarray", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "it is based on the diagonalarray", "final_sentence": "it is based on the diagonalarray"}
{"comment_sentence_id": 2877, "class": "FollowedBy", "comment_sentence": "lookahead matching of the given parse expression.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "lookahead matching of the given parse expression", "final_sentence": "lookahead matching of the given parse expression"}
{"comment_sentence_id": 3802, "class": "ResponseError", "comment_sentence": "used as a container for an error reason supplied in a maxretryerror.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "used as a container for an error reason supplied in a maxretryerror", "final_sentence": "used as a container for an error reason supplied in a maxretryerror"}
{"comment_sentence_id": 2353, "class": "UnsortedIndexError", "comment_sentence": "subclass of keyerror .", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "subclass of keyerror", "final_sentence": "subclass of keyerror"}
{"comment_sentence_id": 871, "class": "VariableWrapper", "comment_sentence": "an adapter class for cursor variables that prevents the wrapped object", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "an adapter class for cursor variables that prevents the wrapped object", "final_sentence": "an adapter class for cursor variables that prevents the wrapped object"}
{"comment_sentence_id": 873, "class": "VariableWrapper", "comment_sentence": "this can be used generally for any other object that should be passed into", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this can be used generally for any other object that should be passed into", "final_sentence": "this can be used generally for any other object that should be passed into"}
{"comment_sentence_id": 5890, "class": "UploadTaskGroupBuilder", "comment_sentence": "a simple class to upload checkpoints.", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "a simple class to upload checkpoints", "final_sentence": "a simple class to upload checkpoints"}
{"comment_sentence_id": 3838, "class": "Retry", "comment_sentence": "param int redirect", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "param int redirect", "final_sentence": "param int redirect"}
{"comment_sentence_id": 4714, "class": "Conv3d", "comment_sentence": "out n i, c out j bias c out j", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "out n i c out j bias c out j", "final_sentence": "out n i c out j bias c out j"}
{"comment_sentence_id": 425, "class": "ListMixin", "comment_sentence": "set the single item at index i to value optional", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "set the single item at index i to value optional", "final_sentence": "set the single item at index i to value optional"}
{"comment_sentence_id": 5777, "class": "Unfold", "comment_sentence": "torch^nn.functional^conv2d inp, w out ^abs ^max", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "torch nn functional conv2d inp w out abs max", "final_sentence": "torch nn functional conv2d inp w out abs max"}
{"comment_sentence_id": 109, "class": "BaseCommand", "comment_sentence": "output produced by handle will be printed to standard", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "output produced by handle will be printed to standard", "final_sentence": "output produced by handle will be printed to standard"}
{"comment_sentence_id": 4784, "class": "Conv3d", "comment_sentence": "the values of these weights are sampled from", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "the values of these weights are sampled from", "final_sentence": "the values of these weights are sampled from"}
{"comment_sentence_id": 1049, "class": "DisplayHook", "comment_sentence": "this class does many things, but the basic idea is that it is a callable", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "this class does many things but the basic idea is that it is a callable", "final_sentence": "this class does many things but the basic idea is that it is a callable"}
{"comment_sentence_id": 2338, "class": "TermValue", "comment_sentence": "hold a term value the we use to construct a condition filter", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "hold a term value the we use to construct a condition filter", "final_sentence": "hold a term value the we use to construct a condition filter"}
{"comment_sentence_id": 4375, "class": "BatchNorm1d", "comment_sentence": "num features math c from an expected input of size", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "num features math c from an expected input of size", "final_sentence": "num features math c from an expected input of size"}
{"comment_sentence_id": 1229, "class": "_MockPOP3", "comment_sentence": "pm^get msg size evil , pm^get msg size good", "partition": 0, "instance_type": 0, "category": "DevelopmentNotes", "pre_sentence": "pm get msg size evil pm get msg size good", "final_sentence": "pm get msg size evil pm get msg size good"}
